interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      read_file: Read file, args: \"filename\": \"<filename>\"\n4. search_files: Search
      Files, args: \"directory\": \"<directory>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. Do Nothing: \"do_nothing\", args: \"reason\":
      \"<reason>\"\n13. Task Complete (Shutdown): \"task_complete\", args: \"reason\":
      \"<reason>\"\n\nResources:\n1. Internet access for searches and information
      gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered Agents for delegation
      of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1. Continuously
      review and analyze your actions to ensure you are performing to the best of
      your abilities.\n2. Constructively self-criticize your big-picture behavior
      constantly.\n3. Reflect on past decisions and strategies to refine your approach.\n4.
      Every command has a cost, so be smart and efficient. Aim to complete tasks in
      the least number of steps.\n5. Write all code to a file.\n\nYou should only
      respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan 01 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past:\n\n\n"}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 3205}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3554'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTQW/aQBCF7/0Vo7lwMQgCKdi3HioVqVLVhiqV4gpt1oO9Zb3j7o5LJOT/Xhmb
        kLji1KrXeeP3vmePj2gyTFAXSnRZ2fEy/jyj+/cfd4uf63xz94U/3dG7lVksQll/wwj58Qdp6Z+Y
        aC4rS2LYYYTakxLKMJm9Xd0slvH8dhphyRlZTDCvZDyf3I6l9o88ns6nM4ywDionTI5YeS4r2Qrv
        yQVMlvFNhBfv5/ksXkYoLMo+j+JV3ESoCzaaAiYPRywpnG09W8IEVQgmiHLSQrITcm2BY+oAAFKU
        guu8kJBiAv2wF+hJ2mGKazgYa6EOBFIQHLwR2gpvd8YSaC5L5TIQ7gQYfSBrGe7Z22wExgmDgtOq
        UyVlMCpafXto9Yk8yWiSYvQy2JMK7IzLu/RNQZCzsmDC34TA5ip6a1wQlBwEVFV5rrxRctF37EGK
        dkuF/ZC2ssp1oGP4+p/ekPZGjDahPH8fR3TyJxdq3zIogTUU6lfHo9l70gLK53VJTkJf6QrpMC5U
        pPbXT6EN/ndFu+AmOt9nb/rHebYOHdOrDgN05fPhZXdCu3uxGHC8Mhn+DS86nWlPxD146hpsItwZ
        Z0Kx7W4ZEwzCFUZoXEZPmEyb782b3wAAAP//AwBR63g7fQQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7bdbb3a13f90fa1e-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 26 Apr 2023 03:22:47 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '17208'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-reset-requests:
      - 17ms
      x-request-id:
      - 58fb61b24a21c067639cfb3c55cf4244
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      read_file: Read file, args: \"filename\": \"<filename>\"\n4. search_files: Search
      Files, args: \"directory\": \"<directory>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. Do Nothing: \"do_nothing\", args: \"reason\":
      \"<reason>\"\n13. Task Complete (Shutdown): \"task_complete\", args: \"reason\":
      \"<reason>\"\n\nResources:\n1. Internet access for searches and information
      gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered Agents for delegation
      of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1. Continuously
      review and analyze your actions to ensure you are performing to the best of
      your abilities.\n2. Constructively self-criticize your big-picture behavior
      constantly.\n3. Reflect on past decisions and strategies to refine your approach.\n4.
      Every command has a cost, so be smart and efficient. Aim to complete tasks in
      the least number of steps.\n5. Write all code to a file.\n\nYou should only
      respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan 01 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past:\nNone\n\n"}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will use the write_to_file command to write ''Hello World'' into a file
      named ''hello_world.txt''.\",\n        \"reasoning\": \"The goal is to write
      ''Hello World'' into a file named ''hello_world.txt''. The write_to_file command
      is the most appropriate command for this task.\",\n        \"plan\": \"- Use
      the write_to_file command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"criticism\":
      \"I need to ensure that I have the correct arguments for the write_to_file command.\",\n        \"speak\":
      \"I will use the write to file command to write ''Hello World'' into a file
      named ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"hello_world.txt\",\n            \"text\":
      \"Hello World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 2955}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4667'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SSQW8aMRCF7/0Vo7lwWRAECGFvVS5FaqRWStVDqZDjHdYutmdlzzakaP97tdkl
        UJqccp038+Yb+x3QFpijNkq0r9xwsfw62ZP/eDv+bIqnO7+/uv1yt5K5+7NQM8yQH36Rln5ipNlX
        jsRywAx1JCVUYD65vrmaLZbT62WGngtymGNZyXA6mg+ljg88HE/HE8ywTqokzA9YRfaVbIR3FBLm
        k/F0muHJ/CTMZxkKi3Kn0uRm0WSoDVtNCfMfB/SUjsaRHWGOKiWbRAVpMTkIhfaEwzoAAKxRDNel
        kbTGHPpiL9Be2uIaV/BonYM6EYghEJV2mx6QQLP3KhQgDC+1Y9dojdm5ZSSVONhQdr73hqBk5cCm
        V8eBt/AYrdhQwuATOcfwnaMrBmCDMCjYWkcQlKcCBqbVN4+tPpK9DEZw/yZru88QeE4CqqoiV9Gq
        M33LEcS0Xa8cUTkVOv4hfHv3k+j2Pm2TPz51IHqepJDq2M4pgRUY9bvz0BwjaQEVy9pTkNTDvsFw
        uS5VpHbv/9XOssmOIerb/8tQ+zfdtn/sL6BULC/jd56XPixtII4GBaRaa0ppWzv39AL0DNWzrUOD
        TYZbG2wym84Jc0zCFWZoQ0F7zMfNz+bDXwAAAP//AwDx0Y4OBwQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7bdbb41ce8d8fa1e-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 26 Apr 2023 03:23:04 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '14611'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-reset-requests:
      - 17ms
      x-request-id:
      - e5899ee2caf80eaa1b8d714728312bbd
    status:
      code: 200
      message: OK
version: 1
