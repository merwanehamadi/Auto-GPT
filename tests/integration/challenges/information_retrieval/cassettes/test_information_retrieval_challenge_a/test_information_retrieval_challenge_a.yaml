interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Remember to make
      very direct google searches to find the answer. For example if you want x, just
      search ''x''.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed in double quotes e.g. \"command
      name\"\n\nCommands:\n1. append_to_file: Append to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file, args: \"filename\":
      \"<filename>\"\n3. list_files: List Files in Directory, args: \"directory\":
      \"<directory>\"\n4. read_file: Read file, args: \"filename\": \"<filename>\"\n5.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3329'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: "{\n  \"error\": {\n    \"message\": \"That model is currently overloaded
        with other requests. You can retry your request, or contact us through our
        help center at help.openai.com if the error persists. (Please include the
        request ID c64f30ac1fd876c5870d43e7280c1cab in your message.)\",\n    \"type\":
        \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b90d50bc79846-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '349'
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:01:16 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '30012'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86491'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.339s
      x-request-id:
      - c64f30ac1fd876c5870d43e7280c1cab
    status:
      code: 429
      message: Too Many Requests
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Remember to make
      very direct google searches to find the answer. For example if you want x, just
      search ''x''.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed in double quotes e.g. \"command
      name\"\n\nCommands:\n1. append_to_file: Append to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file, args: \"filename\":
      \"<filename>\"\n3. list_files: List Files in Directory, args: \"directory\":
      \"<directory>\"\n4. read_file: Read file, args: \"filename\": \"<filename>\"\n5.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3329'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3xTS08bMRC+91eM5sKBTQiBBFipQiqVEFI5oFK1VVNFjneya/BjsWcJUZT/Xnm9
        oXmovY5nvsfM5xWqAnOUlWBpat27uP16Nbq/+dGIh5vHUlY/38afPt8/PXxpRuIcM3SzJ5LcTfSl
        M7UmVs5ihtKTYCowPx1fnp+ORhdXowyNK0hjjmXNvbP+qMeNn7ne4Gxwihk2QZSE+Qpr70zNU3bP
        ZAPmF2eXGf7Ffq8Ph+MM2bHQ76Wr8fk6Q1k5JSlg/muFhsIG1jtNmKMIQQUWlqNIZ5lsNLCaWACA
        CXLlmrLiMMEcumL3QG8cixO8A0tUADuYK1sAVwSeXsk2BG4OjxS0AGVhOBgO+3AHC6U1BBaeYbaE
        QMLLStkS5s63s8rOnTciegNn4da5UlN/gtk2uycRnFW2TBJSE6gAAjxpJWaaILjGy1bDNqSwRezT
        6pn0MoquxCu1xMKGBflYMkt4aSjE/n3iWgubOHvwLaTBo5J4GvcxDY0xwi+PQDpjIhM7KIlBQPcS
        1eybFK9C6Vbxlt2J3cJfeMU0ZTedK0074GEjfoPPDgTEtj0IT6I4HPfEXlEHsa1p7p1piwlqdwfS
        K1ZSBbN/f7Kh8RFM8AHiXUpHPJGUjRdM7SmauseuVwg+YAk1iecNQwpNm5X3oPwrZDupSYjrbJPn
        zvxBnK0wlMj2j7knS/hy/zOkh8brBFAx1yE/OVksFv0y6ZDOnCT11y8fOYo97tQfR8U7FAltk78E
        +T1uVIX/2r7emG0Nd74ndo3rDOfKqlBN06/BHAO7GjNUtqA3zAfr3+sPfwAAAP//AwADqRor7AQA
        AA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b94785ff9cfcc-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:03:33 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '17889'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86491'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.339s
      x-request-id:
      - 46de9ebe4e973322c0114e342dd92cfa
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Below
      is a message from me, an AI Agent, assuming the role of an autonomous agent
      that specializes in finding the reported revenue of a company.. whilst keeping
      knowledge of my slight limitations as an AI Agent Please evaluate my thought
      process, reasoning, and plan, and provide a concise paragraph outlining potential
      improvements. Consider adding or removing ideas that do not align with my role
      and explaining why, prioritizing thoughts based on their significance, or simply
      refining my overall thought process.Google is a reliable source of information
      and is likely to have the answer to my question.- Use the ''get_text_summary''
      command to get a summary of the information available on Google.\n- Use the
      ''write_to_file'' command to save the summary to a file.\n- Use the ''read_file''
      command to retrieve the information from the file."}], "temperature": 0, "max_tokens":
      0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '951'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2SST28TMRDF73yKkc9OlLT0394iAaVcACFVVAhVE3t218XrWXnGCUuV746cNG0F
        B1/s5/fez55HE7xpjOtR3TDG2cX1t6uvtxehvXt3+17uwvD9iy4+++vu081FMtbw+oGcPt2YOx7G
        SBq4HrlMqORNszy/fLs8O7tcnlszsKdoGtONOjudn8205DXPFqeLpbGmCHZkmkczZh5GvVf+RUmq
        wZU1L94v+8tTa5QV4/PWyeXJzhrXc3AkpvnxaAaSo23mSKYxKBJEMWktyUkpVYCVACZY3cCqo6QW
        Ji4ZtOfS9QpjZkdSFR4yoXAKqQMhGkAZ1gTCJfk5fOQtbShbyBSnvYQjxQk4wTVzFwlQAKs6OwJu
        IaSW84AVCwacILECxi1OUl21JxhYtNoFXEcCHqt0DjcKWy7RV9WaErXBBYy1jOMkwVMG1p7yU5T8
        k2VBiutrmTYkTPu7mUbOKsAZEm0FMGtwkcRWV0pSMgE6VzK6aQ4r70N1whgnCyGJEvqa8lBEQXBT
        6RGkDAPmqR5UmNe4yoDQhkgWgu7h15U2ExShtuxhBDeHV6CkoeYfOtWOh7pV1FcRuv0HVdNYWSJt
        MOnrwDl8CMe6z3k9xfEpKyTHeeSMSpBQS8YIEVNXsKPjAFSo/YerUoaSPOU6SR4OC+P0h/4DzaQ5
        0Ib83OysaUMK0t8fpsg0RpRHY01Inn6bZrH7uXvzFwAA//8DAMrKbWCFAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b94fd7b50cfcc-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:03:46 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '9748'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89773'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 151ms
      x-request-id:
      - 90b2ab8d5c96017ee8534591c755dd5d
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\nI
      was created.\n\"\"\"\n\nLatest Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '599'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOzUrDQBRG9z5F+NaTkvRHk9kbLRREXIlImc7cNqPJ3DFza9WSd5dCtdsD53CO
        8A4atjVi+9jlN3dPtf1cPVTbafNsV/WyqR6b22b+ff/x46DAmzeycjYmlvvYkXgOULADGSEHXV5X
        83KxqKaVQs+OOmjsouSzySKX/bDhvJgVJRT2yewI+og4cB9lLfxOIUHXU4VL+oIVhMV0/6AsylHB
        tuwtJeiXI3pKf82BO4KGScknMUFOhxyEwul+mR1Mys7HmQkuCyytD7ss0CFrTcpaEyMFchOMClsf
        fGrXA5nEARpJOELBB0df0MX4Ol79AgAA//8DAKdbOH5JAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9543df66cfcc-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:03:49 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1166'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89866'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 88ms
      x-request-id:
      - 70d4edb3fc3e392856b299e46eceaca1
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 28, 2392,
      4355, 10, 265, 7287, 10, 2366, 17, 23886, 2262, 961, 2, 16, 25, 51309, 4355,
      13254, 220, 2366, 17, 482, 5195, 7694, 5618, 4299, 1618, 422, 499, 527, 539,
      50028, 2949, 264, 2478, 6622, 13, 81372, 26496, 36234, 311, 1925, 2262, 12268,
      1022, 19815, 39076, 19952, 389, 19815, 39076, 86469, 1520, 86469, 11302, 8612,
      611, 311, 7940, 311, 279, 2778, 712, 2302, 288, 4355, 13254, 220, 2366, 17,
      3580, 810, 6571, 6571, 10577, 33781, 20492, 46112, 323, 41994, 46112, 323, 41994,
      14710, 1453, 351, 434, 337, 661, 1320, 10714, 220, 508, 11, 7467, 11, 931, 3135,
      320, 15, 13, 1399, 6622, 8, 7694, 18591, 53043, 44165, 505, 279, 3566, 5932,
      13, 20, 7239, 549, 815, 13, 11441, 90541, 596, 13254, 14264, 311, 7154, 220,
      5932, 13, 20, 7239, 549, 815, 13, 11441, 304, 279, 220, 2366, 17, 20323, 1060,
      11, 264, 220, 3971, 3346, 5376, 505, 279, 3766, 1060, 1975, 28298, 596, 13254,
      505, 47466, 220, 1049, 23, 311, 47466, 220, 2366, 17, 320, 258, 3610, 549, 815,
      13, 11441, 8, 37, 16164, 1060, 99204, 304, 3610, 549, 815, 13, 11441, 2366,
      15282, 11, 20911, 2366, 9800, 11, 23848, 2366, 18887, 11, 21600, 679, 23890,
      11, 22915, 24, 810, 7123, 6806, 12331, 220, 1114, 11, 220, 2366, 18, 90541,
      596, 13254, 220, 1049, 23, 12, 2366, 17, 482, 12442, 9265, 16257, 9265, 2485,
      1129, 2185, 31187, 9265, 916, 46733, 2564, 46733, 56120, 612, 9728, 38081, 16257,
      9265, 2485, 1129, 2185, 31187, 9265, 916, 46733, 2564, 46733, 56120, 612, 9728,
      38081, 10714, 15109, 69742, 6806, 36448, 7816, 311, 2610, 2675, 690, 1518, 810,
      6498, 1457, 13, 3639, 374, 28298, 9974, 13254, 30, 22186, 28298, 1304, 264,
      11626, 220, 2366, 17, 30, 3923, 374, 28298, 596, 13254, 304, 220, 2366, 18,
      30, 36448, 90541, 38493, 220, 679, 15, 12, 2366, 18, 765, 350, 8143, 1428, 582,
      4744, 79717, 2485, 1129, 2185, 62925, 4744, 79717, 5181, 46733, 23301, 46733,
      27223, 46733, 13254, 20122, 4744, 79717, 2485, 1129, 2185, 62925, 4744, 79717,
      5181, 46733, 23301, 46733, 27223, 46733, 13254, 90541, 9974, 13254, 369, 220,
      2366, 17, 574, 400, 5932, 13, 20911, 33, 11, 264, 220, 3971, 13, 1758, 4, 5376,
      505, 220, 2366, 16, 13, 28298, 9974, 13254, 369, 220, 2366, 16, 574, 400, 4331,
      13, 23848, 33, 11, 264, 220, 2031, 13, 3080, 4, 5376, 505, 220, 2366, 15, 13,
      28298, 9974, 4194, 1131, 79338, 7099, 33620, 9787, 54664, 38, 2177, 58882, 9787,
      54664, 27977, 612, 14851, 8623, 9787, 54664, 46277, 482, 469, 15202, 3700, 12037,
      90541, 1903, 810, 3300, 304, 220, 2366, 17, 1109, 3596, 1603, 11, 719, 1202,
      2564, 578, 6383, 713, 2485, 1129, 2185, 42901, 424, 713, 916, 46733, 51309,
      4355, 52708, 19, 12, 2366, 17, 12, 10326, 826, 5621, 1131, 791, 6383, 713, 2485,
      1129, 2185, 42901, 424, 713, 916, 46733, 51309, 4355, 52708, 19, 12, 2366, 17,
      12, 10326, 826, 5621, 1131, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298,
      436, 7897, 304, 927, 400, 5932, 7239, 304, 13254, 304, 220, 2366, 17, 323, 706,
      810, 3300, 389, 1450, 1109, 3596, 1603, 13, 2030, 5292, 3252, 7631, 323, 3682,
      3430, 15455, 2231, 4194, 1131, 12041, 369, 51309, 4355, 13254, 220, 2366, 17,
      2675, 690, 1518, 810, 6498, 1457, 13, 12433, 291, 7694, 46112, 5750, 555, 4668,
      5750, 555, 4668, 2392, 4355, 5347, 3695, 4355, 1646, 2392, 4355, 5708, 2392,
      4355, 6763, 87698, 11092, 65467, 3167, 74, 2392, 4355, 7458, 33115, 398, 24608,
      7063, 6412, 1779, 2265, 860, 682, 3461, 459, 2217, 311, 3041, 11302, 36448,
      860, 682, 90541, 6821, 3335, 13254, 323, 34427, 389, 24608, 29768, 5002, 2485,
      1129, 2185, 22832, 9081, 916, 46733, 51309, 4355, 2442, 52742, 12, 10326, 826,
      52708, 19, 12, 2366, 17, 29768, 5002, 2485, 1129, 2185, 22832, 9081, 916, 46733,
      51309, 4355, 2442, 52742, 12, 10326, 826, 52708, 19, 12, 2366, 17, 18820, 220,
      914, 11, 220, 2366, 18, 2001, 28298, 1120, 5068, 11999, 58414, 24608, 369, 220,
      2366, 17, 2737, 13254, 315, 400, 1187, 13, 843, 7239, 11, 323, 24608, 824, 4430,
      315, 400, 16, 13, 777, 844, 288, 4355, 29140, 13896, 38493, 11, 65752, 552,
      304, 1229, 19, 220, 2366, 17, 14431, 2837, 8483, 2485, 1129, 2185, 44176, 2837,
      61564, 916, 46733, 51309, 4355, 52708, 19, 2269, 74276, 1131, 14431, 2837, 8483,
      2485, 1129, 2185, 44176, 2837, 61564, 916, 46733, 51309, 4355, 52708, 19, 2269,
      74276, 1131, 18820, 220, 966, 11, 220, 2366, 18, 2001, 28298, 596, 2860, 13254,
      14980, 520, 400, 1187, 13, 18, 7239, 304, 1229, 19, 220, 2366, 17, 449, 220,
      1806, 4, 44188, 56, 6650, 13, 28298, 27167, 220, 17, 13, 2790, 480, 1671, 315,
      4907, 5942, 2391, 1229, 19, 11, 4194, 1131, 28298, 1903, 459, 9974, 11626, 315,
      400, 717, 13, 21, 7239, 304, 220, 2366, 17, 84073, 7146, 3074, 2485, 1129, 277,
      5455, 2174, 3074, 916, 46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309,
      4355, 27975, 12, 1131, 84073, 7146, 3074, 2485, 1129, 277, 5455, 2174, 3074,
      916, 46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309, 4355, 27975,
      12, 1131, 4448, 220, 914, 11, 220, 2366, 18, 2001, 28298, 4756, 1202, 6020,
      3135, 369, 279, 11999, 8502, 315, 220, 2366, 17, 389, 8079, 13658, 13, 578,
      2883, 7263, 304, 400, 1187, 13, 18, 7239, 304, 13254, 4194, 1131, 28298, 596,
      22613, 87055, 311, 264, 3335, 1389, 719, 11774, 527, 2564, 45, 6616, 2485, 1129,
      2185, 1276, 652, 2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309,
      14833, 10039, 30322, 34119, 1636, 1131, 45, 6616, 2485, 1129, 2185, 1276, 652,
      2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309, 14833, 10039, 30322,
      34119, 1636, 1131, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298, 5068, 3335,
      22613, 323, 3335, 30466, 369, 220, 2366, 17, 11, 439, 279, 2883, 14971, 1139,
      264, 502, 1060, 13176, 264, 1396, 315, 32366, 11774, 13, 28298, 38493, 320,
      87708, 398, 1680, 220, 1419, 13, 1644, 33, 369, 5587, 220, 2148, 11, 220, 2366,
      18, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733, 350, 8143, 32,
      46733, 30466, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733, 350,
      8143, 32, 46733, 30466, 644, 8149, 1684, 1139, 28298, 38493, 320, 87708, 398,
      8, 2737, 13970, 828, 505, 220, 679, 15, 11, 27223, 323, 10691, 13, 2564, 6250,
      220, 966, 11, 220, 2366, 17, 11, 220, 1691, 13, 1774, 33, 13, 5651, 220, 966,
      11, 220, 2366, 17, 11, 220, 845, 13, 6365, 33, 5253, 12490, 40638, 596, 28298,
      8220, 61437, 220, 2366, 17, 449, 3831, 220, 19, 339, 2564, 19816, 3778, 12,
      24137, 1543, 2485, 1129, 2185, 53247, 1543, 916, 46733, 5557, 46733, 220, 2366,
      18, 14, 1721, 14, 1627, 83489, 3778, 12, 24137, 1543, 2485, 1129, 2185, 53247,
      1543, 916, 46733, 5557, 46733, 220, 2366, 18, 14, 1721, 14, 1627, 18820, 220,
      1627, 11, 220, 2366, 18, 2001, 1789, 682, 315, 220, 2366, 17, 11, 28298, 596,
      13254, 16392, 311, 400, 5932, 13, 20, 7239, 11, 264, 220, 3971, 4, 7940, 927,
      220, 2366, 16, 13, 28298, 1903, 400, 18, 13, 3076, 7239, 304, 1202, 11999, 8502,
      11, 459, 24257, 400, 16, 13, 777, 4194, 1131, 7816, 311, 2610, 2675, 690, 1518,
      810, 6498, 1457, 13, 37957, 11948, 27573, 2675, 690, 1518, 810, 6498, 1457,
      13, 28298, 13254, 21964, 36448, 2392, 4355, 13254, 323, 2848, 1468, 288, 4355,
      13254, 220, 2366, 18, 2392, 4355, 13254, 304, 220, 2366, 16, 2392, 4355, 13254,
      220, 2366, 15, 2392, 4355, 4272, 11626, 220, 2366, 17, 2392, 4355, 13254, 6650,
      2392, 4355, 13254, 220, 679, 24, 2732, 18464, 7816, 3135, 22170, 1578, 27575,
      26496, 24599, 2287, 11, 64912, 263, 11, 9362, 4194, 12, 4194, 3915, 701, 6933,
      2686, 4194, 12, 4194, 4387, 3813, 12978, 11764, 11302, 48932, 44228]], "model":
      "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7375'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SaWQ+ySrumz79fsbJO6S8gIvWwzphkllJwwE6nA4goiMhQBdTO/u87+nZ2Z5+Y
        MCQWVc9w31fVf/zrr7/+brOqyMe///nr79dzGP/+X997t3RM//7nr//9r7/++uuv//j9/o83iyYr
        brfnu/y9/nv4fN+K+e9//hL++87/f+mfv/7eCgoQ0cQmEjPxpCIXxVH4Ss+rmNVz6IGp8gkNKTJ8
        tpFuT7DE9EiduS+NidzxAKtrd6TeQX9ky4EeJtCuXEIN6XUyJqjyFM2vgsdbRFV/ee/dFLD4OlM3
        /ewy4RKvF8Q1rxvdFY5tDHejG2DnmFkod6JTMfOAEpTE5pEGxD73TFHPBCIt3eFAvEhozOt3gUpn
        4rFXdRabcWE4inoSttR7LY7BxnkOFCmN94S5uI7H24XKcBuSLcaXmPbV93sQyvOYupKyiUdPegRw
        MdEK73qvR3PYewS8fVVQA1+2MS3LgYPVtT3iw0Z3/X7Olg4WoHkoh3LpL9kocMpR96SQH1Ybf+rq
        0APn1s40jM2kH14fs4HJ5e7YLtM6ple+KwFj7GJ151fZ4johIGRZe+oWF5xN1945Q9lvXGwceyee
        51QcYEYrnaw/QYMWS90JiN3GF5GfTRMv7eJ2cOUaRrrgw/esO+5zlM33MuS5a+H3zcVW4XprOmx6
        bmqQzL4FcHxnBg16fhVP7mHhUM+lCg3NYRXTmJYRirdlSfVTeUBLP3cEGDcSbLbNtlrNLlcj3l+3
        NBgN0WeFP0RI+Shbuq06yRgZ5VNEVHfBdrfY1ZjH7yM0PD2Eq6K5VOOqbEOYaNDh63Zj9Q2nbRxI
        gmFPD5v6E7OqtFT50OlqOO1Go59CIizQ8OOBbiOL+WRdNCJEvupi9VJZlfi2P2egSpDgzCqZPzdJ
        BLAUfEDN04vzZ0coO6Ba42H1uH37nbY1IzgSmSMfd+vE68v1McCjPtzD3ZvrDJa/+mQznUmDtXf4
        6EkTOAJUPfj46r7banLVRQRVFMJQ8HdpxZZL7AHoQ0vdYoP7adEnAD0hcygrwRRPh9dqArIMOi7u
        tWKMnNCrKHlAHvKrLcqWLd11oF7AIhGv8ll/pu4R6kzIyZpXQ0MMpf0Elh5pVOMstxfe3DaCVwkb
        rKn4bCyk9FvAPb/Hdt011TdeCBSrqcbJSTr7THZvRI7K/YnuNJYzNvqHHPpDu8bbzfqRTbYQefy7
        v5ShUEtV1ZmwC2DtJiJ26hKxEbSuhUZ578P6OenZujDMAJ1EPw+Xu7TyxzuZCrD0vUZ3bqJmU5X3
        HEj8I6NGtnbRMIlJhH7xjt8P0R8+cahCaXUcQeKjqth+5I/ydz6xdsO8QSSVemBrakpVx9bZQi5V
        A7ec5wnjZ7FiW4ZauJl3hM0qevaz/jw/IdlzMfYOtVZNt0aTFGoQn3rIpEazZ/MeFgEnu3GMRn/a
        DFkCFwIqdg289f/kX7xKZ+pIhlEx9X6V4Hk+zDTwqPcdz9uBUnxgknjcEi/nB4ogOJsutpvnK/vm
        o4jSJ7Vp0F2Pv/F1EBT1jqbN0YnFzfOdoP28HYnMNzRm0dkxYa7OHDXC1dYYYXrmsFh3J1xfw2fF
        tmmcQ2IGAT7LWETLTtgHm/pSp1h9oM6Yd2qXQi0PNdXKWs3WcyZ36PTJTmTDaVe27NlmL5vOLQ7R
        6mYYq83mUcD1TnpsEtJUp7efpaDN51f4wP2GddSrdQg+QRwK5w/X03UqLKAia081xLXZ9LCrvSK9
        jQv2kImNtfIsAA67FSPg0c6fqqMvoUhLdvR6fAwZq/BWhoJ1VbheDX5MZPNNgF9dxO94y4zc8pMM
        EfFiasi84I8r29HlqRXeOATFMViJBxE+gnqm6pbXqiHvPgk6KrMVlveDUw30tfeUfftuyWz4p2z2
        IjcH56iuyN1BQdYk/FFFPsoNqq53sz/UeEglWpMj9VKpzoadecxBvRcaDnzWVcOl5mV4ZCyllrex
        /KV9uKU8nJhHqtOu7Zf6qqbK8Hwc8LblkDFol/0ZQjWfse47YcysE+JATnMtNPNWiyenkJ+wPsiI
        NPZYx4OoLDnMPjfjrXRQv/U5yaFXO/LNjw9b7uW5AMHGjGzkVWIMNa5TUAbbwlqXVvGwvi8TIhtr
        i0N3OqFhspMClhhjMp/XqF9Gqy/ku5p22HiviEGQnpiQtXyGt0EZxQz7a/PXf3Fw+oyIGIdaQnA1
        eyI9k7RiR1AlWPMfj26tjvrj3dkTwM7aopqwWIiolcEBReaFTPHK7JfjKWoVX39MVBtUM5vl4SHJ
        VOLOVG3jXUULubagiNo05EJVMqbqaEiKOgQOjY9u689B8TThwnMuDa6byZj5d5VDVo9XrBn+KV7c
        dTihjxVZBM5+6LPN+5agzeNBqJ1ZWjYzuk5RIgYF2WTjyNi3PyNqDD7V++PVn8jdHkDtLBurRsH1
        7aJLANVyxtgZJs6YDi9lQl+9gA8ob43P4ekTOZhJQtBNRvGkrvY6kKnWqNO1ORtGxU7gAXOFtwc9
        6hcIpUHOz7Sn/nTVK5HTZg/6eJGo8zjKPpmGIYKV9MwJzHGSfehZdKDYSjE2uPFsLNXaMdE5y94E
        zPfH6DaMlqh+BiU24q2djbDRSyQkO8C2zxDrq9LSoSrDkMy//hi91QAVqXcKm9ht48V+WtYffebd
        oWYjunh7ECO1C9fd8u5prVtH2ASHZ1ju/CoebsGHoENl89jxuCVjd9Gsf/EWKkVnZ/OqbANQdVeh
        huNXbHbPJYc4eX0nUe1cqrkw9x767OXgq/dWBnVvKxN2tHh/+6XW/6mv336P3ZMxVI0Gg4esT7cj
        wr1W+4mHUwfhdNKxGd9yxGLXeYI9TiV1L3zPRkHlm40qDDscxcm+n5x3WoN1cFx8CznNJ5NSp6hR
        Xnuqn/XFmG7kA0rnJVec9IMSt8JmI8HIrn0ouNtrtfTzk8C6ZAZ1H9XBn7tW8CDL8ZHw1SH+kw/S
        Ke9DGp73cjxf8+YMaln4BPT7GxFlkgDKw8EMhUl8o7mWFwcZ+crEO5aGxmSlMyjG6+SG9c3TKiGy
        RVORS2GLd+W+zfrumBRQY/OEMdrl2ehXbg2vNheo6e/SfmLWpoRO8j6ERdXbmMW4bBXvoz3J/J4e
        qBs5/4z2w6oj0gbp2dDULwu++jnU+KGLP9/5Qo9Su1G18YOMPsddg0RNfdA9vWOf2CwM4ZgvCt4h
        ZzLqFm8LZeq4ltoXzKNZHj4yoHm404skjQbzl9UCv/W1LshDg3neJAge9fTnen1/BTkcxMnG59d9
        7ws83DqYbLEI4U1jgxnvWAfLTHSqszqL2fC5OuC4KcVqHJvZ3HlQwCctHboXDjP6+QfUcieEdTsd
        4pnXDAKICSXF7euMJk2ZTEhi60j9NuIYu1w/5Bcv2IKL5E9NXAP6xjcN5HfmD4Ea/1l/7PENzpYh
        7lVU37gb1Zx7Es/f/AJrlHE4OfYTzRf71UEe3T+EK9sbG/YPJUCpG25oEJx8n4AiPSEMj5TuIu/J
        KPbXFqTkblJ3uB3RkFJVgueNDdS8eY9qMpWDh6T8esBW7Dox06u0gDqAI5HiSUDzqK3yP/p1e3te
        jKUJHBFyV6m//epgUOdwLJQOkp5qH8nwRU7beLL8Mm3qlcE7m3eunoOq+wrh3sI9Y6fmsVc+prOl
        x/3jVrEw4VrkGPqAt3OoxPNZfOWQfPIL1oan2YuS+vbg+DDUcPTtez+/uGWAvnMQDT1BjNljHk2g
        c57hqDJFNuToU/70Tpi86jybajwkIN6llqp35jAmpycR4kEesC5ON39Knu0eAnQ+Yo2RxhjkN5Ng
        YsVIFKEgbNypXQLqEDp0Z/JcP9waTQaXfxyxd26f/jKOfgDyEyx69VwHrWIyHH/5GMr2Ka9YxW0H
        kK15g81MLzMmnW97+KRPh5p0eft0y1gHnbNPqH5pIyRk10ek/OqJU5cZmpb84CgwFRJ27GWqWFS0
        HtptuRTv6BB813t6Ksg7R/inF5i1y2T0Dt9XqhFnm83Q6incA+dNNu62jdlHsUXoaFtjR7FNXzjh
        dQhGPwbYLe/7fmriAaCMsy029w+lmldlGSgSYwWBJKbZgjzJA+wpNvYP6ZkR2aQDRNJy/dPv553r
        FSDEvBx+hPFiTHSyRfj5L3U3VtW8XrXS5kaeFg56/pTNpnNJYZ+tH6SOrnk8JakTAkC4wkb8fldU
        eRYcICaWFA+rq7F66+wIv3j96sOeCVlMwH6qFeHu9e1P/G/WeNlQX99PaGHVa694x7mkavXo2BJK
        yQTX67GlybJTM+Y/Vq2s5eY1XLVcZnz7+QLswbek03ZZNcUf7oxqEF909xA/PvUXZQHnIAuhnQx6
        thYi1CFxG1XYyv1dzPR+eSoXRXDojhMX/0MFRYQj+mypz9a6sVxu2QTL6bSn26K59Oyz7B3lMDha
        OAmHmX31tgVF7xTYpeiYzdjsAPKUH6kboT5e/ACXsHI6H/uDW2aDLUTOH57hLDs1ZsGRM1GQHn2q
        ff3/erEyFX3rRajg8pHR/rWvAbywChdN6Hu2CnMHmuSypcG2d/v+V6+q5YhxsrNYNd2CxwDiyhFw
        OPEVmt3QkWBtR6tw8/WXbaPXAgSfMKbeVajQHKFKhkSwbthYdnO/PKzLEcgrU6hqXlU20VfiARzF
        D+m/9fGz0bUaLNVRsbXxz9mQPd0jrKyn98cfTOmpJMq1AkJxps09Yxp6gqZYT+qTwyNeAoInkHkS
        /NF74mSZJeLYqcZ/8mmepQUWYZdQ7bxG1fTLb5JvJIwjTP3Z2ZaCArIpkO61tMYsPHkRKjxzGB/8
        sPozXpUcXZpWjtXTwjBDhWveNxrYVRuP17EpQN0hORSy8W4wzrxE4K8sleq1s66oqOU1uq11n1pt
        f2BLkErqL77+1OvZF9wBhdNFD0F+I38J3/sOxsK9Y3c1r/tevOcRxHb3CPmrcjDY9omeEJ1ajO37
        2ajEX/25ZyqlRrx9x0sn6oEySOhIv/yoohvpVkLu8jVRvvFIzijOYZrPA3XzOayEjYBy9OnLw7f+
        WX7ndTjYxFH0puHEG2j2NO2sNO/dLhRmuY2nttw2ypef4N05fflEog0HRBAMqhIlREzTogDJZDDo
        ESIfCZx728tfvkNaYa2h1WbWEnh2FcP+5blGU1vuGpQKKwf//Mu8ShwHwgRWOO7utOrm1lzktVK5
        2CXrGFHpfIpAM+oT+dYXfz4ZowmZrUTUsw65P05vbo9+fu/trKFfxLSJYNz2Gd05omqs7vxUK0W+
        P4eo8ZSeGIdBBuPz8vGf8aP+xqGCtRWR3nlmDNv3XMI3P+nhyzNavj89kbeaP3i3euJsPr/GMyqF
        a4itrpqqoXqZ6o9HYl/6mEzIVM0C2+vOBCa8RoxaM6AKM46wT4aNRad1DalyCQhUu4g1fflslDP9
        fL785FNN6vUNoK2aN5HHsvMHZZsPYMr3F965ctl/LHRf0MF9zUQ055fBzutPCnpo9V8/tWSz7aln
        QEV9DHmL+casDB6AMNw4Apc5RBPjDimEVYPo7iiY2exJnwCVPXKp2ZrbeM2fLimQzYfHNpgh++aH
        gI7JE5Hxx5/6fHoqX72Pd/r6li0nXgZUfmYHh81WNURuc9ABreBBmDOaxlSsdR2ul+D9y8d+gCpP
        UDToEf7qhXjO4/cZOsn50O1rucZjtxH2iutnGt6dznX1YcV6j5bPO6Lel1cQ6g3qz6+H0/lu+avi
        tN8rg++b1P7yqD/rT15XBfthuPJndXcTYQcBodngqvHyyZ8qsrnpg7Ui5vvZXF8COC6GS5Ss2PYL
        DFIKbtnvyCa6+gad65TAfb2IRJmFMR761iKQ7nJEBJFz2AxTl8N2uK/Dpdsn1bz6OHuUr0eBmvvH
        rR+bT2Yh1J8zvO1lOR6VwePQl1+QYYd69nlx8gB+9dhQ+xo++/abH7DypoCmtPUNQmZjAslAOxrK
        q4YtNKs9JKPCoxZbs+zHl+TG3BrYLiLDX1+6h4i+fpCI0zVGs/v+WBCV0YkI09HuUU6MHL58ORTp
        ifk96k8A1T00sdeJbTWvR0cETl7dw/7abfyxMPcOmM49prb5TrPJSjccqg5ni/Dt68zmJkk5+PHu
        2yKNbEHZFAFrcIdxeRJ6NsdRDbdY1oh8e77Y8uN3+PTa/cm3KUq4QO6HPYTi3Q76abNF7ebHS49p
        qfrThKcnenjsEDYjXbKhvOkyaA250x//myQNmeDJRh926dk05jD1aqBlERGpcJJ4Sk/tAPqqkH5+
        s/ogy/Ng5bQ+Pl2GGAnDxhJgNnMRq/N7HxPsJgDFvrziXH4jowuqval86zF1rcxCq7ZGDVAlTHBA
        bLGfJaw56FtfaPGNf1oczTP89EPw2B7YfGC+iL7fH775Zxgv46rfo289o2GoJv63H3ug3nONHjO9
        jJl63giQI0WkhoG0eP0ctw2k3U7HOrcuEbvZFUHmCafYnR+neC67BH7++1eP+iFTXROx7e7xnc+h
        Z0O5MdENRTvCfQ4PtpwNVKMvj6KhrjP00Q/nFNj1VhE+fy89i131Cf79IOKv3onXQM9PMJT1Dpvu
        dlOxrx5CpVkqNH+tj1mrOm8BinF/D/HjuvKnMBBKGKPr8w//o/zpnsBVFWp8Drc2WxPuKgK8xCWE
        vDpU8yuXC9gFxxvNv3pTuOh8B2yLH6GMXxxbdud9qfzqmzvcBDTdkVdDurE9+vVP8boqQ1Wm/PlK
        t5eBIdq/khr1rSrjS+I9f/21VS6764a0X3+65sz7/o//Ug/Zq//y7fY3f9TyLlskPlZ3T/rxvTt3
        LYw5boIIPaTHg1oTOvqflGsa+PJ/wtNZyhZemEt0D/dtyK3tGi3HU9r9eOx3Pfa9oCmSicp3b5Pp
        olnZ7AxOA7eydeiBH7xMjBxZR1MrvsnlEzSMrHcNgQsPLmHFo8+mjYAK+MzSiapiPzGykl4Az3M8
        h0vixXHnOhYHpxmlNIgfQz/3gzBAfSUZtbarVzXv1/0RbolnYPWiNTG1HSGFX/x8+VP1Ge4rB4VV
        jbB9Kst+mYZhj+JMqmguXhLG1PfMQSLnJVVNpBmrwkw89O3XVN2clmxC0TECsjG3WBOWhs1hqje/
        /vXjbf3Xr08wrQml9t4oYmacUwkO1ZbH1swfq2nipCM86vhOVjz/zJixWwSYU2FDyv3mFZOzgRq4
        Qr6QT0sjJFzNtob3xS6wAy8DTdpdSiC1LQkbybWLJ12bCOpdbyGzn60rhuBs/fwE1pZuW7WXmF/A
        1vSUhnYr9FSUIN/8+IEeEBqPX/+Dvvop7L77I6N0+QQ/fhROtdFntOemSWledhD23Lxl5CoLJUyB
        WdJzndGKtZndoIc3HyhOtssffS6nouJShxtNRmgcmPLXj+NQ5VhMfvuPr02hUE8UAjRs79cC0Nu8
        UuPG+/6UM62A9rVaU9NSkniu9lcBXj4ZQymejmz67bdsjvObOh4XZa/Dte/gdljUn5+upvUkS7Bb
        w0A9anls5YaqpJzDT4l9Pm78ycj2EkoPA4dtMfR7oVjrqvwbv72Ubj96kZaDIV4i8rGUt/Gt73vl
        lkZmKJxehd9/68OPt4WCulpn83BXHPjub+Dwc3ggunnfUiSxuQhX7nGqpjvSa4W3Xw396kFG1SnS
        oTvpd+rd1Fc/i75Twx10iawv+M7oj0f7VbUJFZMvfvF8Rry/aol25IEtlxcT5R+fC5u3mon62UzB
        TXznz/4fHey9DNf70NMoEqf4k3Kk/vFH7E1eX82JTHTE8fYjlIT1A01hACVIlhbSHS61TFy8nQWS
        Ngf40EFVjZv2c4T7tEfY/PYnMXIWVXHTg4vVqcKMOSwfkJFSI2zWxsof1peUALLMPQ6vee7P9/X+
        +Ydn6ApTMxbaYonaqz2RWbePbGryrap85xO7knLNlu/+DCRmGHz5qhvPouwkcFie2+/+YtMvL+R0
        oO42MlmXqRkv2q4+gv+eUSgv0VDRS/cRQMB0jfVXkBhT4Xjhzx9hg7Eonh5ib0F7Oy3YPtgFY50v
        pRC+BqBGpDXs8xQ3NbCH0oazdbn4YqhKMvDHyxh+0Ebqp+fi18jQA55uOz2r2D7nQyTgcU1dz3XY
        3NasgZUQpQTUjW2svuOXT841+K1nP8drMwVtFx6w+/OXP7399+9UwH/+66+//s/vhEHT3orX92DA
        WMzjv//7qMC/01v6b0EQ/03FPycRyJCWxd///L9DCH9/+rb5jP93bOviPfz9z18rETZ/Dhz8PbZj
        +vqfT/71/cf//Nd/AQAA//8DAIpC8nDnIAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b95fc1ba3cfd5-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:04:17 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '511'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 2e9e8c886ad29592b7f7a4e41a32f264
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"tesla
      revenue 2022 - Google SearchPlease click here if you are not redirected within
      a few seconds. Accessibility LinksSkip to main content Turn off continuous scrollingTurn
      on continuous scrollingAccessibility helpAccessibility feedback Press / to jump
      to the search boxtesla revenue 2022 See moreDeleteDeleteReport inappropriate
      predictions Filters and Topics Filters and TopicsNewsImagessolarytdAbout 20,900,000
      results (0.60 seconds) Search ResultsFeatured snippet from the web81.5 billion
      U.S. dollarsTesla''s revenue grew to nearly 81.5 billion U.S. dollars in the
      2022 fiscal year, a 51 percent increase from the previous year.... Tesla''s
      revenue from FY 2008 to FY 2022 (in million U.S. dollars)Fiscal yearRevenue
      in million U.S. dollars202281,462202153,823202031,536201924,5789 more rows\u2022Mar
      17, 2023Tesla''s revenue 2008-2022 - StatistaStatistahttps://www.statista.com
      \u203a ... \u203a Vehicles & Road TrafficStatistahttps://www.statista.com \u203a
      ... \u203a Vehicles & Road TrafficAbout featured snippets\u2022FeedbackMore
      to askYou will see more English now. What is Tesla annual revenue?Does Tesla
      make a profit 2022?What is Tesla''s revenue in 2023?FeedbackTesla Revenue 2010-2023
      | TSLAMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueTesla annual revenue for 2022 was $81.462B, a 51.35% increase from 2021.
      Tesla annual revenue for 2021 was $53.823B, a 70.67% increase from 2020. Tesla
      annual\u00a0...\u200eNet Income \u00b7 \u200eGross Profit \u00b7 \u200eAssets
      & Liabilities \u00b7 \u200eEPS - Earnings Per ShareTesla made more money in
      2022 than ever before, but its ... The Vergehttps://www.theverge.com \u203a
      tesla-q4-2022-earnings-re...The Vergehttps://www.theverge.com \u203a tesla-q4-2022-earnings-re...Jan
      25, 2023 \u2014 Tesla raked in over $81 billion in revenue in 2022 and has more
      money on hand than ever before. But flagging demand and major price cuts put\u00a0...
      Images for tesla revenue 2022You will see more English now. Guided Search FiltersFilter
      by featureFilter by featuretesla semitesla modeltesla stocktesla salessemi truckelon
      musktesla vehiclequarterly earningscar saleselectricView allSelect an image
      to give feedbackFeedbackView allTesla reports record revenue and beats on earningsCNBChttps://www.cnbc.com
      \u203a tesla-tsla-earnings-q4-2022CNBChttps://www.cnbc.com \u203a tesla-tsla-earnings-q4-2022Jan
      25, 2023 \u2014 Tesla just reported fourth-quarter earnings for 2022 including
      revenue of $24.32 billion, and earnings per share of $1.19.Tesla Reports Record
      Revenue, Deliveries in Q4 2022Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Jan 30, 2023 \u2014 Tesla''s total revenue stood at
      $24.3 billion in Q4 2022 with 37% YoY growth. Tesla deployed 2.46 GWh of energy
      storage during Q4,\u00a0... Tesla made an annual profit of $12.6 billion in
      2022Ars Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...Ars
      Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...
      Jan 25, 2023 \u2014 Tesla published its financial results for the fourth quarter
      of 2022 on Wednesday afternoon. The company brought in $24.3 billion in revenue\u00a0...
      Tesla''s profits soared to a record \u2013 but challenges are ...NPRhttps://www.npr.org
      \u203a 2023/01/25 \u203a teslas-profits-soared...NPRhttps://www.npr.org \u203a
      2023/01/25 \u203a teslas-profits-soared...Jan 25, 2023 \u2014 Tesla reported
      record profits and record revenues for 2022, as the company heads into a new
      year facing a number of steep challenges. Tesla Revenue (Quarterly): 23.33B
      for March 31, 2023YChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a
      revenuesYChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a revenuesIn
      depth view into Tesla Revenue (Quarterly) including historical data from 2010,
      charts and stats. ... September 30, 2022, 21.45B. June 30, 2022, 16.93B.Elon
      Musk''s Tesla finished uneven 2022 with strong 4th ... Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Jan 26, 2023 \u2014 For all of 2022, Tesla''s
      revenue rose to $81.5 billion, a 51% jump over 2021. Tesla made $3.69 billion
      in its fourth quarter, an adjusted $1.19\u00a0...More to askYou will see more
      English now. FeedbackRelated searchesYou will see more English now. Tesla revenue
      ChartFeedbacktesla revenue and profittesla revenue 2023tesla revenue in 2021tesla
      revenue 2020tesla net profit 2022tesla revenue growthtesla revenue 2019Page
      NavigationMore resultsTry again Footer Links94566, Pleasanton, CA\u00a0-\u00a0From
      your IP address\u00a0-\u00a0Update locationHelpSend feedbackPrivacyTerms\"\"\"
      Using the above text, answer the following question: \"What is the revenue of
      Tesla in 2022?\" -- if the question cannot be answered using the text, summarize
      the text."}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5201'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yQTUvDQBCG7/6KYdDbNuSjacPeCkIVj5UWESnbzTTZmuyE3YlWSv+7VPy6DbzP
        +zAzJ3Q1arStEdsP3WS+XC1m64c7f1gvx82mWcl8Y+8Pt4tj80SokHcHsvLdSCz3Q0fi2KNCG8gI
        1aizWTXNyrIqK4U919ShxmaQSZGUExnDjidpkWaocIymIdQnHAL3g2yFX8lH1FmRVgr/5L9BMVUo
        LKb7h07zs0LbsrMUUT+fsKf44w3cEWo0MbooxstlS/ZC/nLBwloOtfMNCIO0BEJHUV9ToDfyIwHv
        4ZFiZ8B5yNM8h3cT4brKkuksh53rOsdewXvrbAsugoEyS4ryBpy/PCMS7AP3X8Yh0JvjMcIHmZDg
        WeHeeRfb7YVjjxqj8IAKna/piDo9v5yvPgEAAP//AwAm1I0qnQEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9600dfb6cfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:04:21 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '3706'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '88761'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 826ms
      x-request-id:
      - d2d45897833f34baaad00207c2d98854
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 28, 2392,
      4355, 10, 265, 7287, 10, 2366, 17, 9059, 12399, 961, 2, 16, 25, 10771, 311,
      279, 1495, 11, 279, 13254, 315, 28298, 304, 220, 2366, 17, 574, 400, 5932, 13,
      20911, 7239, 11, 902, 374, 264, 220, 3971, 13, 1758, 4, 5376, 505, 279, 3766,
      1060, 13]], "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '383'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9618cdffcfd5-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:04:22 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '283'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - e8d413866ec00b476b005398307d2009
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"According
      to the text, the revenue of Tesla in 2022 was $81.462 billion, which is a 51.35%
      increase from the previous year.\"\"\" Using the above text, answer the following
      question: \"What is the revenue of Tesla in 2022?\" -- if the question cannot
      be answered using the text, summarize the text."}], "temperature": 0, "max_tokens":
      0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '415'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOsWrDMBQA936FeHSUjazEjtGWIZQO7dBmSUsJivwSq5H1jPXSuAT/ewm06Xpw
        x13AN2DAtZZd14ds8fC6XG6+m2q/ejrac9o8r1/K4/jYLfTbCBJo94mOf43cUdcHZE8RJLgBLWMD
        pqjqeVGWdaUldNRgAAOHnrNZXmZ8GnaUqZkqQMIp2QOCuUA/UNfzlumIMYGplYT/9A1rJYGJbbiR
        QqlJgmvJO0xg3i/QYfqLDhQQDNiUfGIb+bpIkTFe99ctigG/MJ5Q0F6sMQUrfBRaaS3ONon7usjn
        lRY7H4KnKIV1jobGx4NgEtyiYBw5h0nC3kef2u2ANlEEA4mpBwk+NjiCUdPHdPcDAAD//wMAs9Wg
        gWcBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b961b4957cfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:04:24 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2092'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89908'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 60ms
      x-request-id:
      - 22aab80e097ab3737468549086583afd
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Remember to make
      very direct google searches to find the answer. For example if you want x, just
      search ''x''.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed in double quotes e.g. \"command
      name\"\n\nCommands:\n1. append_to_file: Append to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file, args: \"filename\":
      \"<filename>\"\n3. list_files: List Files in Directory, args: \"directory\":
      \"<directory>\"\n4. read_file: Read file, args: \"filename\": \"<filename>\"\n5.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created and nothing new
      has happened."}, {"role": "user", "content": "Determine which next command to
      use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I need to find the revenue
      of Tesla in 2022. I will start by searching for the information on Google.\",\n        \"reasoning\":
      \"Google is a reliable source of information and is likely to have the answer
      to my question.\",\n        \"plan\": \"- Use the ''get_text_summary'' command
      to get a summary of the information available on Google.\\n- Use the ''write_to_file''
      command to save the summary to a file.\\n- Use the ''read_file'' command to
      retrieve the information from the file.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and up-to-date.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4738'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4yST2/bMAzF7/sUBC+9OIGdJlnq27BiRQ4DhnV/DssQsDJja5UlT6KTdkG++yA7
        gdsEGOYjRb734zP3qAvMUVUkqm7M6O3d/btb+T67vbmb0sed+vPtfWYfPi/a6acPvzFB9/CLlRwn
        xsrVjWHRzmKCyjMJF5hn88U0m80W81mCtSvYYI5lI6Pr8WwkrX9wo/Q6zTDBNlDJmO+x8a5uZC3u
        kW3APEtnWYKD+PCwuElQnJAZSpNpekhQVU4rDpj/2GPN4STsnWHMkULQQchKxHRW2MYV9isLALBC
        qVxbVhJWmMOxeHzgJ4nFFS6hoi3DxrW2AKkYtN04X1PEgyVY5mIMS9hpY8C6HYTYrQXEAcFGG4Y2
        aFt2o1c7r4XX4tbx4QqUq2uyxXiFyUtzzxSc1bbsCe5pexJ46T0YdN5kjNtBzbHuWbzmnsOQsIed
        jqtK3KXTchCYvKpg43zsopK0PedoDNkeYQRfA/9rhU4xbh57PG/ZtgxuA184GAJtYZJOJgPyuZPy
        WrTSoT5lHmON7WxD66MqyUUAOnSWBZBSrSdh8wwRRdvo0rX1gzoAU3juk6GLuEPD9Hgyfv0f/3ub
        Xu+QnA7rGMvFXVmqubd6leMZEfny/CT7h9g7SEjEWR/51pFpLPFsk/Ox4ZoX2XQ+SbvvBN2BH/lX
        9oCHBDfa6lCt+zvEHIO4BhPUtuAnzNPDz8ObvwAAAP//AwDegk94PwQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b962c4a14cfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:04:41 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '16821'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86481'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.346s
      x-request-id:
      - 400c1f574e78ca7dccb07306695dabe3
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nI was created and nothing new has happened.''}\n\"\"\"\n\nLatest Development:\n\"\"\"\nNothing
      new happened.\n\"\"\"\n"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '713'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPsW4CMRBE+3zFamuD7gIE4o5QRDQ0FCGKImR8G+7A5zXeBRKh+/cIiYR2NPP0
        5oJNhRZ97dS3KfTGr8vp2+6FDlLOZ4vxfuZXKy6Wi+rwvnpGg7zZkdfbou+5TYG04YgGfSanVKEt
        nybDcjSaTIYGW64ooMVt0t6gP+rpMW+4VwyKEg0exW0J7QVT5jbpWnlPUdCWj4XBO/s/v8bK6sK9
        OSw6g77mxpOg/bhgS/JHzRwILTqRRtRFvTpyVIpX/6mAA/kRpdbAHDJ5FwJo7RTmcHYCtzvgYgVa
        Uyao3YlgQxQhMkQ6Q0UnCpxaiiqgDJkSZ+1jZ/CriY3U60xOOKJFUU5osIkVfaMtus/u4RcAAP//
        AwBjmggRewEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b96a70eeacfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:04:46 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2042'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89838'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 107ms
      x-request-id:
      - ffdfbd8ac7fe2c5b16029113831b0f78
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Remember to make
      very direct google searches to find the answer. For example if you want x, just
      search ''x''.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed in double quotes e.g. \"command
      name\"\n\nCommands:\n1. append_to_file: Append to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file, args: \"filename\":
      \"<filename>\"\n3. list_files: List Files in Directory, args: \"directory\":
      \"<directory>\"\n4. read_file: Read file, args: \"filename\": \"<filename>\"\n5.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that I was
      created and there have been no new developments to report."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to find the revenue of Tesla in 2022. I will start by searching for
      the information on Google.\",\n        \"reasoning\": \"Google is a reliable
      source of information and is likely to have the answer to my question.\",\n        \"plan\":
      \"- Use the ''get_text_summary'' command to get a summary of the information
      available on Google.\\n- Use the ''write_to_file'' command to save the summary
      to a file.\\n- Use the ''read_file'' command to retrieve the information from
      the file.\",\n        \"criticism\": \"I need to ensure that the information
      I find is accurate and up-to-date.\",\n        \"speak\": \"I will search for
      the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\": {\n        \"name\":
      \"get_text_summary\",\n        \"args\": {\n            \"url\": \"https://www.google.com/search?q=tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the information I need. I will now save it to a file using the
      ''write_to_file'' command.\",\n        \"reasoning\": \"Saving the information
      to a file will allow me to retrieve it later without having to search for it
      again.\",\n        \"plan\": \"- Use the ''write_to_file'' command to save the
      revenue of Tesla in 2022 to a file.\",\n        \"criticism\": \"I need to ensure
      that the information is saved accurately and in a format that is easy to read.\",\n        \"speak\":
      \"I will now save the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue_2022.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5831'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4ySy27bQAxF9/0KgptsZMN2EtvVrkWBIqs+0qIo6sJgRrQ1zTzUGcoPGPr3YCQ5
        TpwG6Jace+8hhwfUBeaoShJlKzOYfbx99/OWZkHt3//99GH6pR5tdzSbfqZb+wMz9Hd/WEmvGCpv
        K8OivcMMVWASLjAfT+dX4+vr+XyaofUFG8xxXcngcng9kDrc+cHocjTGDOtIa8b8gFXwtpKl+Ht2
        EfPx5O1lhifzU2M2y1C8kDmVrmajJkNVeq04Yv7rgJbj0Th4w5gjxaijkJOE6Z2wSyMcFg4AYIFS
        +npdSlxgDn2xb/BOUnGBN1DShiHShguQkiHwhl3N4FfwjaMh0A4mo8kExAPBShsewg1stTHg/BYC
        S9C84Var3coHS2k0qKN267Z6EZiKZVJegPLWkiuGC8ye8gSm6J126w7qa2d6NHhquwretsXk12GQ
        MX4LlhNhHRm0JOZVLXVgEIr38TyuMuS6pAF8j/waZTJ8Nt+ru3lGdZ6mghatdLTHjTvm1ptdbBFL
        khdz6vgYXQApVQcSNntIWNqln2ifdmIdgSnu+wWc58eK6f6Y/e+P++/BOt8mO15Yv6kXB+bIchf5
        uNYzKgrr87vsGuntSS4JZ9nzLRPTUNLtnlRNz7RwDTYZrrTTsVx2F4U5RvEVZqhdwTvMR83v5s0D
        AAAA//8DAESesjscBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b96b46bd4cfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:05:01 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '14377'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86485'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.343s
      x-request-id:
      - 8bfd41ed07e6bf363bb7a232009b5c38
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that I was created and there have been no new developments
      to report.''}\n\"\"\"\n\nLatest Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '761'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPwUrDQBRF937FcNeT0pim6uwKQlHblbgSkenk2UxN3gx5r9pS8u9SUbo9cA/n
        nhAbOITWa+hzV9wsnxd5vVn7l/thvtzp6un6kevVV8gHPsIibXYU9G8xCanPHWlMDIswkFdq4Mr5
        7ays67tpZdGnhjo4bLMW1aQudD9sUjGtpiUs9uK3BHdCHlKf9V3TJ7HAlVVpcXFfeG2hSX13IbP5
        aBHaFAMJ3OsJPcm/dUgdwcGLRFHPem5MrMTn/oUYb+QoSr01D2ag4LvOaOvVcNI28tYwfZvWi2l9
        zsTUGIkcyPRH83s1Jp5gtPiIHKV9H8hLYjiIpgyLyA0d4Kbj23j1AwAA//8DAGQ+lcJmAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b971eaea4cfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:05:05 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1537'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89827'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 115ms
      x-request-id:
      - b95ed804fcc7d050b42b9226a94cb848
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Remember to make
      very direct google searches to find the answer. For example if you want x, just
      search ''x''.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed in double quotes e.g. \"command
      name\"\n\nCommands:\n1. append_to_file: Append to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file, args: \"filename\":
      \"<filename>\"\n3. list_files: List Files in Directory, args: \"directory\":
      \"<directory>\"\n4. read_file: Read file, args: \"filename\": \"<filename>\"\n5.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to find the revenue of Tesla in 2022. I will start by searching for
      the information on Google.\",\n        \"reasoning\": \"Google is a reliable
      source of information and is likely to have the answer to my question.\",\n        \"plan\":
      \"- Use the ''get_text_summary'' command to get a summary of the information
      available on Google.\\n- Use the ''write_to_file'' command to save the summary
      to a file.\\n- Use the ''read_file'' command to retrieve the information from
      the file.\",\n        \"criticism\": \"I need to ensure that the information
      I find is accurate and up-to-date.\",\n        \"speak\": \"I will search for
      the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\": {\n        \"name\":
      \"get_text_summary\",\n        \"args\": {\n            \"url\": \"https://www.google.com/search?q=tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the information I need. I will now save it to a file using the
      ''write_to_file'' command.\",\n        \"reasoning\": \"Saving the information
      to a file will allow me to retrieve it later without having to search for it
      again.\",\n        \"plan\": \"- Use the ''write_to_file'' command to save the
      revenue of Tesla in 2022 to a file.\",\n        \"criticism\": \"I need to ensure
      that the information is saved accurately and in a format that is easy to read.\",\n        \"speak\":
      \"I will now save the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue_2022.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have saved the revenue
      of Tesla in 2022 to a file. I will now retrieve the information using the ''read_file''
      command.\",\n        \"reasoning\": \"Retrieving the information from the file
      will allow me to use it in future tasks.\",\n        \"plan\": \"- Use the ''read_file''
      command to retrieve the revenue of Tesla in 2022 from the file.\",\n        \"criticism\":
      \"I need to ensure that the information is retrieved accurately and in a format
      that is easy to use.\",\n        \"speak\": \"I will now retrieve the revenue
      of Tesla in 2022 from the file.\"\n    },\n    \"command\": {\n        \"name\":
      \"read_file\",\n        \"args\": {\n            \"filename\": \"tesla_revenue_2022.txt\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command read_file returned: 81462000000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6798'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6xSTW/bMAy971cQPDuBnSxZ69swDFsP7aXrYZiHgpFpW40luRKVNAj83wfHDrJl
        2G3XR/J9kDyiLjFH1ZAo07WzD18eP/rs9Wbv7h+f9reH9dP3uOk+PXyll88BE3SbF1YyTcyVM13L
        op3FBJVnEi4xz9Y377PV6jZdJWhcyS3mWHcyW85XM4l+42bpMs0wwRioZsyP2HlnOnkWt2UbMM9W
        6TrBC/mlsEwTFCfUXqD1ct0nqBqnFQfMfxzRcDgTe9cy5kgh6CBkZbDprLAdIhwLCwBQoDQu1o2E
        AnOYwKnAbzKABd5BQzuGEJXiEKrYtgfwLF7zjkuQhsHzjm1kcBV849ASaAuLdLGAyjtz6qh0y3O4
        P4BQ2IIOMCXkeYHJ77KeKTirbf2H9rl7lDtx3MGeAgzpajvgDkp3Tda1ZEeeGTw4qKKXhj2QGjY7
        uPD8GrXn8npQeS1a6WDOLiyPGmxD9AzSkMC/vZFS0ZNwewCy5dg9FLWtnDd0Up+mL4s8LcV7VnLt
        JnRM2/98iwJHhT45f4JyxpAt/3oES4ZH8Stb5OvxbfqJqrA99glW2urQPI+XxByDuA4T1LbkN8zT
        /mf/7hcAAAD//wMAmzZxRnsDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9728efe3cfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:05:16 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '10926'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86505'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.33s
      x-request-id:
      - 89541e25d8ce680da113d0cacb29559a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that nothing new has happened since my creation.''}\n\"\"\"\n\nLatest
      Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '740'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPzUoDMRRG9z5FuOtMmdhOtdkp/uBKsHUhIiXNXGdSM7kx9xYtZd5dKkq3B77D
        +Q4QWrDgeyd+yLG6uF9eN3X5nL3crearkuNzPfXLR7O9uX3qQANttujlbzHxNOSIEiiBBl/QCbZg
        zfxyZppmYRYaBmoxgoUuSzWdNJXsyoaqelob0LBj1yHYA+RCQ5a10AcmBmvO5xpO7hNvNAiJiycy
        M6MG31PwyGBfDzAg/1sLRQQLjjmwuCTHRkqC6dh/xcop3rPgoNWDKuhdjEp6JyqR9CF1KuGX6h2r
        3uWMCVvFIXlUw179Xg2UJjBqeA8pcL8u6JgSWGChDBpCavEbbD2+jWc/AAAA//8DAGiEBUBmAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b977dad62cfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:05:20 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1660'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89832'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 112ms
      x-request-id:
      - beef4829576c8ca452215fa23ea05920
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Remember to make
      very direct google searches to find the answer. For example if you want x, just
      search ''x''.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed in double quotes e.g. \"command
      name\"\n\nCommands:\n1. append_to_file: Append to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file, args: \"filename\":
      \"<filename>\"\n3. list_files: List Files in Directory, args: \"directory\":
      \"<directory>\"\n4. read_file: Read file, args: \"filename\": \"<filename>\"\n5.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to find the revenue of Tesla in 2022. I will start by searching for
      the information on Google.\",\n        \"reasoning\": \"Google is a reliable
      source of information and is likely to have the answer to my question.\",\n        \"plan\":
      \"- Use the ''get_text_summary'' command to get a summary of the information
      available on Google.\\n- Use the ''write_to_file'' command to save the summary
      to a file.\\n- Use the ''read_file'' command to retrieve the information from
      the file.\",\n        \"criticism\": \"I need to ensure that the information
      I find is accurate and up-to-date.\",\n        \"speak\": \"I will search for
      the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\": {\n        \"name\":
      \"get_text_summary\",\n        \"args\": {\n            \"url\": \"https://www.google.com/search?q=tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the information I need. I will now save it to a file using the
      ''write_to_file'' command.\",\n        \"reasoning\": \"Saving the information
      to a file will allow me to retrieve it later without having to search for it
      again.\",\n        \"plan\": \"- Use the ''write_to_file'' command to save the
      revenue of Tesla in 2022 to a file.\",\n        \"criticism\": \"I need to ensure
      that the information is saved accurately and in a format that is easy to read.\",\n        \"speak\":
      \"I will now save the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue_2022.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have saved the revenue
      of Tesla in 2022 to a file. I will now retrieve the information using the ''read_file''
      command.\",\n        \"reasoning\": \"Retrieving the information from the file
      will allow me to use it in future tasks.\",\n        \"plan\": \"- Use the ''read_file''
      command to retrieve the revenue of Tesla in 2022 from the file.\",\n        \"criticism\":
      \"I need to ensure that the information is retrieved accurately and in a format
      that is easy to use.\",\n        \"speak\": \"I will now retrieve the revenue
      of Tesla in 2022 from the file.\"\n    },\n    \"command\": {\n        \"name\":
      \"read_file\",\n        \"args\": {\n            \"filename\": \"tesla_revenue_2022.txt\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command read_file returned: 81462000000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have successfully retrieved the revenue of Tesla in
      2022 from the file. My task is complete.\",\n        \"reasoning\": \"I have
      completed the task I was assigned to do.\",\n        \"plan\": \"- No further
      action is required.\",\n        \"criticism\": \"I need to ensure that I have
      completed the task accurately and that the information I have retrieved is correct.\",\n        \"speak\":
      \"I have successfully retrieved the revenue of Tesla in 2022 from the file.\"\n    },\n    \"command\":
      {\n        \"name\": \"\",\n        \"args\": {}\n    }\n}"}, {"role": "system",
      "content": "Command  returned: Unknown command ''''. Please refer to the ''COMMANDS''
      list for available commands and only respond in the specified JSON format."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7730'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5ySQW/TQBCF7/yK0Vx6sSOHxrTxDZAoQYAQpSeMoul6Ym9j75rdcdI08n9HGzuk
        CkJIHHdG8733ZmePusAMVUWimraOr25u31y9777dfUin/svTPKk+0uuHd9vk81Mzwwjt/QMrGScm
        yjZtzaKtwQiVYxIuMJu+up5N03T+chphYwuuMcOylfhyksbSuXsbJ5fJFCPsPJWM2R5bZ5tWlmLX
        bHwAzNMIT/BTY5ZGKFaoPpWuZ0kfoaqsVuwx+77Hhv0R7GzNmCF5r72QkWDTGmETIuxzAwCQo1S2
        KyvxOWYwFscGP0oo5vhpB0J+DdrD6IsnsICtrmswdgtsCpBKe/DsvbZmkmP0nOSYvDXalANuARVt
        +DcqzPIgsIAteQiGSxPqFgoLdKCzYyDHYCysOhfeQCrsx4Pjn512XJzLtjWZQTGGO88HmYuCg+aS
        SjZyETw0B779ZwjltGilfXMMYZjHQd+5QCeBv0cjpTpHwvVuDERyaGqzsq6hkOQ47Vic5g0Xw8Kd
        YyXnbnzLtP7v3xlIfXS8gXENf5yAoYYHkedrO7NCrjw/nqGx5t0wfMMSv7VNS2b3lTdsOj5aONgY
        3eSmxz7ClTbaV8vhZjBDL7bFCLUp+BGzpP/Rv/gFAAD//wMAZrhe17gDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9788ff4ecfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:05:33 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '12167'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86503'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.33s
      x-request-id:
      - b946bfa72c6d6cc819f04de763790248
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Remember to make
      very direct google searches to find the answer. For example if you want x, just
      search ''x''.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed in double quotes e.g. \"command
      name\"\n\nCommands:\n1. append_to_file: Append to file, args: \"filename\":
      \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file, args: \"filename\":
      \"<filename>\"\n3. list_files: List Files in Directory, args: \"directory\":
      \"<directory>\"\n4. read_file: Read file, args: \"filename\": \"<filename>\"\n5.
      write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to find the revenue of Tesla in 2022. I will start by searching for
      the information on Google.\",\n        \"reasoning\": \"Google is a reliable
      source of information and is likely to have the answer to my question.\",\n        \"plan\":
      \"- Use the ''get_text_summary'' command to get a summary of the information
      available on Google.\\n- Use the ''write_to_file'' command to save the summary
      to a file.\\n- Use the ''read_file'' command to retrieve the information from
      the file.\",\n        \"criticism\": \"I need to ensure that the information
      I find is accurate and up-to-date.\",\n        \"speak\": \"I will search for
      the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\": {\n        \"name\":
      \"get_text_summary\",\n        \"args\": {\n            \"url\": \"https://www.google.com/search?q=tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the information I need. I will now save it to a file using the
      ''write_to_file'' command.\",\n        \"reasoning\": \"Saving the information
      to a file will allow me to retrieve it later without having to search for it
      again.\",\n        \"plan\": \"- Use the ''write_to_file'' command to save the
      revenue of Tesla in 2022 to a file.\",\n        \"criticism\": \"I need to ensure
      that the information is saved accurately and in a format that is easy to read.\",\n        \"speak\":
      \"I will now save the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue_2022.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have saved the revenue
      of Tesla in 2022 to a file. I will now retrieve the information using the ''read_file''
      command.\",\n        \"reasoning\": \"Retrieving the information from the file
      will allow me to use it in future tasks.\",\n        \"plan\": \"- Use the ''read_file''
      command to retrieve the revenue of Tesla in 2022 from the file.\",\n        \"criticism\":
      \"I need to ensure that the information is retrieved accurately and in a format
      that is easy to use.\",\n        \"speak\": \"I will now retrieve the revenue
      of Tesla in 2022 from the file.\"\n    },\n    \"command\": {\n        \"name\":
      \"read_file\",\n        \"args\": {\n            \"filename\": \"tesla_revenue_2022.txt\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command read_file returned: 81462000000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have successfully retrieved the revenue of Tesla in
      2022 from the file. My task is complete.\",\n        \"reasoning\": \"I have
      completed the task I was assigned to do.\",\n        \"plan\": \"- No further
      action is required.\",\n        \"criticism\": \"I need to ensure that I have
      completed the task accurately and that the information I have retrieved is correct.\",\n        \"speak\":
      \"I have successfully retrieved the revenue of Tesla in 2022 from the file.\"\n    },\n    \"command\":
      {\n        \"name\": \"\",\n        \"args\": {}\n    }\n}"}, {"role": "system",
      "content": "Command  returned: Unknown command ''''. Please refer to the ''COMMANDS''
      list for available commands and only respond in the specified JSON format."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"My task is complete. I will now end this session.\",\n        \"reasoning\":
      \"I have completed the task I was assigned to do and there are no further actions
      required.\",\n        \"plan\": \"- Use the ''delete_agent'' command to end
      this session.\",\n        \"criticism\": \"I need to ensure that I have completed
      the task accurately and that the information I have retrieved is correct.\",\n        \"speak\":
      \"My task is complete. I will now end this session.\"\n    },\n    \"command\":
      {\n        \"name\": \"delete_agent\",\n        \"args\": {\n            \"key\":
      \"Get-CompanyRevenue\"\n        }\n    }\n}"}, {"role": "system", "content":
      "Command delete_agent returned: Error: invalid literal for int() with base 10:
      ''Get-CompanyRevenue''"}, {"role": "user", "content": "Determine which next
      command to use, and respond using the format specified above:"}], "temperature":
      0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '8677'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7SSy27TUBCG9zzFaDbZOFFCLqTeARIoohISCLHAKDo9ntqH2DPmnDFuFfndkWuH
        BLddsGA7l+//53JEl2KMNjdqy6qYvnr/+c01f/DN6/m75mO6vd795OLTxn5t3h62GKHc/CCrQ8fM
        SlkVpE4YI7SejFKK8WKzXS3W66vlOsJSUiowxqzS6XK2nmrtb2Q6X84XGGEdTEYYH7HyUla6VzkQ
        B4wX26tVhGf4ObFZRaiipvgTejlfb9sIbS7OUsD42xFLCiewl4IwRhOCC2pYO5vCStyNcEwYACBB
        zaXOcg0JxjAEhwTdaRdMcAfEVmpW8pSCYSDvxUPjNAfNCSpPv5zUAayUpeF0BjtoXFGA+nswmXF8
        rrXiPVmFA93PEowuBT2ZIOw4O6kyUQoqUAca98Kt+IfYJKWClPYmI9bJyUHX1Yg/jCWqwnBPn8KX
        gTopXNC+P/wFyEifkXUBHupnScIXoKetPDV6h6dOpUMFCsEJj71a79RZF8rxOohD7TtJo7ADU0Id
        HGf/uKGxWqjIHP73uXvBNjr93gB49HpsSuq9XNxmZNj4rP/ZdqAm3GIb4a1jF/J9/0wYY1CpMELH
        Kd1hPG+/ty9+AwAA//8DADfi2Ob4AwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b97e64e4bcfd5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:05:48 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '12889'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86511'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.326s
      x-request-id:
      - 1a03967b2a22b66ad3b6d28664c7fb7f
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Remember to make
      very direct google searches to find the answer. For example if you want x, just
      search ''x''.Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3377'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5SUUW/TQAzH3/kUll94WNq13bpCJITQHtAk3jZggqDJvbjJrZdzdufQlarfHSVp
        t1E0NB7js//+/3y+bNDmmKIpSU1Vu8Hs4+X5bfNtOvny+co20/vruvyw0Otfy7vz2RQTlPktG91V
        DI1UtWO14jFBE5iUc0zHZ29Ox9Oz0WScYCU5O0yxqHVwMpwOtAlzGYxORmNMsIlUMKYbrINUtd6o
        LNlHTGenswQftR/ik/EsQRUl9xB6e3a6TdCUYg1HTL9vsOK4lw3iGFOkGG1U8tqaFK/sW4BN5gEA
        MtRSmqLUmGEKu+DugO+1DWZ4AZ45BxVYWJ+DlgyBf7JvGGQBVxwdgfUwGU0mQ7iAlXUOolJQmK8h
        MgVTWl/AQkKf/Dq2QuSNJQeBawkau9NOIcPkqY3AFMVbX/y3lwRolzHnqLCidVuWC2hJCja2X05k
        CaRtlg3PuOrS10zh0FrtyPeuBnDZYb6QMcv8AD61rXv9RwbrFxIqau+9S/oarPIfGSpAsLCOD8yY
        YNUaG6vDOVW0ZIhN4B7kAqjqsNsrIYXAztLcMURpguH4b4T9TPdCZEwTSNmtIbCRkLeqzwAdji/W
        TMu9W6qgkK5Ydivzwlk+XQUbnunbt90m+6U3UlXk87923lPFvaOC9aZc1xyc9ct44JxCcfhe+oMm
        uL68VK1jeny8Wq2GhUjhuP1bHPdk7+/eact19EB1tKM66rYDH2W3O+eZ3+I2wYX1NpY3/ZvAFKNK
        jQlan/M9pqPtj+2r3wAAAP//AwAjP2NA0wQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b99ffd862cfd9-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:07:19 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '18049'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86488'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.341s
      x-request-id:
      - 1eed44a478d00a5ace8222351b8afb45
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\nI
      was created.\n\"\"\"\n\nLatest Development:\n\"\"\"\n[{''role'': ''you'', ''content'':
      ''{\"command\": {\"name\": \"get_hyperlinks\", \"args\": {\"url\": \"https://www.google.com/search?q=tesla+financial+reports+2022\"}}}''}]\n\"\"\"\n"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '742'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOS0sDMRRG9/6Ky924Sct0pi+yVKEURMEHLkRKmrmdiU1yx+TWVsr8dylUu/04
        3+Ec0dWo0bZGbOj8YLZ4vpvZr7ebEHw5H+/b24NdPB7ayj/4ChXy+pOsnB9Dy6HzJI4jKrSJjFCN
        ejSdj0eTaTGeKAxck0eNTSeDajgZyC6teVBUxQgV7rJpCPURu8Shk5XwlmJGPapmCi/u/72cKRQW
        4y/kdNwrtC07Sxn1+xED5T9rYk+o0eTsspgop0aOQvHUv4S9yXBuHsISElly31SDAcshmFiDMDQk
        0P50lLyL2wwbTvBC2ZvrDBsXTbTOeEjUcZIMLkJZlCVsEgeQlmDB3HiCTCbZFl6f7ofYK9y46HK7
        SmQyR9SYhTtU6GJNB9RF/9Ff/QIAAP//AwDBsxr8lwEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9a91fc85cfd9-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:07:27 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2382'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89833'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 110ms
      x-request-id:
      - e6a305cbfbb592cebc2e7a12dc36531a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Write the revenue
      of Tesla in 2022 to a file. You should write the number without commas and you
      should not use signs like B for billion and M for million.\n2. Use task_complete
      after you''ve written the file.\n3. Remember to make very DIRECT google searches
      to find the answer. For example if you want x, just search ''x''.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3382'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5RUTW/TQBC98ytGc+FQJ80HTaglxIEKFATiUFCFMIom67G9zXrX7I5JQ+T/jvzR
        D0KRytEzb2beezPrA+oUY1QFiSorM1q+u7zIRD5ef9ULLq7ezhbv31zW8/nNp18vLjBCt7lmJUPF
        WLmyMizaWYxQeSbhFOPp4uWL6dlisjyPsHQpG4wxr2Q0H5+NpPYbN5rMJ1OMsA6UM8YHrLwrK1mL
        27INGC/PJhHe976Lz6bLCMUJmbvQ+WLZRKgKpxUHjL8dsORw29Y7wxgjhaCDkJWWpLPCthVwSCwA
        QIJSuDovJCQYwxAcEnwjbTDBFVjmFMRBpm0KUjB4/sm2ZnAZfOZgCLSF2WQ2G8MKdtoYCEJeYLOH
        wORVoW0OmfM9+HloG5FVmgx4rpyX0GW7DglGD2l4puCstvl/c4mABsSGg8CO9m1Z6kAKEtCh/TLO
        bYGkRWn/D1YdfM/kj6lVhmzPagSXncwnakwSO4IP7ei+/70GbTPnS2r33oGuvBb+AyEOCDJtuMt/
        CQxCYbse7oWPKCqvRSsdymP3StoyhNpzL28FVHZmtIvq/QDlvGclj+jofR1gDyjDqt+KDkBK1Z6E
        jz0LFdP2lgyVkLt2orjhTp5o4MP9a/+Ye+ME+7FNdHvpypUl2fSvQ7dUcs8oZ1kX+4q90XYbjpiT
        z48fSZ+ovenLC5EqxKenu91unDuXG25/Eae9stc/Xkmr6+RO1cmg6qQ7Cbxv2wzME9tgE2GmrQ7F
        un8IGGMQV2GE2qZ8g/Gk+d48+w0AAP//AwBjis2nyAQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9b650ae2ce70-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:08:16 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '17707'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86490'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.34s
      x-request-id:
      - 55f5b928411e1c9e32c8f49b7efc059e
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3311'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4yTW2/TQBCF3/kVo3npQ500SW/UEqoEghIQEqJFVUVQNF2P7SV7cXfHTasq/x3Z
        zqUJqPA6s3vmO2dnn1BnmKIqSZStTO/04vLDO1WJ/vJx9H5wc3U5z79++/T55tq9vTrDBP3tL1ay
        vNFX3laGRXuHCarAJJxhOjx5fTQ8PhmeHiVofcYGUywq6R32j3tSh1vfGxwOhphgHalgTJ+wCt5W
        MhU/YxcxPT08SXCjva6PDo8TFC9k1qWz0+EiQVV6rThi+uMJLceVbPCGMUWKUUchJw2kd8KuMfA0
        cQAAE5TS10UpcYIpLIvLBj9IU5zgGObaGIhCQeD2ESJTUKV2BeQ+gJQMge/Z1Qw+hyuOhkA7GA1G
        I/AOLrwvDPcnmDxXD0zRO+2K1QjHnIF4yLXLXtYUD8t0GOwjCMVZfzkFdASCwEbTrWGIvg6qVdAu
        98FSkyeQy2AMihzUkUHL1tTnBzuoXfLKkOuge3DZJtHGsNdBrqgb0r2N/cnE9eA6aOF/eiPI9fLC
        98itvenaL+XCAeZBSxN/I9Ue3iZUTVvpaHezZRfr0BCQ/MVsm0EToFJ1oGaYy9ZZ9mEMsfS1yYBM
        9GBpxrBRGwNZcF7gXntDLRy5RzBckAEfgKXUigwUtc7YaMexsWxXu7SbcayYZtvLt0n6vxeuU1wk
        q1VX3lpy2R+b7shyN6xgmTZ7P421tRQed7AoFLv/pGvUwXQCpUgV04OD+XzeLzoO5e1BR39+96aF
        3V/S7zfEWyM6tbuaY/MmneR1k6+OL9o+X5ltDS99T9wCFwnm2ulYTrsPhylG8RUmqF3GD5gOFj8X
        r34DAAD//wMAz2r9SQcFAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9db8bda916a6-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:09:54 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '20348'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86493'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.338s
      x-request-id:
      - c41499c55f81455d54ef229f70816837
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 61561,
      288, 4355, 10, 265, 7287, 10, 2366, 17, 23886, 2262, 961, 2, 16, 25, 28298,
      13254, 220, 2366, 17, 482, 5195, 7694, 5618, 4299, 1618, 422, 499, 527, 539,
      50028, 2949, 264, 2478, 6622, 13, 81372, 26496, 36234, 311, 1925, 2262, 12268,
      1022, 19815, 39076, 19952, 389, 19815, 39076, 86469, 1520, 86469, 11302, 8612,
      611, 311, 7940, 311, 279, 2778, 3830, 90541, 13254, 220, 2366, 17, 3580, 810,
      6571, 6571, 10577, 33781, 20492, 46112, 323, 41994, 46112, 323, 41994, 14710,
      14562, 11823, 220, 2366, 17, 716, 4430, 10714, 220, 508, 11, 7467, 11, 931,
      3135, 320, 15, 13, 4331, 6622, 8, 7694, 18591, 53043, 44165, 505, 279, 3566,
      5932, 13, 20, 7239, 549, 815, 13, 11441, 90541, 596, 13254, 14264, 311, 7154,
      220, 5932, 13, 20, 7239, 549, 815, 13, 11441, 304, 279, 220, 2366, 17, 20323,
      1060, 11, 264, 220, 3971, 3346, 5376, 505, 279, 3766, 1060, 1975, 28298, 596,
      13254, 505, 47466, 220, 1049, 23, 311, 47466, 220, 2366, 17, 320, 258, 3610,
      549, 815, 13, 11441, 8, 37, 16164, 1060, 99204, 304, 3610, 549, 815, 13, 11441,
      2366, 15282, 11, 20911, 2366, 9800, 11, 23848, 2366, 18887, 11, 21600, 679,
      23890, 11, 22915, 24, 810, 7123, 6806, 12331, 220, 1114, 11, 220, 2366, 18,
      90541, 596, 13254, 220, 1049, 23, 12, 2366, 17, 482, 12442, 9265, 16257, 9265,
      2485, 1129, 2185, 31187, 9265, 916, 46733, 2564, 46733, 56120, 612, 9728, 38081,
      16257, 9265, 2485, 1129, 2185, 31187, 9265, 916, 46733, 2564, 46733, 56120,
      612, 9728, 38081, 10714, 15109, 69742, 6806, 36448, 16298, 1101, 2610, 2675,
      690, 1518, 810, 6498, 1457, 13, 3639, 374, 28298, 9974, 13254, 30, 22186, 28298,
      1304, 264, 11626, 220, 2366, 17, 30, 3923, 374, 28298, 596, 13254, 304, 220,
      2366, 18, 30, 36448, 90541, 38493, 220, 679, 15, 12, 2366, 18, 765, 350, 8143,
      1428, 582, 4744, 79717, 2485, 1129, 2185, 62925, 4744, 79717, 5181, 46733, 23301,
      46733, 27223, 46733, 13254, 20122, 4744, 79717, 2485, 1129, 2185, 62925, 4744,
      79717, 5181, 46733, 23301, 46733, 27223, 46733, 13254, 90541, 9974, 13254, 369,
      220, 2366, 17, 574, 400, 5932, 13, 20911, 33, 11, 264, 220, 3971, 13, 1758,
      4, 5376, 505, 220, 2366, 16, 13, 28298, 9974, 13254, 369, 220, 2366, 16, 574,
      400, 4331, 13, 23848, 33, 11, 264, 220, 2031, 13, 3080, 4, 5376, 505, 220, 2366,
      15, 13, 28298, 9974, 4194, 1131, 79338, 7099, 33620, 9787, 54664, 38, 2177,
      58882, 9787, 54664, 27977, 612, 14851, 8623, 9787, 54664, 46277, 482, 469, 15202,
      3700, 12037, 90541, 1903, 810, 3300, 304, 220, 2366, 17, 1109, 3596, 1603, 11,
      719, 1202, 2564, 578, 6383, 713, 2485, 1129, 2185, 42901, 424, 713, 916, 46733,
      51309, 4355, 52708, 19, 12, 2366, 17, 12, 10326, 826, 5621, 1131, 791, 6383,
      713, 2485, 1129, 2185, 42901, 424, 713, 916, 46733, 51309, 4355, 52708, 19,
      12, 2366, 17, 12, 10326, 826, 5621, 1131, 18820, 220, 914, 11, 220, 2366, 18,
      2001, 28298, 436, 7897, 304, 927, 400, 5932, 7239, 304, 13254, 304, 220, 2366,
      17, 323, 706, 810, 3300, 389, 1450, 1109, 3596, 1603, 13, 2030, 5292, 3252,
      7631, 323, 3682, 3430, 15455, 2231, 4194, 1131, 12041, 369, 28298, 13254, 220,
      2366, 17, 2675, 690, 1518, 810, 6498, 1457, 13, 12433, 291, 7694, 46112, 5750,
      555, 4668, 5750, 555, 4668, 2392, 4355, 5347, 3695, 4355, 1646, 2392, 4355,
      5708, 2392, 4355, 6763, 87698, 11092, 65467, 3167, 74, 2392, 4355, 7458, 33115,
      398, 24608, 7063, 6412, 1779, 2265, 860, 682, 3461, 459, 2217, 311, 3041, 11302,
      36448, 860, 682, 90541, 6821, 3335, 13254, 323, 34427, 389, 24608, 29768, 5002,
      2485, 1129, 2185, 22832, 9081, 916, 46733, 51309, 4355, 2442, 52742, 12, 10326,
      826, 52708, 19, 12, 2366, 17, 29768, 5002, 2485, 1129, 2185, 22832, 9081, 916,
      46733, 51309, 4355, 2442, 52742, 12, 10326, 826, 52708, 19, 12, 2366, 17, 18820,
      220, 914, 11, 220, 2366, 18, 2001, 28298, 1120, 5068, 11999, 58414, 24608, 369,
      220, 2366, 17, 2737, 13254, 315, 400, 1187, 13, 843, 7239, 11, 323, 24608, 824,
      4430, 315, 400, 16, 13, 777, 844, 288, 4355, 29140, 13896, 38493, 11, 65752,
      552, 304, 1229, 19, 220, 2366, 17, 14431, 2837, 8483, 2485, 1129, 2185, 44176,
      2837, 61564, 916, 46733, 51309, 4355, 52708, 19, 2269, 74276, 1131, 14431, 2837,
      8483, 2485, 1129, 2185, 44176, 2837, 61564, 916, 46733, 51309, 4355, 52708,
      19, 2269, 74276, 1131, 18820, 220, 966, 11, 220, 2366, 18, 2001, 28298, 596,
      2860, 13254, 14980, 520, 400, 1187, 13, 18, 7239, 304, 1229, 19, 220, 2366,
      17, 449, 220, 1806, 4, 44188, 56, 6650, 13, 28298, 27167, 220, 17, 13, 2790,
      480, 1671, 315, 4907, 5942, 2391, 1229, 19, 11, 4194, 1131, 28298, 1903, 459,
      9974, 11626, 315, 400, 717, 13, 21, 7239, 304, 220, 2366, 17, 84073, 7146, 3074,
      2485, 1129, 277, 5455, 2174, 3074, 916, 46733, 9515, 46733, 220, 2366, 18, 14,
      1721, 46733, 51309, 4355, 27975, 12, 1131, 84073, 7146, 3074, 2485, 1129, 277,
      5455, 2174, 3074, 916, 46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309,
      4355, 27975, 12, 1131, 4448, 220, 914, 11, 220, 2366, 18, 2001, 28298, 4756,
      1202, 6020, 3135, 369, 279, 11999, 8502, 315, 220, 2366, 17, 389, 8079, 13658,
      13, 578, 2883, 7263, 304, 400, 1187, 13, 18, 7239, 304, 13254, 4194, 1131, 90541,
      38493, 320, 87708, 398, 1680, 220, 1419, 13, 1644, 33, 369, 5587, 220, 2148,
      11, 220, 2366, 18, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733,
      350, 8143, 32, 46733, 30466, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733,
      5220, 46733, 350, 8143, 32, 46733, 30466, 50083, 950, 38493, 320, 87708, 398,
      8, 2956, 2652, 5587, 220, 2148, 11, 220, 2366, 18, 11, 220, 1419, 13, 1644,
      33, 2652, 6790, 220, 2148, 11, 220, 2366, 17, 11, 220, 1187, 13, 843, 33, 2652,
      6250, 220, 966, 11, 220, 2366, 17, 11, 220, 1691, 13, 1774, 33, 2652, 5651,
      220, 966, 11, 220, 2366, 17, 11, 220, 845, 13, 6365, 33, 5253, 12490, 40638,
      596, 28298, 8220, 61437, 220, 2366, 17, 449, 3831, 220, 19, 339, 2564, 19816,
      3778, 12, 24137, 1543, 2485, 1129, 2185, 53247, 1543, 916, 46733, 5557, 46733,
      220, 2366, 18, 14, 1721, 14, 1627, 83489, 3778, 12, 24137, 1543, 2485, 1129,
      2185, 53247, 1543, 916, 46733, 5557, 46733, 220, 2366, 18, 14, 1721, 14, 1627,
      18820, 220, 1627, 11, 220, 2366, 18, 2001, 1789, 682, 315, 220, 2366, 17, 11,
      28298, 596, 13254, 16392, 311, 400, 5932, 13, 20, 7239, 11, 264, 220, 3971,
      4, 7940, 927, 220, 2366, 16, 13, 28298, 1903, 400, 18, 13, 3076, 7239, 304,
      1202, 11999, 8502, 11, 459, 24257, 400, 16, 13, 777, 4194, 1131, 90541, 596,
      22613, 87055, 311, 264, 3335, 1389, 719, 11774, 527, 2564, 45, 6616, 2485, 1129,
      2185, 1276, 652, 2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309,
      14833, 10039, 30322, 34119, 1636, 1131, 45, 6616, 2485, 1129, 2185, 1276, 652,
      2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309, 14833, 10039, 30322,
      34119, 1636, 1131, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298, 5068, 3335,
      22613, 323, 3335, 30466, 369, 220, 2366, 17, 11, 439, 279, 2883, 14971, 1139,
      264, 502, 1060, 13176, 264, 1396, 315, 32366, 11774, 13, 9029, 1101, 2610, 2675,
      690, 1518, 810, 6498, 1457, 13, 37957, 11948, 27573, 2675, 690, 1518, 810, 6498,
      1457, 13, 28298, 13254, 21964, 36448, 2392, 4355, 13254, 323, 2848, 1468, 288,
      4355, 13254, 220, 2366, 18, 2392, 4355, 13254, 304, 220, 2366, 16, 2392, 4355,
      13254, 220, 2366, 15, 2392, 4355, 4272, 11626, 220, 2366, 17, 2392, 4355, 13254,
      6650, 2392, 4355, 13254, 220, 679, 24, 2732, 18464, 7816, 3135, 22170, 1578,
      27575, 26496, 24599, 2287, 11, 64912, 263, 11, 9362, 4194, 12, 4194, 3915, 701,
      6933, 2686, 4194, 12, 4194, 4387, 3813, 12978, 11764, 11302, 48932, 44228]],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7434'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        9f3H//zX/wMAAP//AwDPE57P5yAAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9e5ecc5b16a6-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:10:01 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '581'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 184ce7e7b6dbe788cec2fe10a999951d
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"Tesla
      revenue 2022 - Google SearchPlease click here if you are not redirected within
      a few seconds. Accessibility LinksSkip to main content Turn off continuous scrollingTurn
      on continuous scrollingAccessibility helpAccessibility feedback Press / to jump
      to the search boxTesla revenue 2022 See moreDeleteDeleteReport inappropriate
      predictions Filters and Topics Filters and TopicsNewsImagesvs 2022per shareAbout
      20,900,000 results (0.53 seconds) Search ResultsFeatured snippet from the web81.5
      billion U.S. dollarsTesla''s revenue grew to nearly 81.5 billion U.S. dollars
      in the 2022 fiscal year, a 51 percent increase from the previous year.... Tesla''s
      revenue from FY 2008 to FY 2022 (in million U.S. dollars)Fiscal yearRevenue
      in million U.S. dollars202281,462202153,823202031,536201924,5789 more rows\u2022Mar
      17, 2023Tesla''s revenue 2008-2022 - StatistaStatistahttps://www.statista.com
      \u203a ... \u203a Vehicles & Road TrafficStatistahttps://www.statista.com \u203a
      ... \u203a Vehicles & Road TrafficAbout featured snippets\u2022FeedbackPeople
      also askYou will see more English now. What is Tesla annual revenue?Does Tesla
      make a profit 2022?What is Tesla''s revenue in 2023?FeedbackTesla Revenue 2010-2023
      | TSLAMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueTesla annual revenue for 2022 was $81.462B, a 51.35% increase from 2021.
      Tesla annual revenue for 2021 was $53.823B, a 70.67% increase from 2020. Tesla
      annual\u00a0...\u200eNet Income \u00b7 \u200eGross Profit \u00b7 \u200eAssets
      & Liabilities \u00b7 \u200eEPS - Earnings Per ShareTesla made more money in
      2022 than ever before, but its ... The Vergehttps://www.theverge.com \u203a
      tesla-q4-2022-earnings-re...The Vergehttps://www.theverge.com \u203a tesla-q4-2022-earnings-re...Jan
      25, 2023 \u2014 Tesla raked in over $81 billion in revenue in 2022 and has more
      money on hand than ever before. But flagging demand and major price cuts put\u00a0...
      Images for Tesla revenue 2022You will see more English now. Guided Search FiltersFilter
      by featureFilter by featuretesla semitesla modeltesla stocktesla salessemi truckelon
      musktesla vehiclequarterly earningscar saleselectricView allSelect an image
      to give feedbackFeedbackView allTesla reports record revenue and beats on earningsCNBChttps://www.cnbc.com
      \u203a tesla-tsla-earnings-q4-2022CNBChttps://www.cnbc.com \u203a tesla-tsla-earnings-q4-2022Jan
      25, 2023 \u2014 Tesla just reported fourth-quarter earnings for 2022 including
      revenue of $24.32 billion, and earnings per share of $1.19.Tesla Reports Record
      Revenue, Deliveries in Q4 2022Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Jan 30, 2023 \u2014 Tesla''s total revenue stood at
      $24.3 billion in Q4 2022 with 37% YoY growth. Tesla deployed 2.46 GWh of energy
      storage during Q4,\u00a0... Tesla made an annual profit of $12.6 billion in
      2022Ars Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...Ars
      Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...
      Jan 25, 2023 \u2014 Tesla published its financial results for the fourth quarter
      of 2022 on Wednesday afternoon. The company brought in $24.3 billion in revenue\u00a0...Tesla
      Revenue (Quarterly): 23.33B for March 31, 2023YChartshttps://ycharts.com \u203a
      companies \u203a TSLA \u203a revenuesYChartshttps://ycharts.com \u203a companies
      \u203a TSLA \u203a revenuesHistorical Revenue (Quarterly) Data ; March 31, 2023,
      23.33B ; December 31, 2022, 24.32B ; September 30, 2022, 21.45B ; June 30, 2022,
      16.93B.Elon Musk''s Tesla finished uneven 2022 with strong 4th ... Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Jan 26, 2023 \u2014 For all of 2022, Tesla''s
      revenue rose to $81.5 billion, a 51% jump over 2021. Tesla made $3.69 billion
      in its fourth quarter, an adjusted $1.19\u00a0...Tesla''s profits soared to
      a record \u2013 but challenges are ...NPRhttps://www.npr.org \u203a 2023/01/25
      \u203a teslas-profits-soared...NPRhttps://www.npr.org \u203a 2023/01/25 \u203a
      teslas-profits-soared...Jan 25, 2023 \u2014 Tesla reported record profits and
      record revenues for 2022, as the company heads into a new year facing a number
      of steep challenges. People also askYou will see more English now. FeedbackRelated
      searchesYou will see more English now. Tesla revenue ChartFeedbacktesla revenue
      and profittesla revenue 2023tesla revenue in 2021tesla revenue 2020tesla net
      profit 2022tesla revenue growthtesla revenue 2019Page NavigationMore resultsTry
      again Footer Links94566, Pleasanton, CA\u00a0-\u00a0From your IP address\u00a0-\u00a0Update
      locationHelpSend feedbackPrivacyTerms\"\"\" Using the above text, answer the
      following question: \"What is the revenue of Tesla in 2022?\" -- if the question
      cannot be answered using the text, summarize the text."}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5204'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yQuW7DMAyG9z4FQbSbbPiIk1Rbhl5Al15Li6JQZCZWYouGRKdHkHcvXPTaCPzf
        /4HkHl2NGm1jxHZ9m8wu7s5rv6HZw022/tgOZpE93p4tru6H2+tLVMjLDVn5bqSWu74lcexRoQ1k
        hGrU+XQ+yatpkeUKO66pRY3rXpIyrRIZwpKTrMxyVDhEsybUe+wDd728CG/JR9R5mZ8q/JP/BuVE
        obCY9h9alQeFtmFnKaJ+2mNH8ccbuCXUaGJ0UYyXcUv2Qn68YGEth9r5NQiDNARCb6K+pkA78gMB
        r+CeYmvAeSiyooBXE+F4nqeTaQFL17aOvYLXxtkGXAQDVZ6W1Qk4Pz4jEqwCd1/GPtDO8RDhnUxI
        8aBw5byLzcvIsUeNUbhHhc7X9IY6Ozwfjj4BAAD//wMARl3mfJ0BAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9e638dd216a6-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:10:04 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '3212'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '88759'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 826ms
      x-request-id:
      - 6faefb31a5663eddc0a6367a696f0a89
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 61561,
      288, 4355, 10, 265, 7287, 10, 2366, 17, 9059, 12399, 961, 2, 16, 25, 10771,
      311, 279, 1495, 11, 279, 13254, 315, 28298, 304, 220, 2366, 17, 574, 400, 5932,
      13, 20911, 7239, 11, 902, 374, 264, 220, 3971, 13, 1758, 4, 5376, 505, 279,
      3766, 1060, 13]], "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '385'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        //f4v753+89//R8AAAD//wMA5xEGAuMgAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9e78dcb916a6-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:10:05 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '195'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 7df603e061c652a47e14f2a03b5cabb1
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created and nothing new
      has happened."}, {"role": "user", "content": "Determine which next command to
      use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I will start by searching
      for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\": \"I need
      to find the revenue of Tesla in 2022 to complete my task. Google is a reliable
      source of information and I can use it to find the information I need.\",\n        \"plan\":
      \"- Search for ''Tesla revenue 2022'' on Google\\n- Write the revenue of Tesla
      in 2022 to a file\\n- Use task_complete after writing the file\",\n        \"criticism\":
      \"I need to ensure that the information I find is accurate and reliable. I should
      also make sure that I am not violating any legal or ethical guidelines in my
      search.\",\n        \"speak\": \"I will search for the revenue of Tesla in 2022
      on Google.\"\n    },\n    \"command\": {\n        \"name\": \"get_text_summary\",\n        \"args\":
      {\n            \"url\": \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4747'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4yT3W7bMAyF7/cUBK8dw3FbL/ADdOjVftv9eQgUibbVypIh0U2LIO8+KLGTNCuG
        3orkOR+P6Q1qhSXKVrDsejN7/+Hrtf553XV3erjLPv+4v6X6vmh+qeHLx0+YoFvdk+RxIpWu6w2x
        dhYTlJ4Ek8JyXiwu51dFnhUJdk6RwRKbnmcX6dWMB79ys+wim2OCQxANYbnB3ruu5yW7B7IBy3l2
        tUjwKH4o5NkiQXYszLE3L4ptgrJ1WlLA8vcGOwqTsHeGsEQRgg4sLEdMZ5lsXGFTWQCACrl1Q9Ny
        qLCE8XEs0BPHxwpvoBWPBLUbrAJuCTw9kh0IXA3fKBgB2kKe5XkKN7DWxoB1a1h7zQSagR0IqLWh
        tMLk1MGTCM5q20w2lkjF9hDt/md01ITggFvB0UgKCysCISWFQAqMYPIpfPeatW1eoOwxyYbB02Fe
        B7COwbjAIKya9EgEbZ7BE3tNj6TO1+iNsPsNZjuvt6JXlZ3BbSBgER6W4xcnEDWT36UXoaPUrvml
        p4xlqUN3Ht3pStNsXCxGqiKDgEAythgnRTyw3aonEfTe9eTNM1jRkXol3zEPrciyrvUh6DPE0JN4
        mPDOruJtAaUV7gW3yXSt0nWdsOqfY42se6+dwZLd8pXUhG/O73xfiL1HCY44y5Ev5fgbJOcTx79j
        Mb8s8ol0RztCV3aL2wRrbXVol/tjxxIDux4T1FbRE5bZ9s/23V8AAAD//wMAEg3DK4kEAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9e7e5ba816a6-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:10:23 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '17542'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86486'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.342s
      x-request-id:
      - 034e8b3a1f56ed220a05ccd8583a9c6b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that I was
      created and there have been no new developments to report."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will start by searching for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information and I can use it to find the information I
      need.\",\n        \"plan\": \"- Search for ''Tesla revenue 2022'' on Google\\n-
      Write the revenue of Tesla in 2022 to a file\\n- Use task_complete after writing
      the file\",\n        \"criticism\": \"I need to ensure that the information
      I find is accurate and reliable. I should also make sure that I am not violating
      any legal or ethical guidelines in my search.\",\n        \"speak\": \"I will
      search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the revenue of Tesla in 2022. I will now write it to a file.\",\n        \"reasoning\":
      \"I need to save the revenue of Tesla in 2022 to a file so that it can be accessed
      later. Writing it to a file will ensure that it is not lost and can be easily
      retrieved.\",\n        \"plan\": \"- Write the revenue of Tesla in 2022 to a
      file\\n- Use task_complete after writing the file\",\n        \"criticism\":
      \"I need to ensure that the file is saved in a secure location and that it is
      properly named so that it can be easily identified later.\",\n        \"speak\":
      \"I will now write the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue.txt\",\n            \"text\": \"81462\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5914'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7ySQW/TQBCF7/yK0Zw3UeKkaeNrhaoKARIFUUFQtFmP7SXrWWt3nLRE/u/IcdKE
        Fjhw4Dqjed+bmbdDm2GKptRiqtoNLm/ubpIPfLfiefOFru/L96/vN2+usmv9+fIHKvSr72TkMDE0
        vqodifWMCk0gLZRhOp5dTccXsySZKax8Rg5TLGoZTIYXA2nCyg9Gk9EYFTZRF4TpDuvgq1qW4tfE
        EdPxZDxXeBI/NS6nCsWLdqfSdD5pFZrSW0MR0687rCgehYN3hCnqGG0UzdLZ9CzE3Qq7BQMALFBK
        3xSlxAWmcCgeGvQgXXGBt1DqDcE2WBFikJIg0Ia4IfA5fKToNFiGZJQkIB405NbREG5ha50D9luo
        dFjv50THNegIh/1ouEB1Dg2ko2fLRU9+57cgpRb4JwvqOHakZVA97i0M4a0Oa8vFb031voljE6jH
        WwEbgb2ANsZmxKKde4RA9f7tHboTyhtpwoudaqe5X2cAn2KPWz6xxP/5Os+ETLBijY3V8S1MlHUC
        51afdEodYUXEZ9vHxhiKMW868yvKfaA9vDuElb/9Jdak1/8jDT20Vcd4Gl9VmrMX6WRdUe/nl3M+
        s61D0Qe7PeguuMVWYW7ZxnLZpw1TjOJrVGg5owdMR+239tVPAAAA//8DAEnzFqAdBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9f00da9b16a6-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:10:41 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '14583'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86490'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.34s
      x-request-id:
      - 7a57db4f7405718f8fc947aea0f54b3e
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will start by searching for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information and I can use it to find the information I
      need.\",\n        \"plan\": \"- Search for ''Tesla revenue 2022'' on Google\\n-
      Write the revenue of Tesla in 2022 to a file\\n- Use task_complete after writing
      the file\",\n        \"criticism\": \"I need to ensure that the information
      I find is accurate and reliable. I should also make sure that I am not violating
      any legal or ethical guidelines in my search.\",\n        \"speak\": \"I will
      search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the revenue of Tesla in 2022. I will now write it to a file.\",\n        \"reasoning\":
      \"I need to save the revenue of Tesla in 2022 to a file so that it can be accessed
      later. Writing it to a file will ensure that it is not lost and can be easily
      retrieved.\",\n        \"plan\": \"- Write the revenue of Tesla in 2022 to a
      file\\n- Use task_complete after writing the file\",\n        \"criticism\":
      \"I need to ensure that the file is saved in a secure location and that it is
      properly named so that it can be easily identified later.\",\n        \"speak\":
      \"I will now write the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue.txt\",\n            \"text\": \"81462\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have written the revenue
      of Tesla in 2022 to a file. I will now mark the task as complete.\",\n        \"reasoning\":
      \"Now that I have written the revenue of Tesla in 2022 to a file, I have completed
      my task. Marking the task as complete will ensure that it is not accidentally
      repeated in the future.\",\n        \"plan\": \"- Use task_complete to mark
      the task as complete\",\n        \"criticism\": \"I need to ensure that the
      task has been completed successfully before marking it as complete.\",\n        \"speak\":
      \"I have written the revenue of Tesla in 2022 to a file. I will now mark the
      task as complete.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {}\n    }\n}"}, {"role": "system", "content": "Command task_complete returned:
      Unknown command ''task_complete''. Please refer to the ''COMMANDS'' list for
      available commands and only respond in the specified JSON format."}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7013'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6yTTY/TQAyG7/wKy+e0arv9gBxBUK0QIL5OFFXTiZsMmXjCjLPdqup/R8kktOpy
        WnG14/d9Xo9zQpNhirpQoqvajlbrr+v3q3elLGev7fpt+C2znV8X9Xr+iT5jgm73i7T0E2PtqtqS
        GMeYoPakhDJMp8uX8+liOZvPE6xcRhZTzGsZ3Y0XI2n8zo0md5MpJtgElROmJ6y9q2rZiiuJA6bT
        xWKa4EX80ni1SFCcKHsprebLc4K6cEZTwPTHCSsKg7B3ljBFFYIJolhaTMdC3EY4bRgAYINSuCYv
        JGwwhb7YN+hR2uIG76FQDwQHb0SIQQoCTw/EDYHbwzcKVoFhmE1mMxAHCvbG0hju4WCsBXYHqJQv
        uzlRoQQVoM9H4w0m16aeVHBsOI/OH90BpFACz0JIhrHBLYPq2CGM4YPypeH8n1CRmzg0nqK9ETAB
        2AkorU1GLMraI3iqu2dvrVuhfSONf5KptopjnBF8D9R9mVFrtFU5sbS+leKsBY91kMIEiM1gWFML
        UFwRZmAkxCQ3ZtobMdqEang6JuqUr+P8Dd1q7oj4Sjg0WlMI+6YNuKO98z3tsK0O69Y21KTK/3Ut
        z1lChDknw1n3O31y1awqipzXT3CTRvn89n+IjZKOcXhNMnrjqlrx8UsMNyB0GD3Nhs94TnBv2IRi
        G28bUwziakzQcEaPmE7OP88v/gAAAP//AwDJ5kAXiwQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9f6e9bb916a6-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:11:00 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '16485'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86496'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.336s
      x-request-id:
      - 69aeb6e3840dc30af4ba4dfaa0aa23ec
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will start by searching for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information and I can use it to find the information I
      need.\",\n        \"plan\": \"- Search for ''Tesla revenue 2022'' on Google\\n-
      Write the revenue of Tesla in 2022 to a file\\n- Use task_complete after writing
      the file\",\n        \"criticism\": \"I need to ensure that the information
      I find is accurate and reliable. I should also make sure that I am not violating
      any legal or ethical guidelines in my search.\",\n        \"speak\": \"I will
      search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the revenue of Tesla in 2022. I will now write it to a file.\",\n        \"reasoning\":
      \"I need to save the revenue of Tesla in 2022 to a file so that it can be accessed
      later. Writing it to a file will ensure that it is not lost and can be easily
      retrieved.\",\n        \"plan\": \"- Write the revenue of Tesla in 2022 to a
      file\\n- Use task_complete after writing the file\",\n        \"criticism\":
      \"I need to ensure that the file is saved in a secure location and that it is
      properly named so that it can be easily identified later.\",\n        \"speak\":
      \"I will now write the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue.txt\",\n            \"text\": \"81462\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have written the revenue
      of Tesla in 2022 to a file. I will now mark the task as complete.\",\n        \"reasoning\":
      \"Now that I have written the revenue of Tesla in 2022 to a file, I have completed
      my task. Marking the task as complete will ensure that it is not accidentally
      repeated in the future.\",\n        \"plan\": \"- Use task_complete to mark
      the task as complete\",\n        \"criticism\": \"I need to ensure that the
      task has been completed successfully before marking it as complete.\",\n        \"speak\":
      \"I have written the revenue of Tesla in 2022 to a file. I will now mark the
      task as complete.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {}\n    }\n}"}, {"role": "system", "content": "Command task_complete returned:
      Unknown command ''task_complete''. Please refer to the ''COMMANDS'' list for
      available commands and only respond in the specified JSON format."}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have written the revenue of Tesla in 2022 to a file.
      I will now mark the task as complete.\",\n        \"reasoning\": \"Now that
      I have written the revenue of Tesla in 2022 to a file, I have completed my task.
      Marking the task as complete will ensure that it is not accidentally repeated
      in the future.\",\n        \"plan\": \"- Use the delete_agent command to delete
      this agent since it has completed its task.\",\n        \"criticism\": \"I need
      to ensure that the task has been completed successfully before deleting the
      agent.\",\n        \"speak\": \"I have written the revenue of Tesla in 2022
      to a file. I will now delete this agent since it has completed its task.\"\n    },\n    \"command\":
      {\n        \"name\": \"delete_agent\",\n        \"args\": {\n            \"key\":
      \"Get-CompanyRevenue\"\n        }\n    }\n}"}, {"role": "system", "content":
      "Command delete_agent returned: Error: invalid literal for int() with base 10:
      ''Get-CompanyRevenue''"}, {"role": "user", "content": "Determine which next
      command to use, and respond using the format specified above:"}], "temperature":
      0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '8171'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6yTT2+bQBDF7/0UozmDBSR2Uo6N1DSq2kP/KJHqylovY9gYZtHuEMey/N0rWEgt
        p6eo1xnmvd+bHQ5oCsxRV0p009bx1e33W6rSh/ur6hPd8+dHu797tOubD4mff8QI7fqRtIwTM22b
        tiYxljFC7UgJFZini+vLdL7IFpcRNragGnMsW4kvZvNYOre2cXKRpBhh51VJmB+wdbZpZSV2S+wx
        T6+TJMK/4i+NLMkiFCuqPikl2TFCXVmjyWP+64AN+UnY2ZowR+W98aJYekzLQtxHOCwZAGCJUtmu
        rMQvMYexODboWfriEu+gUk8EO2dEiEEqAkdPxB2B3cAP8rUCw5AlWQZiQcHG1DSDO9iZuga2O2iU
        2w5zovwWlIcxH82WGJ2aOlLesuEyOH+1O5BKCbwJIZrGJrcCmv2AMIMvym0Nl/+ECtzEvnMU7I2A
        8cBWQGltCmJRdb0HR+3w7L11L7TppHOvMrW14hAnhp+ehi8L6o1WqiSW3rdRXPTgoQ5SGQ+h6Q1r
        6gGqE8ICjPiQ5MxMOyNGG99MT8dEg/JpnJfQveaaiE+Efac1eb/p+oBr2lg30k7bGrDObX1Lavu/
        ruUtSwgwx2g663Gnr66aVUOB8/QJztIoV57/D6GxpX0YviWJb2zTKt5/C+HidJGlyftssbiYJRPP
        wDSiLfmIxwg3ho2vVuHQMUcvtsUIDRf0jHly/H189wcAAP//AwA3wH1PmAQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7b9fe9caca16a6-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:11:22 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '17990'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86500'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.333s
      x-request-id:
      - c39dba21fcb8c849408562b77ffaf223
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that nothing new has happened since my creation.''}\n\"\"\"\n\nLatest
      Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '740'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPwUoDMRRF935FuOtM6bSdtmYnLko3ioiCipQ085xEZ/LC5JW2lvl3qSjdHriH
        c08INQyct+K61BaL1ePqmybbw9Pd7cv9en/9+kBh/bxv/GJfQYO3n+TkbzFy3KWWJHCEhuvJCtUw
        5Xw5K6v5ZFlpdFxTC4MmSTEdVYXs+i0X4+m4hMYu24ZgTkg9d0k2wl8UM0w5mWtc3BdeaQiLbS9k
        Vg4aznNwlGHeTugo/1t7bgkGNueQxUY5N3IUiuf+m6ysyscs1Gm1Vj0527ZKvBUVWXyIjYq0V95m
        5W1KFKlWOURHqjuq36uB4wiDxkeIIftNTzZzhEEWTtAIsaYDzHh4H65+AAAA//8DANCoKK5mAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba06d39ff16a6-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:11:27 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2769'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89832'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 112ms
      x-request-id:
      - 7ff993628d168bbafdd5cfd5ba7b011c
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will start by searching for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information and I can use it to find the information I
      need.\",\n        \"plan\": \"- Search for ''Tesla revenue 2022'' on Google\\n-
      Write the revenue of Tesla in 2022 to a file\\n- Use task_complete after writing
      the file\",\n        \"criticism\": \"I need to ensure that the information
      I find is accurate and reliable. I should also make sure that I am not violating
      any legal or ethical guidelines in my search.\",\n        \"speak\": \"I will
      search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the revenue of Tesla in 2022. I will now write it to a file.\",\n        \"reasoning\":
      \"I need to save the revenue of Tesla in 2022 to a file so that it can be accessed
      later. Writing it to a file will ensure that it is not lost and can be easily
      retrieved.\",\n        \"plan\": \"- Write the revenue of Tesla in 2022 to a
      file\\n- Use task_complete after writing the file\",\n        \"criticism\":
      \"I need to ensure that the file is saved in a secure location and that it is
      properly named so that it can be easily identified later.\",\n        \"speak\":
      \"I will now write the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue.txt\",\n            \"text\": \"81462\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have written the revenue
      of Tesla in 2022 to a file. I will now mark the task as complete.\",\n        \"reasoning\":
      \"Now that I have written the revenue of Tesla in 2022 to a file, I have completed
      my task. Marking the task as complete will ensure that it is not accidentally
      repeated in the future.\",\n        \"plan\": \"- Use task_complete to mark
      the task as complete\",\n        \"criticism\": \"I need to ensure that the
      task has been completed successfully before marking it as complete.\",\n        \"speak\":
      \"I have written the revenue of Tesla in 2022 to a file. I will now mark the
      task as complete.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {}\n    }\n}"}, {"role": "system", "content": "Command task_complete returned:
      Unknown command ''task_complete''. Please refer to the ''COMMANDS'' list for
      available commands and only respond in the specified JSON format."}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have written the revenue of Tesla in 2022 to a file.
      I will now mark the task as complete.\",\n        \"reasoning\": \"Now that
      I have written the revenue of Tesla in 2022 to a file, I have completed my task.
      Marking the task as complete will ensure that it is not accidentally repeated
      in the future.\",\n        \"plan\": \"- Use the delete_agent command to delete
      this agent since it has completed its task.\",\n        \"criticism\": \"I need
      to ensure that the task has been completed successfully before deleting the
      agent.\",\n        \"speak\": \"I have written the revenue of Tesla in 2022
      to a file. I will now delete this agent since it has completed its task.\"\n    },\n    \"command\":
      {\n        \"name\": \"delete_agent\",\n        \"args\": {\n            \"key\":
      \"Get-CompanyRevenue\"\n        }\n    }\n}"}, {"role": "system", "content":
      "Command delete_agent returned: Error: invalid literal for int() with base 10:
      ''Get-CompanyRevenue''"}, {"role": "user", "content": "Determine which next
      command to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have written the revenue
      of Tesla in 2022 to a file. I will now mark the task as complete.\",\n        \"reasoning\":
      \"Now that I have written the revenue of Tesla in 2022 to a file, I have completed
      my task. Marking the task as complete will ensure that it is not accidentally
      repeated in the future.\",\n        \"plan\": \"- Use the delete_agent command
      to delete this agent since it has completed its task.\",\n        \"criticism\":
      \"I need to ensure that the task has been completed successfully before deleting
      the agent.\",\n        \"speak\": \"I have written the revenue of Tesla in 2022
      to a file. I will now delete this agent since it has completed its task.\"\n    },\n    \"command\":
      {\n        \"name\": \"delete_agent\",\n        \"args\": {\n            \"key\":
      \"Get-CompanyRevenue-1621092663.0\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command delete_agent returned: Error: invalid literal for int()
      with base 10: ''Get-CompanyRevenue-1621092663.0''"}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '9355'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6xTS0/bQBC+91eM5uxEiSkBfKOHUiqBKtFKqHWFNuuJvc161toZE1CU/175ERJB
        T6jXmZ3vNTtbdAVmaCujtm785Ozq7ktqfLy/+Pbp8+3Xdn7Plz+5vNLLm8UdJhiWf8jqODG1oW48
        qQuMCdpIRqnAbL44/zg/XaTn5wnWoSCPGZaNTk6mpxNt4zJMZiezOSbYiikJsy02MdSNPmhYEwtm
        6WxxkuAB/KUxvzhLUIMaf3ibLma7BG0VnCXB7NcWa5I9cAyeMEMj4kQNayczsBJ3FrY5AwDkqFVo
        y0olxwzG4tigJ+2KOV5DZR4JNtGpEoNWBJEeiVuCsILvJN6AY0hnaQoawMDKeZrCNWyc98BhA7WJ
        635OjazBCIz+aJpjckwayUhgx+XAfBs2oJVReJeEZD+2Zyugfu4lTOHGxLXj8p+iBt3E0kYa6J2C
        E+CgYKx1BbEa758hUtOvvaPugFattvGNp8YbHuxM4IdQ/9I70QdTEmtPWxsuOt1dGYz3MLb6ckUu
        wpqeJc/5gFBQJ3XAOIYY6qCVkwEFxLGlzkJ15LEApzJk8UqujU6ddVLvl89EPfJxIC+xdZhLIj4C
        ltZaElm1XURLWoU4qt3n3ct6TSsNmfX/+m/vCWEQs0v2hzFm+uYu2NQ06Dxa4iszJpbDQe1G1Jx3
        uEtw5dhJ9TD8csxQNDSYoOOCnjCb7X7vPvwFAAD//wMASSmd3JUEAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba07f981f16a6-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:11:46 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '18014'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86511'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.326s
      x-request-id:
      - c888ad43ea6cc071ff6ea2c891c454c9
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. task_complete:
      Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n7. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n9. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n10. list_agents: List GPT Agents, args: () ->
      str\n11. message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\":
      \"<message>\"\n12. start_agent: Start GPT Agent, args: \"name\": \"<name>\",
      \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3388'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4yTT2vbQBDF7/0Uw1xyiOTYTmK3ghJKC8EtpZSkzaEqZr0aSxvvH2V3FMcYf/ey
        lhzXTgm9jnbe/N6b0RpVgRnKSrA0tU7H1zeTT9f3H6h/+31ixLi24vO3L18L6o8+/sQE3eyeJHcd
        PelMrYmVs5ig9CSYCswGo7cXg8vR+WiQoHEFacywrDk9712m3PiZS/vn/QEm2ARREmZrrL0zNU/Z
        LcgGzMaXFwnutZ/rw8E4QXYs9HPp3XiwSVBWTkkKmP1ao6Gwk/VOE2YoQlCBheUI6SyTjQbWuQUA
        yJEr15QVhxwz6IrdB3riWMxxAkulNQQWnmG2gkDCy0rZEubOA1cEnh7JNgRuDrcUtABlYdgfDsFZ
        uHau1NTLMflb3ZMIzipbtiPaR6ACCPCklZhpguAaL7eiys6dNyLGAcIW8Z1WC9IrYAeVeKQthXGB
        oalTdmkhmA66nG3JTsIzbMd4TFZrYVuoFG62Trc2T1pju+bYebK3l+c2hTuvmF7Pgx0ImKuu4Ucg
        YBEW027bBGLO5GG3fFtu1eKTI0jpFSupgtltyBIVUZ1saHyEEAwTEOYfy5LOe5L8ItR9zzKqd8N3
        VtgdNEcPx8mFmsTi8GT2+f33mbSKm2R3oNIZI2zx4j6tMNQOK4mn8VqnoTFG+NURlvDl8XW3Hxqv
        W4GKuQ7Z2dlyueyVLYd05qylv3p4v4U97ehPI/HBiFbtoaEQs2wl72KYKrxq+2pndmu4853bDW4S
        nCurQjVtfxPMMLCrMUFlC3rCrL/5vXnzBwAA//8DAHqI91O9BAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba2492b78643b-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:12:58 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '16930'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86493'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.338s
      x-request-id:
      - 23772c2680215de14ac58706a08e7a44
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 61561,
      288, 4355, 10, 265, 7287, 10, 2366, 17, 23886, 2262, 961, 2, 16, 25, 28298,
      13254, 220, 2366, 17, 482, 5195, 7694, 5618, 4299, 1618, 422, 499, 527, 539,
      50028, 2949, 264, 2478, 6622, 13, 81372, 26496, 36234, 311, 1925, 2262, 12268,
      1022, 19815, 39076, 19952, 389, 19815, 39076, 86469, 1520, 86469, 11302, 8612,
      611, 311, 7940, 311, 279, 2778, 3830, 90541, 13254, 220, 2366, 17, 3580, 810,
      6571, 6571, 7131, 499, 1505, 420, 11190, 30, 13359, 499, 369, 701, 11302, 0,
      10577, 33781, 20492, 46112, 323, 41994, 46112, 323, 41994, 14710, 14562, 11823,
      220, 2366, 17, 716, 4430, 10714, 220, 508, 11, 7467, 11, 931, 3135, 320, 15,
      13, 2491, 6622, 8, 7694, 18591, 53043, 44165, 505, 279, 3566, 5932, 13, 20,
      7239, 549, 815, 13, 11441, 90541, 596, 13254, 14264, 311, 7154, 220, 5932, 13,
      20, 7239, 549, 815, 13, 11441, 304, 279, 220, 2366, 17, 20323, 1060, 11, 264,
      220, 3971, 3346, 5376, 505, 279, 3766, 1060, 1975, 28298, 596, 13254, 505, 47466,
      220, 1049, 23, 311, 47466, 220, 2366, 17, 320, 258, 3610, 549, 815, 13, 11441,
      8, 37, 16164, 1060, 99204, 304, 3610, 549, 815, 13, 11441, 2366, 15282, 11,
      20911, 2366, 9800, 11, 23848, 2366, 18887, 11, 21600, 679, 23890, 11, 22915,
      24, 810, 7123, 6806, 12331, 220, 1114, 11, 220, 2366, 18, 90541, 596, 13254,
      220, 1049, 23, 12, 2366, 17, 482, 12442, 9265, 16257, 9265, 2485, 1129, 2185,
      31187, 9265, 916, 46733, 2564, 46733, 56120, 612, 9728, 38081, 16257, 9265,
      2485, 1129, 2185, 31187, 9265, 916, 46733, 2564, 46733, 56120, 612, 9728, 38081,
      10714, 15109, 69742, 6806, 36448, 16298, 1101, 2610, 2675, 690, 1518, 810, 6498,
      1457, 13, 3639, 374, 28298, 9974, 13254, 30, 22186, 28298, 1304, 264, 11626,
      220, 2366, 17, 30, 3923, 374, 28298, 596, 13254, 304, 220, 2366, 18, 30, 36448,
      90541, 38493, 220, 679, 15, 12, 2366, 18, 765, 350, 8143, 1428, 582, 4744, 79717,
      2485, 1129, 2185, 62925, 4744, 79717, 5181, 46733, 23301, 46733, 27223, 46733,
      13254, 20122, 4744, 79717, 2485, 1129, 2185, 62925, 4744, 79717, 5181, 46733,
      23301, 46733, 27223, 46733, 13254, 90541, 9974, 13254, 369, 220, 2366, 17, 574,
      400, 5932, 13, 20911, 33, 11, 264, 220, 3971, 13, 1758, 4, 5376, 505, 220, 2366,
      16, 13, 28298, 9974, 13254, 369, 220, 2366, 16, 574, 400, 4331, 13, 23848, 33,
      11, 264, 220, 2031, 13, 3080, 4, 5376, 505, 220, 2366, 15, 13, 28298, 9974,
      4194, 1131, 79338, 7099, 33620, 9787, 54664, 38, 2177, 58882, 9787, 54664, 27977,
      612, 14851, 8623, 9787, 54664, 46277, 482, 469, 15202, 3700, 12037, 90541, 1903,
      810, 3300, 304, 220, 2366, 17, 1109, 3596, 1603, 11, 719, 1202, 2564, 578, 6383,
      713, 2485, 1129, 2185, 42901, 424, 713, 916, 46733, 51309, 4355, 52708, 19,
      12, 2366, 17, 12, 10326, 826, 5621, 1131, 791, 6383, 713, 2485, 1129, 2185,
      42901, 424, 713, 916, 46733, 51309, 4355, 52708, 19, 12, 2366, 17, 12, 10326,
      826, 5621, 1131, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298, 436, 7897,
      304, 927, 400, 5932, 7239, 304, 13254, 304, 220, 2366, 17, 323, 706, 810, 3300,
      389, 1450, 1109, 3596, 1603, 13, 2030, 5292, 3252, 7631, 323, 3682, 3430, 15455,
      2231, 4194, 1131, 12041, 369, 28298, 13254, 220, 2366, 17, 2675, 690, 1518,
      810, 6498, 1457, 13, 12433, 291, 7694, 46112, 5750, 555, 4668, 5750, 555, 4668,
      2392, 4355, 5347, 3695, 4355, 5708, 87698, 11092, 2392, 4355, 1646, 2392, 4355,
      6763, 65467, 3167, 74, 33115, 398, 28744, 325, 15202, 1934, 64465, 860, 682,
      3461, 459, 2217, 311, 3041, 11302, 36448, 860, 682, 90541, 6821, 3335, 13254,
      323, 34427, 389, 24608, 29768, 5002, 2485, 1129, 2185, 22832, 9081, 916, 46733,
      51309, 4355, 2442, 52742, 12, 10326, 826, 52708, 19, 12, 2366, 17, 29768, 5002,
      2485, 1129, 2185, 22832, 9081, 916, 46733, 51309, 4355, 2442, 52742, 12, 10326,
      826, 52708, 19, 12, 2366, 17, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298,
      1120, 5068, 11999, 58414, 24608, 369, 220, 2366, 17, 2737, 13254, 315, 400,
      1187, 13, 843, 7239, 11, 323, 24608, 824, 4430, 315, 400, 16, 13, 777, 844,
      288, 4355, 29140, 13896, 38493, 11, 65752, 552, 304, 1229, 19, 220, 2366, 17,
      14431, 2837, 8483, 2485, 1129, 2185, 44176, 2837, 61564, 916, 46733, 51309,
      4355, 52708, 19, 2269, 74276, 1131, 14431, 2837, 8483, 2485, 1129, 2185, 44176,
      2837, 61564, 916, 46733, 51309, 4355, 52708, 19, 2269, 74276, 1131, 18820, 220,
      966, 11, 220, 2366, 18, 2001, 28298, 596, 2860, 13254, 14980, 520, 400, 1187,
      13, 18, 7239, 304, 1229, 19, 220, 2366, 17, 449, 220, 1806, 4, 44188, 56, 6650,
      13, 28298, 27167, 220, 17, 13, 2790, 480, 1671, 315, 4907, 5942, 2391, 1229,
      19, 11, 4194, 1131, 28298, 1903, 459, 9974, 11626, 315, 400, 717, 13, 21, 7239,
      304, 220, 2366, 17, 84073, 7146, 3074, 2485, 1129, 277, 5455, 2174, 3074, 916,
      46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309, 4355, 27975, 12,
      1131, 84073, 7146, 3074, 2485, 1129, 277, 5455, 2174, 3074, 916, 46733, 9515,
      46733, 220, 2366, 18, 14, 1721, 46733, 51309, 4355, 27975, 12, 1131, 4448, 220,
      914, 11, 220, 2366, 18, 2001, 28298, 4756, 1202, 6020, 3135, 369, 279, 11999,
      8502, 315, 220, 2366, 17, 389, 8079, 13658, 13, 578, 2883, 7263, 304, 400, 1187,
      13, 18, 7239, 304, 13254, 4194, 1131, 28298, 596, 22613, 87055, 311, 264, 3335,
      1389, 719, 11774, 527, 2564, 45, 6616, 2485, 1129, 2185, 1276, 652, 2726, 46733,
      220, 2366, 18, 14, 1721, 14, 914, 46733, 51309, 14833, 10039, 30322, 34119,
      1636, 1131, 45, 6616, 2485, 1129, 2185, 1276, 652, 2726, 46733, 220, 2366, 18,
      14, 1721, 14, 914, 46733, 51309, 14833, 10039, 30322, 34119, 1636, 1131, 18820,
      220, 914, 11, 220, 2366, 18, 2001, 28298, 5068, 3335, 22613, 323, 3335, 30466,
      369, 220, 2366, 17, 11, 439, 279, 2883, 14971, 1139, 264, 502, 1060, 13176,
      264, 1396, 315, 32366, 11774, 13, 28298, 38493, 320, 87708, 398, 1680, 220,
      1419, 13, 1644, 33, 369, 5587, 220, 2148, 11, 220, 2366, 18, 56, 65978, 2485,
      1129, 5759, 7183, 916, 46733, 5220, 46733, 350, 8143, 32, 46733, 30466, 56,
      65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733, 350, 8143, 32, 46733,
      30466, 644, 8149, 1684, 1139, 28298, 38493, 320, 87708, 398, 8, 2737, 13970,
      828, 505, 220, 679, 15, 11, 27223, 323, 10691, 13, 2564, 6250, 220, 966, 11,
      220, 2366, 17, 11, 220, 1691, 13, 1774, 33, 13, 5651, 220, 966, 11, 220, 2366,
      17, 11, 220, 845, 13, 6365, 33, 5253, 12490, 40638, 596, 28298, 8220, 61437,
      220, 2366, 17, 449, 3831, 220, 19, 339, 2564, 19816, 3778, 12, 24137, 1543,
      2485, 1129, 2185, 53247, 1543, 916, 46733, 5557, 46733, 220, 2366, 18, 14, 1721,
      14, 1627, 83489, 3778, 12, 24137, 1543, 2485, 1129, 2185, 53247, 1543, 916,
      46733, 5557, 46733, 220, 2366, 18, 14, 1721, 14, 1627, 18820, 220, 1627, 11,
      220, 2366, 18, 2001, 1789, 682, 315, 220, 2366, 17, 11, 28298, 596, 13254, 16392,
      311, 400, 5932, 13, 20, 7239, 11, 264, 220, 3971, 4, 7940, 927, 220, 2366, 16,
      13, 28298, 1903, 400, 18, 13, 3076, 7239, 304, 1202, 11999, 8502, 11, 459, 24257,
      400, 16, 13, 777, 4194, 1131, 16298, 1101, 2610, 2675, 690, 1518, 810, 6498,
      1457, 13, 37957, 11948, 27573, 2675, 690, 1518, 810, 6498, 1457, 13, 28298,
      13254, 21964, 36448, 2392, 4355, 13254, 323, 2848, 1468, 288, 4355, 13254, 220,
      2366, 18, 2392, 4355, 13254, 304, 220, 2366, 16, 2392, 4355, 13254, 220, 2366,
      15, 2392, 4355, 4272, 11626, 220, 2366, 17, 2392, 4355, 13254, 6650, 2392, 4355,
      13254, 220, 679, 24, 2732, 18464, 7816, 3135, 22170, 1578, 27575, 26496, 24599,
      2287, 11, 64912, 263, 11, 9362, 4194, 12, 4194, 3915, 701, 6933, 2686, 4194,
      12, 4194, 4387, 3813, 12978, 11764, 11302, 48932, 44228]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7416'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba2d46b02643b-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:13:03 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '377'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 9ea0fb07e174d19d05ae1d60dddac409
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"Tesla
      revenue 2022 - Google SearchPlease click here if you are not redirected within
      a few seconds. Accessibility LinksSkip to main content Turn off continuous scrollingTurn
      on continuous scrollingAccessibility helpAccessibility feedback Press / to jump
      to the search boxTesla revenue 2022 See moreDeleteDeleteDid you find this helpful?Thank
      you for your feedback!Report inappropriate predictions Filters and Topics Filters
      and TopicsNewsImagesvs 2022per shareAbout 20,900,000 results (0.49 seconds)
      Search ResultsFeatured snippet from the web81.5 billion U.S. dollarsTesla''s
      revenue grew to nearly 81.5 billion U.S. dollars in the 2022 fiscal year, a
      51 percent increase from the previous year.... Tesla''s revenue from FY 2008
      to FY 2022 (in million U.S. dollars)Fiscal yearRevenue in million U.S. dollars202281,462202153,823202031,536201924,5789
      more rows\u2022Mar 17, 2023Tesla''s revenue 2008-2022 - StatistaStatistahttps://www.statista.com
      \u203a ... \u203a Vehicles & Road TrafficStatistahttps://www.statista.com \u203a
      ... \u203a Vehicles & Road TrafficAbout featured snippets\u2022FeedbackPeople
      also askYou will see more English now. What is Tesla annual revenue?Does Tesla
      make a profit 2022?What is Tesla''s revenue in 2023?FeedbackTesla Revenue 2010-2023
      | TSLAMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueTesla annual revenue for 2022 was $81.462B, a 51.35% increase from 2021.
      Tesla annual revenue for 2021 was $53.823B, a 70.67% increase from 2020. Tesla
      annual\u00a0...\u200eNet Income \u00b7 \u200eGross Profit \u00b7 \u200eAssets
      & Liabilities \u00b7 \u200eEPS - Earnings Per ShareTesla made more money in
      2022 than ever before, but its ... The Vergehttps://www.theverge.com \u203a
      tesla-q4-2022-earnings-re...The Vergehttps://www.theverge.com \u203a tesla-q4-2022-earnings-re...Jan
      25, 2023 \u2014 Tesla raked in over $81 billion in revenue in 2022 and has more
      money on hand than ever before. But flagging demand and major price cuts put\u00a0...
      Images for Tesla revenue 2022You will see more English now. Guided Search FiltersFilter
      by featureFilter by featuretesla semitesla stocksemi trucktesla modeltesla saleselon
      muskquarterly earningsearnings reportelectricView allSelect an image to give
      feedbackFeedbackView allTesla reports record revenue and beats on earningsCNBChttps://www.cnbc.com
      \u203a tesla-tsla-earnings-q4-2022CNBChttps://www.cnbc.com \u203a tesla-tsla-earnings-q4-2022Jan
      25, 2023 \u2014 Tesla just reported fourth-quarter earnings for 2022 including
      revenue of $24.32 billion, and earnings per share of $1.19.Tesla Reports Record
      Revenue, Deliveries in Q4 2022Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Jan 30, 2023 \u2014 Tesla''s total revenue stood at
      $24.3 billion in Q4 2022 with 37% YoY growth. Tesla deployed 2.46 GWh of energy
      storage during Q4,\u00a0... Tesla made an annual profit of $12.6 billion in
      2022Ars Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...Ars
      Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...
      Jan 25, 2023 \u2014 Tesla published its financial results for the fourth quarter
      of 2022 on Wednesday afternoon. The company brought in $24.3 billion in revenue\u00a0...
      Tesla''s profits soared to a record \u2013 but challenges are ...NPRhttps://www.npr.org
      \u203a 2023/01/25 \u203a teslas-profits-soared...NPRhttps://www.npr.org \u203a
      2023/01/25 \u203a teslas-profits-soared...Jan 25, 2023 \u2014 Tesla reported
      record profits and record revenues for 2022, as the company heads into a new
      year facing a number of steep challenges. Tesla Revenue (Quarterly): 23.33B
      for March 31, 2023YChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a
      revenuesYChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a revenuesIn
      depth view into Tesla Revenue (Quarterly) including historical data from 2010,
      charts and stats. ... September 30, 2022, 21.45B. June 30, 2022, 16.93B.Elon
      Musk''s Tesla finished uneven 2022 with strong 4th ... Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Jan 26, 2023 \u2014 For all of 2022, Tesla''s
      revenue rose to $81.5 billion, a 51% jump over 2021. Tesla made $3.69 billion
      in its fourth quarter, an adjusted $1.19\u00a0...People also askYou will see
      more English now. FeedbackRelated searchesYou will see more English now. Tesla
      revenue ChartFeedbacktesla revenue and profittesla revenue 2023tesla revenue
      in 2021tesla revenue 2020tesla net profit 2022tesla revenue growthtesla revenue
      2019Page NavigationMore resultsTry again Footer Links94566, Pleasanton, CA\u00a0-\u00a0From
      your IP address\u00a0-\u00a0Update locationHelpSend feedbackPrivacyTerms\"\"\"
      Using the above text, answer the following question: \"What is the revenue of
      Tesla in 2022?\" -- if the question cannot be answered using the text, summarize
      the text."}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5264'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yQS08CQRCE7/6KTkfjZSD7ACRz04PKWSIxxphhtmEHZ6c3M70shPDfzRpf56r6
        UlUndBVqtLUR27R+dPPwtDDu7vDcH+9fVstdu5BmJX1ZPc6yLSrk9Y6sfCfGlpvWkzgOqNBGMkIV
        6nw2n+TTWTmfKGy4Io8at62MyvF0JF1c8ygrsxwVdslsCfUJ28hNK+/CHxQS6rzMJwr/4L9CWSgU
        FuP/WSezs0Jbs7OUUL+esKH0w43sCTWalFwSE2RoyUEoDAtureVYubAFYZCaQOggCpaUvLlOEGlP
        oSNwAYqsKKA3CQKZ6I9wOc/HU1g77x0HBX3tbA0ugYFpfgUuDE8kgk3k5gvcRto77hIcycQxnhVu
        XHCpfh98HFBjEm5RoQsVHVBn57fzxScAAAD//wMAj4ylH5oBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba2d7be06643b-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:13:07 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '3228'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '88744'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 836ms
      x-request-id:
      - 372acebc30da0a1c0207e66e9a9c3ffe
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 61561,
      288, 4355, 10, 265, 7287, 10, 2366, 17, 9059, 12399, 961, 2, 16, 25, 10771,
      311, 279, 1495, 11, 28298, 596, 13254, 304, 220, 2366, 17, 574, 7154, 400, 5932,
      13, 20, 7239, 11, 902, 374, 264, 220, 3971, 4, 5376, 505, 279, 3766, 1060, 13]],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '373'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1R62Q6zupbm/XmKrX2bPgqzzbljDrMTyEBarRYkhCmE0QZcqndvJf9RddVNpIBl
        Y3t5fYPXf/zjr7/+7rI6f8x//+uvv9/VNP/9v77Pnumc/v2vv/73P/7666+//uP3+z9a5m2WP5/V
        p/g1/72sPs98/ftffzH/9eT/N/rXX39bJbdhLrjtvK0AWAGu/tjwLbnoNe9eV1e2D01AruVJG7cq
        LK4y5WaH2NnnTKl/Oz7k9XKlxDdPW7bueR7Cru/v5HA9N3QKm0MLy9KJ0AGye++TRH0ETfUZE28e
        LMCTjvoAVklNrNxKPLwOhSH3yHNDeZhu8XJsWgF8+8NdhIRxTpOigp7oB8gb3QwsjeYPoJDbUyjK
        mqT3m1idZfcc7EPyupYxvTyiQj5fin24zaasY13HFfTuRoI/9ETieXBtC2psLmJJlvWadobN8b56
        tFGm7hXAMLuzBuXFMEjUiT19CZdFk0uz81G0LrAezz2RwJ0lVbhqUTYujKPvZNkLBqTxH9Njg5cc
        Qp+8PLzQxKdbtV5yOKWdiuKic+O+sQcbEvfQIkXMOrCwMWDAobIeRGXZDkz9kd9BeBuGcC/Evr4V
        iSDAF9pAOFbPl7e6p96XknPL4caAUb3uLxoHE7i9Qyro2sgp7naEEcwD5AAVZPPzYXRQfRkmStW6
        rsl2jgz5Oz4Jro++XvvKvIK3MekkD4qhpoeiSkFohh/ildtr3DRsYQiDfoecg21QpqRLAw1h8Iih
        tzTD1/G8wWtuBeF4Fsn4yQo5ArKgOUi3LkVNz6ehg73/9JFyzap4q+5JCBt1ydD5zr/AHJexDT0g
        eCQuY4fSrGCP0kCKnrgX+wTWq+ba4Ds/vKXMMpII1BU08PjCmxAZlGeqcAPYryXk47Uet2B1G9C1
        V504rALBRgZlg24h9Mhftiqbzu+5Asfr0ybh56NQPrKyHHzXF6/1Qmo6Po0JlvgVI5vOfk0CLVEg
        uT9CFF8kTDddbytwehg4HK8orNfBVSwg6dgjVtcVGU1eXAdkaTogbazdev3kvQ8gmRr0MOGJUu6S
        TFDu+hIz7J4Bi1x0O7hUpYLsoBG9mTa9IN1tj8P7fFQpT32igPKYmkR9ktXboFlG8OgRFMpt0ehb
        u50NGApaijxZYuptv9oW5JrFQddIe46bgKICHq8vm1gP8/7d3yEBZW3oSA+CyFsvU3XdR/AR4IFr
        TbCxuC6g7+xTZD1MsSaXPeogy56mEFiDkjEc4z2kIjww4ba27bh5Sx1B+zNpRLlvhYdtMg2wmy43
        gi6vBOAjPG0wfh0VdO4tA9CNP/jQaytEvKsU6ut97qDEa6GCnMIk9XQydi0czttKNEKelPi3Yw4q
        D7jhPCdsvX7UPIG85isoq+3dOB9ikoJ0Fk/ImCPBmza76WR6bBSSJcCn6xw0PsziTMdLvV/B9hJ6
        H4Za1SNH4CxA+ODdgTpkNqLJzE2n1P8oMFLbAvOlpsTbU3AEmHqHPBQ0Tq7nqy9pMH26Bh4OTeXh
        +jS7Ej/qB2Kn8BIv0l7cwUJuTuTZqjxdnWxd4KEyHsglqNO3oE0nELFeQWwhdWp6uGwF5IENkbJb
        P3Q1zCwBrDpN6C6WbUarINqgpvUWshzPpXThPhKUEXMnnlRzYD0qjQ+60+eFOc/19U3a2h2A6blD
        GvOQKHVKB4ORbDEySvGpY8EYBth8jj5RDtonnkKRXKXQ9D/kIBe7cTLXLpdI4x9IaDk+WF5dmcha
        EDtI36eKzoDC6aAs0Gt4umhMRihTTtC/nzWS+tnFWwDbp9Bdew5LWnLXNwmtnCxzh4Qc9q8X6J8t
        LESALibRY3HxyLn/CKAK3zZybamMp8VUKjllZZ94UwF0spN0Az64R0Fc512AWW2mFI5pciO2pdre
        srseE3jiuE/IjKd7POTJqYVu/wYYMo7yJ1+CZ3kNiTHCBGBOjBN4vlR75F7sla7VsN/BOHrfiHcM
        j972lD6JRJPKDJNbVo6L5JaSzD2mELmeydIhOpQarNT4EMpLrejrh7F30HS+WU24xDENtESD8UZ8
        LMfLmP3mB+9dPIZsX1XeBp64AFsK7yTQ1TVeNrsZYPritG98nuhSxAUErJvtkFWtfE06Q2Eg0HQj
        3FmMnxGz8CyotMIVucadB9/4qQA1uQOyIk2u536f2PCseDoKXjtACXvjfGhaloaCTrvWk7kWD2C8
        YYAlb2Hj5awtCZSYd0D0RTWz7XVsK5hsVMIitr1s4s+ZDQ7G8MZCsipget+aRC7ou8XMalfevIQV
        BzA3ZESNJ9YjqjNhkMbOHbff76Gcxi4yMh8nknb14K2ZsNjQEDqPmJ+yjumDuyjwfUhUpBq7O11S
        OIaSJ4YB3nIPx9OpchJQP6KemPJhyTa8d74rLbCY1tGoL8/OtWBRuFnICUE4kq38PGCbpAKyslSk
        FZBzBhbxaw33RcDE9GgyLkyVV4bsSBL0iXG8nTTRlxNS8V7WW8KNO2iJ0oS59lPWayNLPoSjySLb
        FVLwHc+A0XD/4eO+Xik5bXCJMo+grOAznPq1BQnfR3i9aEw8H72zAQ/o2CFfVja6aFmfAofTAD7J
        fOsNVdidIezu/Pd8yl43H6wJbsAKke3VUjaFvnaFsVHZuHT3SbxmdZICW3ihcF9X55raXr+DHIpu
        BD1Lzpsd58pAbxWLcGMPabaY8HiWmqYJkXq8nemiWU4nle9FRbfr2QAMeQYLIA/bR2h+H2u6leQB
        kkqbCYrsTF/3CepAf0MmhvK4xZv0RL50CgeeGOPyrue+Ms/QOKEeOYm+ZWQneQa8ZglCKdeadGu3
        hwVWBDncPpa7t+y5ToNETc9Irc2jRxohiuCPb4Q2O+qTtF93IL99fKQ5x9JbgvDDQDErMvS8y3I8
        t+OuBVxyeOGdUOF4zQTBluX32UN3bHtxdwbBEXbn0zOU8iLUqTCzEawmbU+CVr2B736G0LovPNHo
        Crwp0k4GVO/YIVYmtjp1uDKHFtJ2xKlTAuYbLxawEXcucTNnyeizPDcwuA0AWXId1MvOKwo5aaaR
        GFvH66vbtw85vktGyA2UAb3+1jHkCi/FS33eMpz4+iKlYxAT854fxq3Slwekuu0QKyVSTLwpEWAq
        jO6/z1/0tnxBFGCEtHWBI1n7tIJGWA+YczwX4HO0hD9+Q4LAmOM+DZYOHpolJQ/GKTxctGEE78O+
        R8aj3um/8yoHWrQn2gIOHn9mbhsc3/aRJHvrU6+NPbjwEUYLFne+CeiP//CX0SOHtolGLqtcBkbl
        dEEnVKiAX6/7FnLBpUXBm23qzTRMDt6700gMGnP1/L7mjOSfSYwcxJYjhl2eQl7IdyTgzC3b1KTd
        geAMZWT2laZ3sWDn4DseZi0c0tln5A4k07CQQ3FTKFOXcAdPjdsjlO3rkdbVVsHT4MjEgbd0pGLd
        TJBXYhRu78rXV1LXR8BuH0wceb7XC7rzCvzmo1DyTBaQVwkE0GYGh9T3imPcwKmTfvpEk55iPP/2
        z+DmlHzxFAynz/36wz/yy88zKh4FvAqMRV7h5xMTlMJW+vG/g/ke6HyZhuvve/ECT7K35muTgCuo
        jFAApKfz22t3UABJi7nXUQfbrmOxXGhTQw6lpmT85eOm4KmGd4ISj/cIRHoDPpiOmOEdZWRKKjTQ
        iMGHKFibwbS7Jgn4TOaMjBEKdDXfowJPhsIgbTkeRna9pxg8Vf/+5SO2t376kwE0iWHDQdeFmpqF
        Z8Bno/goGu47WmddcYbphb+FbPa0wdyp8gSDKmGIqwiGvs3M/Qrt13BAhzD6jItzeRwBvlYt0j2f
        xiNXtQZUyiol9jiieH0ACGE33W7E3mWdt0BPDSG552Eodgcf0PHpT1D92AqJJUP1WHOJBDlWORcz
        PFPoq39IOngX7gXSLvmp7ruXUsiRuCDi6yD2NtccN3hRkjmcwj4cmcNr4uAPH0P8iuLB5JZEzkLV
        QjpW2np7zpH2Wz+kAu6Q0dc0blBQChG5NRd4NJiEEKosQsQ52A3YlJmkgFjbEU/Bjuj0qx+gWLfX
        cHiy4chDDCSAe3lF1sTQGn+eWQdlxN3RYZTWehFZzZA9K01DwAY82KIokSCr4ikEQLyAnpUKKEMp
        fyL/k5pgCXR+B536LOP6u5707u5CKMw7Qmyzyui6D14bYC8Ojw6K5GXrJg5XKImyE4oHu6F0T6QK
        3FFe//S4TuYIuj+8JPaoIMqc3+8CdpYforBsq2zB6G6B1DNzLKz6SLE6OpJkP3YOMVuuBssn0Sf5
        y9cJ+uLpjy+BgosbovX4lW06dzKA52c4nPK519e9RiS4L/0Fvzu/1n/9S4KAO2IU907HP7yteaUK
        Oc4nYPE53Qc77vblK6VGlzMIop8ewU/7PoNZwXD3i0eigHTw+v1LmmDnlA0J7vIz+xM/rp5vWAos
        pt52WXGFo3Z9hszW8R4JzQcDTxMPiJnYXb08ouEMv/iP3D7sR6L0FwUebueaKIy0j/s3LTv4018H
        ++R4LGceJcBFpA73X7zN35/Ghzmr6hhQ/+5942eBOzNXiDrTcfzxUTngtwX5QUzqP/qnW+czcpRH
        C9Y06QowSFGFd5RdY8KcxUS8uyxDrBJWHv3yKVjGc4bc5f3JNrVIFejx8YMcXmpZU7VnruDMdgzx
        +VyJVyyMGDAcpJhJq308/PRLqyuQhLMTxxPfb5Lc5ZFNDkI//hsPv3yTaDk305lJT2eZMPszXqMr
        563u42QBf6JB+Hxfk4z58mH4YbyOeLa/0T/6BVJnQd5Vwr/2hlyVKQzfYF31eT8MLXxVLUHGnd9T
        glKmhWxTvMi1BnU2c+kyyONtupMoYUmMzTIZoFg3V6Ti3NNXxhBbyIRUx3s9fdVLFCgQfs4qJcpt
        LeP1ctOan74jYQvLjNiKZIEvHwgZO16y1XFyDuhKuGHAa7U+cIZ+/cPv1uh61al6frRQuS4lFhFb
        1mu+Tgnki8wgAVyXeglCwkCOra/E/M2nc4pFjq67BwZfP6o1m8tDSuZMJsbQinTjmxSCz/ockFfI
        gz6YanGVwHnWiGY1GtjM+/zVJx+A5bv9oeTucqEckbXGnHfdZ7N8risox/Ebs0fLy6ZsiwbJfnUH
        chRMBzBOYdjQ27UOvktXADblUtnwMjM1Spr9mm3ye5F+fhvqDrePt0mmA8ExvAcotZEKKGh8Dfz0
        eKwOpTd7r6cA9tecx3xTMx71/a6BP/xRxPcOYEtkffjT09bPL6w/hgSnA9TJo9DtmE+fy0MWQNoi
        V4yMH55Y8p3qTcghv89WJj1d4Xw9QnQAu0nHPz/L2zUO+fopYPSmRPrpAWQD0gN6v2AL5BE6Im8e
        WorNkJ2g2wIZ6c/TVFN+WHL4yXuOuLPYe5Rnu/PPXwp5oR8p5onGQPvQBlhM51h/lx/qyh/rDTFT
        irJOT1kmwAzbgIQ5Muo1TYpCFpWtRsZK1ZpGCx0gfBtlyDTvLKaCZ7vwcb2OCN0vGtgOqSHBF5GW
        73geXQd+NuConZ+YRDQdsckJqeSd6Eh0bq4zenH2jYTDfCS6sldrdrcfNbhXLRDKyPToWlPtDGuY
        5MgroqHenkcUQvaRN8gMzWlc+yo4Axw+RqTBXNCXkKsqoPeqiDxWuMXUcOsr/OYjvLXC6JEl3hYI
        u4wPGb2N4/njhxH8CNsNi/NzpLiC5lluKdgh5aAd4pV/d4XU8YcjsTXuWU/L9i7gL361A9Kyr7+2
        wE3xS2JxPIm//ArDwp4FZMobAX/8DkVszuQucBbd8qDHIKmUOey/emDZvvLmiw9YHB+BR1nt+gDE
        NduQzZ2PPkluL8ETx3yIFZY9HZUd3MC4l+xw+foTmyLcjtDQ7RSL3/5pvEYQ3mUNEZdr32CtBn4H
        ObfvUBh6g06+8SHdl0sbbj++3DfHh3zalyLxImGh47JLdzBm7y55lbfCw+Lh8wDvxAu/fPijr1W0
        Ybgmykpck3BgK63LDrTFg6LDcWcCLt66ChiM+sDyx6vHpTrbEXQLqQ/r/nLwpGLZ2T9/G1n146YP
        gy0V4Hh3LKTnn7FeIsJZ0ABnB+nvXZ/RST5fJQ8dJmKGpj/+8gOIfHnB+5TlKSaMMEDmXkB09OaW
        Li47SsC0FwXdrvvmq9dxAU73dCHK1z/Yaos9wk1IjiR4njN9We3gDE7lY8T71E2yTfjcll9+QWbu
        fLyNC6kPoexmeOEMz6ONkEawEzWV2L4o1l8/CcJr69p4X94UnU2C+xnK1RCQEPDh2Pf+u4HgTDQs
        1xexbtSl5+Ap7Hh0Y+Vg5M9QY+BztxnIPFpevLkSZf74sTnrLeOY7RRDjrZnRYy02mdrU5AUnj7P
        PTI+EhiX0NfOcE52EvnxIVrPQ/oH/8yyMOhaP6sWvBMnJMHuQOptt3s+ABfcWszrje9t3QbSn59L
        fuvd/fjFF/8waHKZLnHKDvC7fkg1YinD2Fltae/hHTK+ftLaFJ8EsDerCytV1OPf+MCP1Ev4rJk3
        WC1TwiAkuxfGPz1qvmsFinpeYgCbyzh+xESCPz4k+GHqff3A7eeXotPqOjH7yfsQKob173ihoTQJ
        kse8c5IRNovb55wqIPpYp5B5k4+33acsgWIbnYma4Sjb2Lu3wIwLOWS1H7XmH+PbhcVYjyE8DnPW
        PZ9p+CefP77/2Tl5WPC1jLtQsOc2Xv3DsZO9u5Wgn9/+B0+aV3gifmeaNa+fqQDWOZ2x/DwDb+5e
        SgWSc8OhPC57bxt2bgMTVRCQVvDTuC66BGHOzypysD1m2FSLs4ynkXz5SZGtk+Cn4ACZM3lwtKAL
        kZIGxMN4Io56aLMJoYMLR9Tl5Hd/QaeteUhf/hAKltp5y/Q4uBCQXAp3uWR4f/TMb74grpeMLLS2
        oH7c78mB6wKP28dyBMiZf+E6CCJ9daGTwmux+HjPRXPWdUJ2hQc+T/Cminq28P0mQCTtNPTV/xS/
        aicHVHcd4n79XhqvKQQLL8EAwIatv/xdgNfcCJCqRVndShveSW/2YyKveu49vI/ZI0Tv1kJBmE7Z
        sr4TG5TjeiEJbwzx+tN/WLUHooxXVHMvkxsALo8vYvlTPm67rLtKXz2NlJtV0u2bf+CffB1JiTd9
        +Qn46gViN/tTvNzayYYoZQKkyc6tnjuVnaCM9Wc4XyIZUM4tGOif55gYd/5FMYP9EHZO3YRc/bh5
        bGW7DKzLoUVm5+veGriXBwykHCO3qwd9847ZALj5mRFdZ9malLf6Cr/3bcjYups+jL3myvgk8sQA
        l/iPPwnJrXwS647MbH4re0tCKReEo1Rz9K2/vQl+OLb9+sWih7/nF5IhyEIgS+d6E5vtCD19epAr
        LU718sUncBM5OSyF8qMv09oKIMtyGYsnTwGzRW8T+OQjh5C7PjOccPUOZILEEDUYufGr9yXwPV9Y
        Pmae1x1Vcfv5gaH86LOaQHFcoHd+9WEF7IQuk3jfwWMZqEQ95Ma42HuYQ4dTALJvmVqT20NkoM/X
        Vnj+8tuFdvAI9biX0R+9KDZSJEl5riNbXuyRK0W7gGVMMiyJUePhVAU++PHB5YvH24Mfmp/fEoqt
        FerDd/6gy482sh8y421lJk/w/hBS5G3lfVyPLBPBZDFhmB6fW7zZpvGQf/iocMQd8VffAk0bLWKy
        SzTSjCY+fIZVGrbYjWq86+QJHkj6DD/3sappUClX6CFzCrlolvWNvBIJqGqHMCMNTEaFi6DBexXd
        iLP2L2+Jj8EGIctjEujTQnF5MhkIL7OIwhaqMcu/uwrKnJkgK38b2fe+lYFfPkO03MPZ8vX7IB+8
        j+gaJ4+R2F4P4Vd/hnM1SN72EkpfZmF7/3OfMV7h4Epaomp4k573jLz8hwsvmf0ON1WsMyyDYwci
        97QRXx6jbBlW1IAvH0BBYAQx3oTzIsv0niLLZGZvdnOuAV9+ife3c6N/9bUP0bPykMNc5GwRmGqD
        l2DCRHVeerwlaiyBL16F8njj6Icy/QQxbotvf4G+GfXO/eEpsmqgx5sYva5//Pqwi5R6ORlcC03/
        cMVsQjt9MGrO/nOfZbD7M2CcyyMCSFviYNVk4G3SZ2+ATzE98ZuSmG7PanCF7/068fGq17PY+wP0
        rcHAWyc6lB+jBydxw/oMmTZtxyWek0aSJXxA1k70a3wv6wL+/asK+M9//PXX//lVGLTdM39/CwPm
        fJ3/+V+lAv9Mn+k/GYb7J+H+VCLgKS3yv//17yKEv/uxa/v5/85dk3+mv//1lyj9KTf4e+7m9P3f
        n//jO9p//uP/AQAA//8DAL/yWGPjIAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba2ece989643b-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:13:07 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '179'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 57e5ae41c572c8184f6c8c802398f0cb
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"According
      to the text, Tesla''s revenue in 2022 was nearly $81.5 billion, which is a 51%
      increase from the previous year.\"\"\" Using the above text, answer the following
      question: \"What is the revenue of Tesla in 2022?\" -- if the question cannot
      be answered using the text, summarize the text."}], "temperature": 0, "max_tokens":
      0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '412'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SO0WrCMBRA3/cV4bLHtLTVas3jEIbPExmMITG5mrg0tyTXTSf99yFs7vXAOZwr
        eAsKjNNs+iEU8+eXlf1+3bQ4XQ2tOzq7OT6tzeXsl+0SJNDuiIZ/jdJQPwRkTxEkmISa0YKqZ920
        bmeTbi6hJ4sBFBwGLiZlW/Ap7aioJlUNEk5ZHxDUFYZE/cBbpg+MGdS8k/CfvuOmlsDEOtzJYjFK
        MI68wQzq7Qo95r9mooCgQOfsM+vIt0OKjPF2v3YoEn5iPKGgvVhjDlr4KJqqacSXziKiTuEiHru6
        bMXOh+ApSqGNoWR9PAgmwQ4F45lLGCXsffTZbRPqTBEUZKYBJPho8QyqGt/Hhx8AAAD//wMA1Twh
        oWsBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba2effc5e643b-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:13:10 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2120'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89908'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 60ms
      x-request-id:
      - f5ef678583d6b97c50cb37d8dcd2e15b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. task_complete:
      Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n7. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n9. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n10. list_agents: List GPT Agents, args: () ->
      str\n11. message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\":
      \"<message>\"\n12. start_agent: Start GPT Agent, args: \"name\": \"<name>\",
      \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created and nothing new has happened."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will start by searching for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"Google is a reliable source of information and is likely to have the most
      up-to-date information on Tesla''s revenue in 2022.\",\n        \"plan\": \"-
      Search for ''Tesla revenue 2022'' on Google\\n- Write the revenue of Tesla in
      2022 to a file\\n- Use task_complete after completing the task\",\n        \"criticism\":
      \"I need to ensure that I am searching for the correct information and that
      I am writing the revenue to the correct file.\",\n        \"speak\": \"I will
      search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was nearly $81.5 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4755'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4ySTY/TQAyG7/wKy+e0Sr+WbW6IA6pWu0gsaJEIqrwTNxk6mQkzbruo6n9Hk6SU
        BoTILfb49ePXPqIuMENVkai6MaPX7x5X5WF7//7ue/nmWRfLz28f7+b3/uVh/+EBE3TP31hJXzFW
        rm4Mi3YWE1SeSbjAbHJzO58sbmbLNMHaFWwww7KR0Wy8GMnOP7tROksnmOAuUMmYHbHxrm5kLW7L
        NmA2SRfLBC/il8RykaA4IXMJTRfzU4KqclpxwOzLEWsOZ2HvDGOGFIIOQlYiprPCNo5wzC0AQI5S
        uV1ZScgxgz7YJ/hFYjDHFVS0Z9i4nS1AKgbPe7Y7BreBjxwMgbYwTafTMazgoI0B6w5w8FoYtIA4
        INhow+Mck987eKbgrLZl1+bJa9G2vOrwq7bTJWPcAeourhSHEBsYEvZAtgC2YecZpCKBFRQOrBMw
        LnArqu3G+Zqiq0OUxpDtKEbw1IL/a84LVp7bEXyK+hS2635rDLSJROcl9jPFJ4O2Ko6sdKjPRlvm
        IqpfD0J16+ZfzIm/ynnPSjqbqF0RSZtpIzpAoD0XEZ7AONUaAIeKPcMKFFlgCtr8GDo69Cg0TNsz
        6GDN/+fWOMdO8JScz0+5uiZb/HF9lmruerUN1uLWrd/XSOTL4eF2ifj2IiERZ93zjSXedTKsuJz7
        7WSR9t+Zt2Xu0XN7wlOCG211qNbdDWOGQVyDCWpb8Atm6enr6dVPAAAA//8DAL9D07ZgBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba3017cd2643b-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:13:26 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '16212'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86485'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.342s
      x-request-id:
      - 881b9b2069514183470f6f15a54c8245
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file. You
      should write the number without commas and you should not use signs like B for
      billion and M for million.\n3. Use task_complete after you''ve written the file.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. task_complete:
      Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n7. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n9. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n10. list_agents: List GPT Agents, args: () ->
      str\n11. message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\":
      \"<message>\"\n12. start_agent: Start GPT Agent, args: \"name\": \"<name>\",
      \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nAs
      a system, I recall that I was created and there have been no new developments
      to report."}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will start by searching for the
      revenue of Tesla in 2022 on Google.\",\n        \"reasoning\": \"Google is a
      reliable source of information and is likely to have the most up-to-date information
      on Tesla''s revenue in 2022.\",\n        \"plan\": \"- Search for ''Tesla revenue
      2022'' on Google\\n- Write the revenue of Tesla in 2022 to a file\\n- Use task_complete
      after completing the task\",\n        \"criticism\": \"I need to ensure that
      I am searching for the correct information and that I am writing the revenue
      to the correct file.\",\n        \"speak\": \"I will search for the revenue
      of Tesla in 2022 on Google.\"\n    },\n    \"command\": {\n        \"name\":
      \"get_text_summary\",\n        \"args\": {\n            \"url\": \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was nearly $81.5 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have found the revenue of Tesla in 2022. I will now write it to a file.\",\n        \"reasoning\":
      \"Writing the revenue to a file will allow me to access it later and ensure
      that I do not lose the information.\",\n        \"plan\": \"- Write the revenue
      of Tesla in 2022 to a file\\n- Use task_complete after completing the task\",\n        \"criticism\":
      \"I need to ensure that I am writing the revenue to the correct file and that
      the file is saved in a location where I can easily access it later.\",\n        \"speak\":
      \"I will now write the revenue of Tesla in 2022 to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"tesla_revenue.txt\",\n            \"text\": \"81500000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5881'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6xSS2vbQBC+91cMc5aNbMdOqmMohPTURwyFOoSNNJa2Wc2oOyM7wfi/F1l+pA40
        l96W+fZ7zGODvsAM88pZXjdhcHnz/XNaza9/t98m89nH65uXL8+fxvRDm6+uxQTl8RfltmcMc6mb
        QOaFMcE8kjMqMBvNri5G09nFKE2wloICZlg2NpgMpwNr46MM0kk6wgRbdSVhtsEmSt3Yg8kTsWI2
        mqSXCZ7ET8DlVYIm5sKpdHE13SaYV+JzUsx+brAmPQhHCYQZOlWv5ti6mMJG3LWwWTAAwAKtkras
        TBeYwb64B+jZuuICb6FyK4J19GbEYBVBpBVxSyBLuCMNDjzDOB2PwQQcLH2gIdzC2ocALGtolcCc
        Pj3s+6LuH3Gx0+qA4QKT1+aRnAp7LvsEc/VcninsxNWX7AJY5eyoBV7h+MtxAS4EWUO9M61lRSDc
        PcUqijuGnts3wXHvPID5e9nPuHn05nOv9WF4TFT0HG0jvZN1h+4HzmJQu6IDXoBilKjdnDtuEyUn
        fZNbG3JP/2tpZ/vpfbbJ4XByqWvHxZu7YVdTH+GvqZ0ldbE8P7nXm+8F7v4VunIKj0QM2ubdLJZt
        CC+nfo8tHZLv0u+bWPAWtwkuPXutHnpLzFBNGkzQc0HPmKXb++2HPwAAAP//AwDlpxj4JAQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba37a68e1643b-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:13:44 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '14522'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86488'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.341s
      x-request-id:
      - fec9864333649ee81e3de72eccf26fd7
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3407'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SSS2sbMRDH7/0Uw1x8yNpxnPdCCfTQJORQ6INQusXI2vGuEkmzkWbrBOPvXuRd
        p8kWcmivM+j3f2jWaErMUddKtGvs+PTyy8315+939qppmlNVL+xNTVeLhb/59OEjZsiLO9LSv5ho
        do0lMewxQx1ICZWYH5ycHR0cnxydTzN0XJLFHKtGxoeT47G0YcHj6eH0ADNso6oI8zU2gV0jc+F7
        8hHz0+OzDP+wn+ez6VGGwqLs8+j8ZLbJUNdsNEXMf6zRUdxhA1vCHFWMJorykkyyF/IpwLrwAAAF
        Ss1tVUssMId+2C/oUdKwwGtYGWshkgq6hiUHkJog0C/yLQEv4StFq8B4mE1nM2APl8yVpUmB2Uti
        IBXZG1/tsJ6oBGFYGl++zRSGvhEC9wSi4v2kVwETQUEga9TCEkRug94SjF9ycCp1OHTSWOU7E2P4
        FmmrPapI5in0PLbOqfA0SpJO+a3Ffwhf+DHcBiP06oUwKFgaS+CVoxJG3ErTykQeZTS0qYMRo010
        w8LIxzYkrpIt/EVUuO7qTK1o3QYlBCnDrqChRmxI3f/3P3fETba7qr65v44qZe7Ehm0PbKlQDU+y
        W7TBdoBapIn5/v5qtZpUnQ/Nbr9zf/Hwfmt2r3e/lxy/kuhoDy3F1FqHvE19mvhm7Itd2G3gPnfh
        N7jJcGm8ifW8u3PMMQo3mKHxJT1iPt383Lz7DQAA//8DAJWDbeRyBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba56f6f6dcf25-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:15:06 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '15825'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86493'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.338s
      x-request-id:
      - 803c5c6cdafc955a28b156cdffbaa6d8
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 61561,
      288, 4355, 10, 265, 7287, 10, 2366, 17, 23886, 2262, 961, 2, 16, 25, 28298,
      13254, 220, 2366, 17, 482, 5195, 7694, 5618, 4299, 1618, 422, 499, 527, 539,
      50028, 2949, 264, 2478, 6622, 13, 81372, 26496, 36234, 311, 1925, 2262, 12268,
      1022, 19815, 39076, 19952, 389, 19815, 39076, 86469, 1520, 86469, 11302, 8612,
      611, 311, 7940, 311, 279, 2778, 3830, 90541, 13254, 220, 2366, 17, 3580, 810,
      6571, 6571, 10577, 33781, 20492, 46112, 323, 41994, 46112, 323, 41994, 14710,
      1453, 351, 434, 337, 661, 1320, 10714, 220, 508, 11, 7467, 11, 931, 3135, 320,
      15, 13, 2618, 6622, 8, 7694, 18591, 53043, 44165, 505, 279, 3566, 5932, 13,
      20, 7239, 549, 815, 13, 11441, 90541, 596, 13254, 14264, 311, 7154, 220, 5932,
      13, 20, 7239, 549, 815, 13, 11441, 304, 279, 220, 2366, 17, 20323, 1060, 11,
      264, 220, 3971, 3346, 5376, 505, 279, 3766, 1060, 13, 2947, 220, 1114, 11, 220,
      2366, 18, 90541, 596, 13254, 220, 1049, 23, 12, 2366, 17, 482, 12442, 9265,
      16257, 9265, 2485, 1129, 2185, 31187, 9265, 916, 46733, 2564, 46733, 56120,
      612, 9728, 38081, 16257, 9265, 2485, 1129, 2185, 31187, 9265, 916, 46733, 2564,
      46733, 56120, 612, 9728, 38081, 10714, 15109, 69742, 6806, 36448, 16298, 1101,
      2610, 2675, 690, 1518, 810, 6498, 1457, 13, 3639, 374, 28298, 9974, 13254, 30,
      22186, 28298, 1304, 264, 11626, 220, 2366, 17, 30, 3923, 374, 28298, 596, 13254,
      304, 220, 2366, 18, 30, 36448, 90541, 38493, 220, 679, 15, 12, 2366, 18, 765,
      350, 8143, 1428, 582, 4744, 79717, 2485, 1129, 2185, 62925, 4744, 79717, 5181,
      46733, 23301, 46733, 27223, 46733, 13254, 20122, 4744, 79717, 2485, 1129, 2185,
      62925, 4744, 79717, 5181, 46733, 23301, 46733, 27223, 46733, 13254, 90541, 9974,
      13254, 369, 220, 2366, 17, 574, 400, 5932, 13, 20911, 33, 11, 264, 220, 3971,
      13, 1758, 4, 5376, 505, 220, 2366, 16, 13, 28298, 9974, 13254, 369, 220, 2366,
      16, 574, 400, 4331, 13, 23848, 33, 11, 264, 220, 2031, 13, 3080, 4, 5376, 505,
      220, 2366, 15, 13, 28298, 9974, 4194, 1131, 79338, 7099, 33620, 9787, 54664,
      38, 2177, 58882, 9787, 54664, 27977, 612, 14851, 8623, 9787, 54664, 46277, 482,
      469, 15202, 3700, 12037, 90541, 1903, 810, 3300, 304, 220, 2366, 17, 1109, 3596,
      1603, 11, 719, 1202, 2564, 578, 6383, 713, 2485, 1129, 2185, 42901, 424, 713,
      916, 46733, 51309, 4355, 52708, 19, 12, 2366, 17, 12, 10326, 826, 5621, 1131,
      791, 6383, 713, 2485, 1129, 2185, 42901, 424, 713, 916, 46733, 51309, 4355,
      52708, 19, 12, 2366, 17, 12, 10326, 826, 5621, 1131, 18820, 220, 914, 11, 220,
      2366, 18, 2001, 28298, 436, 7897, 304, 927, 400, 5932, 7239, 304, 13254, 304,
      220, 2366, 17, 323, 706, 810, 3300, 389, 1450, 1109, 3596, 1603, 13, 2030, 5292,
      3252, 7631, 323, 3682, 3430, 15455, 2231, 4194, 1131, 12041, 369, 28298, 13254,
      220, 2366, 17, 2675, 690, 1518, 810, 6498, 1457, 13, 12433, 291, 7694, 46112,
      5750, 555, 4668, 5750, 555, 4668, 2392, 4355, 5347, 3695, 4355, 1646, 2392,
      4355, 5708, 2392, 4355, 6763, 87698, 11092, 65467, 3167, 74, 2392, 4355, 7458,
      33115, 398, 24608, 7063, 6412, 1779, 2265, 860, 682, 3461, 459, 2217, 311, 3041,
      11302, 36448, 860, 682, 90541, 6821, 3335, 13254, 323, 34427, 389, 24608, 29768,
      5002, 2485, 1129, 2185, 22832, 9081, 916, 46733, 51309, 4355, 2442, 52742, 12,
      10326, 826, 52708, 19, 12, 2366, 17, 29768, 5002, 2485, 1129, 2185, 22832, 9081,
      916, 46733, 51309, 4355, 2442, 52742, 12, 10326, 826, 52708, 19, 12, 2366, 17,
      18820, 220, 914, 11, 220, 2366, 18, 2001, 28298, 1120, 5068, 11999, 58414, 24608,
      369, 220, 2366, 17, 2737, 13254, 315, 400, 1187, 13, 843, 7239, 11, 323, 24608,
      824, 4430, 315, 400, 16, 13, 777, 844, 288, 4355, 29140, 13896, 38493, 11, 65752,
      552, 304, 1229, 19, 220, 2366, 17, 14431, 2837, 8483, 2485, 1129, 2185, 44176,
      2837, 61564, 916, 46733, 51309, 4355, 52708, 19, 2269, 74276, 1131, 14431, 2837,
      8483, 2485, 1129, 2185, 44176, 2837, 61564, 916, 46733, 51309, 4355, 52708,
      19, 2269, 74276, 1131, 18820, 220, 966, 11, 220, 2366, 18, 2001, 28298, 596,
      2860, 13254, 14980, 520, 400, 1187, 13, 18, 7239, 304, 1229, 19, 220, 2366,
      17, 449, 220, 1806, 4, 44188, 56, 6650, 13, 28298, 27167, 220, 17, 13, 2790,
      480, 1671, 315, 4907, 5942, 2391, 1229, 19, 11, 4194, 1131, 28298, 1903, 459,
      9974, 11626, 315, 400, 717, 13, 21, 7239, 304, 220, 2366, 17, 84073, 7146, 3074,
      2485, 1129, 277, 5455, 2174, 3074, 916, 46733, 9515, 46733, 220, 2366, 18, 14,
      1721, 46733, 51309, 4355, 27975, 12, 1131, 84073, 7146, 3074, 2485, 1129, 277,
      5455, 2174, 3074, 916, 46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309,
      4355, 27975, 12, 1131, 4448, 220, 914, 11, 220, 2366, 18, 2001, 28298, 4756,
      1202, 6020, 3135, 369, 279, 11999, 8502, 315, 220, 2366, 17, 389, 8079, 13658,
      13, 578, 2883, 7263, 304, 400, 1187, 13, 18, 7239, 304, 13254, 4194, 1131, 28298,
      596, 22613, 87055, 311, 264, 3335, 1389, 719, 11774, 527, 2564, 45, 6616, 2485,
      1129, 2185, 1276, 652, 2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733,
      51309, 14833, 10039, 30322, 34119, 1636, 1131, 45, 6616, 2485, 1129, 2185, 1276,
      652, 2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309, 14833, 10039,
      30322, 34119, 1636, 1131, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298, 5068,
      3335, 22613, 323, 3335, 30466, 369, 220, 2366, 17, 11, 439, 279, 2883, 14971,
      1139, 264, 502, 1060, 13176, 264, 1396, 315, 32366, 11774, 13, 28298, 38493,
      320, 87708, 398, 1680, 220, 1419, 13, 1644, 33, 369, 5587, 220, 2148, 11, 220,
      2366, 18, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733, 350, 8143,
      32, 46733, 30466, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733,
      350, 8143, 32, 46733, 30466, 644, 8149, 1684, 1139, 28298, 38493, 320, 87708,
      398, 8, 2737, 13970, 828, 505, 220, 679, 15, 11, 27223, 323, 10691, 13, 2564,
      6250, 220, 966, 11, 220, 2366, 17, 11, 220, 1691, 13, 1774, 33, 13, 5651, 220,
      966, 11, 220, 2366, 17, 11, 220, 845, 13, 6365, 33, 5253, 12490, 40638, 596,
      28298, 8220, 61437, 220, 2366, 17, 449, 3831, 220, 19, 339, 2564, 19816, 3778,
      12, 24137, 1543, 2485, 1129, 2185, 53247, 1543, 916, 46733, 5557, 46733, 220,
      2366, 18, 14, 1721, 14, 1627, 83489, 3778, 12, 24137, 1543, 2485, 1129, 2185,
      53247, 1543, 916, 46733, 5557, 46733, 220, 2366, 18, 14, 1721, 14, 1627, 18820,
      220, 1627, 11, 220, 2366, 18, 2001, 1789, 682, 315, 220, 2366, 17, 11, 28298,
      596, 13254, 16392, 311, 400, 5932, 13, 20, 7239, 11, 264, 220, 3971, 4, 7940,
      927, 220, 2366, 16, 13, 28298, 1903, 400, 18, 13, 3076, 7239, 304, 1202, 11999,
      8502, 11, 459, 24257, 400, 16, 13, 777, 4194, 1131, 16298, 1101, 2610, 2675,
      690, 1518, 810, 6498, 1457, 13, 37957, 11948, 27573, 2675, 690, 1518, 810, 6498,
      1457, 13, 28298, 13254, 21964, 36448, 2392, 4355, 13254, 323, 2848, 1468, 288,
      4355, 13254, 220, 2366, 18, 2392, 4355, 13254, 304, 220, 2366, 16, 2392, 4355,
      13254, 220, 2366, 15, 2392, 4355, 4272, 11626, 220, 2366, 17, 2392, 4355, 13254,
      6650, 2392, 4355, 13254, 220, 679, 24, 2732, 18464, 7816, 3135, 22170, 1578,
      27575, 26496, 24599, 2287, 11, 64912, 263, 11, 9362, 4194, 12, 4194, 3915, 701,
      6933, 2686, 4194, 12, 4194, 4387, 3813, 12978, 11764, 11302, 48932, 44228]],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7073'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        MecgAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba5f2098dcf25-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:15:11 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '105'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 0a1d040709d3c7f9eb8d6ae26c5f76e8
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"Tesla
      revenue 2022 - Google SearchPlease click here if you are not redirected within
      a few seconds. Accessibility LinksSkip to main content Turn off continuous scrollingTurn
      on continuous scrollingAccessibility helpAccessibility feedback Press / to jump
      to the search boxTesla revenue 2022 See moreDeleteDeleteReport inappropriate
      predictions Filters and Topics Filters and TopicsNewsImagessolarytdAbout 20,900,000
      results (0.47 seconds) Search ResultsFeatured snippet from the web81.5 billion
      U.S. dollarsTesla''s revenue grew to nearly 81.5 billion U.S. dollars in the
      2022 fiscal year, a 51 percent increase from the previous year. Mar 17, 2023Tesla''s
      revenue 2008-2022 - StatistaStatistahttps://www.statista.com \u203a ... \u203a
      Vehicles & Road TrafficStatistahttps://www.statista.com \u203a ... \u203a Vehicles
      & Road TrafficAbout featured snippets\u2022FeedbackPeople also askYou will see
      more English now. What is Tesla annual revenue?Does Tesla make a profit 2022?What
      is Tesla''s revenue in 2023?FeedbackTesla Revenue 2010-2023 | TSLAMacrotrendshttps://www.macrotrends.net
      \u203a stocks \u203a charts \u203a revenueMacrotrendshttps://www.macrotrends.net
      \u203a stocks \u203a charts \u203a revenueTesla annual revenue for 2022 was
      $81.462B, a 51.35% increase from 2021. Tesla annual revenue for 2021 was $53.823B,
      a 70.67% increase from 2020. Tesla annual\u00a0...\u200eNet Income \u00b7 \u200eGross
      Profit \u00b7 \u200eAssets & Liabilities \u00b7 \u200eEPS - Earnings Per ShareTesla
      made more money in 2022 than ever before, but its ... The Vergehttps://www.theverge.com
      \u203a tesla-q4-2022-earnings-re...The Vergehttps://www.theverge.com \u203a
      tesla-q4-2022-earnings-re...Jan 25, 2023 \u2014 Tesla raked in over $81 billion
      in revenue in 2022 and has more money on hand than ever before. But flagging
      demand and major price cuts put\u00a0... Images for Tesla revenue 2022You will
      see more English now. Guided Search FiltersFilter by featureFilter by featuretesla
      semitesla modeltesla stocktesla salessemi truckelon musktesla vehiclequarterly
      earningscar saleselectricView allSelect an image to give feedbackFeedbackView
      allTesla reports record revenue and beats on earningsCNBChttps://www.cnbc.com
      \u203a tesla-tsla-earnings-q4-2022CNBChttps://www.cnbc.com \u203a tesla-tsla-earnings-q4-2022Jan
      25, 2023 \u2014 Tesla just reported fourth-quarter earnings for 2022 including
      revenue of $24.32 billion, and earnings per share of $1.19.Tesla Reports Record
      Revenue, Deliveries in Q4 2022Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Jan 30, 2023 \u2014 Tesla''s total revenue stood at
      $24.3 billion in Q4 2022 with 37% YoY growth. Tesla deployed 2.46 GWh of energy
      storage during Q4,\u00a0... Tesla made an annual profit of $12.6 billion in
      2022Ars Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...Ars
      Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...
      Jan 25, 2023 \u2014 Tesla published its financial results for the fourth quarter
      of 2022 on Wednesday afternoon. The company brought in $24.3 billion in revenue\u00a0...
      Tesla''s profits soared to a record \u2013 but challenges are ...NPRhttps://www.npr.org
      \u203a 2023/01/25 \u203a teslas-profits-soared...NPRhttps://www.npr.org \u203a
      2023/01/25 \u203a teslas-profits-soared...Jan 25, 2023 \u2014 Tesla reported
      record profits and record revenues for 2022, as the company heads into a new
      year facing a number of steep challenges. Tesla Revenue (Quarterly): 23.33B
      for March 31, 2023YChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a
      revenuesYChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a revenuesIn
      depth view into Tesla Revenue (Quarterly) including historical data from 2010,
      charts and stats. ... September 30, 2022, 21.45B. June 30, 2022, 16.93B.Elon
      Musk''s Tesla finished uneven 2022 with strong 4th ... Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Jan 26, 2023 \u2014 For all of 2022, Tesla''s
      revenue rose to $81.5 billion, a 51% jump over 2021. Tesla made $3.69 billion
      in its fourth quarter, an adjusted $1.19\u00a0...People also askYou will see
      more English now. FeedbackRelated searchesYou will see more English now. Tesla
      revenue ChartFeedbacktesla revenue and profittesla revenue 2023tesla revenue
      in 2021tesla revenue 2020tesla net profit 2022tesla revenue growthtesla revenue
      2019Page NavigationMore resultsTry again Footer Links94566, Pleasanton, CA\u00a0-\u00a0From
      your IP address\u00a0-\u00a0Update locationHelpSend feedbackPrivacyTerms\"\"\"
      Using the above text, answer the following question: \"What is the revenue of
      Tesla in 2022?\" -- if the question cannot be answered using the text, summarize
      the text."}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5042'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yQS0/DMBCE7/wKawXi4kRx0pTKN0AItVyghRNCletsG4PjDfH2oVb57ygSr/PM
        fJqZE7gKNNjasG1an1zdLx4q9TTnu/b4OZ3dPs4Wx+nUqWx+87IDCbR6R8vfidRS03pkRwEk2A4N
        YwVajScjVY5LpSQ0VKEHDZuWkyItE952K0qyIlMgYRvNBkGfoO2oaXnJ9IEhglZ5WUj4g/8KRSGB
        iY3/Z52Mewm2Jmcxgn49QYPxh9uRR9BgYnSRTeChJQXGMCy4tpa6yoWNYBJco2A8sBTPGL25jKLD
        HYYtChdEnuW52JsozicqHY1zsXLeOwpS7Gtna+GiMKJUaVFeCBeGHyKKdUfNkFQp9BLWLrhYLweJ
        AmiITC1IcKHCA+isf+vPvgAAAP//AwAWhzZOiwEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba5f41bcacf25-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:15:14 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '3214'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '88800'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 800ms
      x-request-id:
      - 81cf8ab95a4dc39d041ab3bde4b0b21c
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 61561,
      288, 4355, 10, 265, 7287, 10, 2366, 17, 9059, 12399, 961, 2, 16, 25, 10771,
      311, 279, 1495, 11, 28298, 596, 13254, 304, 220, 2366, 17, 574, 400, 5932, 13,
      20911, 7239, 11, 902, 374, 264, 220, 3971, 13, 1758, 4, 5376, 505, 220, 2366,
      16, 13]], "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '378'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba6093857cf25-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:15:14 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '187'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 8fdcaa15c947dc87b374ec3938c4b9df
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"According
      to the text, Tesla''s revenue in 2022 was $81.462 billion, which is a 51.35%
      increase from 2021.\"\"\" Using the above text, answer the following question:
      \"What is the revenue of Tesla in 2022?\" -- if the question cannot be answered
      using the text, summarize the text."}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '397'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPTU/DMBBE7/wKawU3J4rTJm19hx56AIkeQAhVjrNpDI43srcUVOW/o0h8XGc0
        T28u4FrQYHvDdhh9tto+7vpn/7Vddrvb+6euqAd3jpVv7x6ODUig5g0t/yxyS8PokR0FkGAjGsYW
        tKrXS1XVlaokDNSiBw3HkbNFXmV8ig1lxaJQIOGUzBFBX2CMNIx8YHrHkECvNhL+0X9xuZHAxMb/
        JapYTxJsT85iAv1ygQHTLzSSR9BgUnKJTeBZkQJjmPX3PYqIHxhOKKgTe0zeCBdEWZSlOJskrtcq
        X9alaJz3joIU597ZXkQcIyYMnIQRlcoX1Y1wYb6eUHSRhpmgcpgkdC641B/migJoSEwjSHChxU/Q
        xfQ6XX0DAAD//wMA20By0H4BAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba60b9aabcf25-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:15:17 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2436'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89913'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 58ms
      x-request-id:
      - e29eaad0686d6909e19b2ba1c2261243
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created and nothing new
      has happened."}, {"role": "user", "content": "Determine which next command to
      use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I will search for the
      revenue of Tesla in 2022 on Google.\",\n        \"reasoning\": \"I need to find
      the revenue of Tesla in 2022 to complete my task. Google is a reliable source
      of information.\",\n        \"plan\": \"- Use the ''get_text_summary'' command
      to search for the revenue of Tesla in 2022 on Google.\\n- Write the revenue
      to a file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure
      that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4717'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6xSS4+bMBC+91eM5pILiYBNUsS1Utq0PfVxaVlFXjMBL2Aje8gmivjvlYEoXXrp
        YX2cx/cYf1dUOaYoS8Gyaevl+4/fv1Rfn0+/ut2l+FDtPu+q+Ns5EnET7T9hgObpmSRPGytpmrYm
        VkZjgNKSYMoxjbbJOtpsN1ESYGNyqjHFouXlw2qz5M4+mWX4EEYYYOdEQZhesbWmafnApiLtMI3C
        TRLgHfzeSLYBsmFR30vxet0HKEujJDlMf1+xIXcDtqYmTFE4pxwLzV6m0UzaW7hmGgAgQy5NV5Ts
        MkxhKk4NOrMvZriHF1XX8GIVE3BJYOlEuiMwR/hBrhagNMRhHAMbEHBUNYEWDeWwMB23Ha/4zItV
        hsHf+JaEM1rp4kaiiXKP4MTpv2mcAS4Fwx6k0DBdjaC5AAtXzSnbWuiRbQk/3UiyGGwd2Bw84MJj
        NEIPQt7YsLSKlVSumRsm7TpLoxHPNuApN/AzeVvWkuT6AoOw25jSR2Mb4UPip4WUnRVMc1rXkqje
        +CNH/D64hWg62j8Z8ssj9asrzxQKW8zjNzb87B3iLuHV/jytSbTexuHwbkIHsZPmTPfYB3hUWrny
        MIYQU3RsWgxQ6ZzOmIb9Y//uDwAAAP//AwCvsVVPHwQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba61f4e24cf25-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:15:34 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '15920'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86494'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.336s
      x-request-id:
      - 1bb4a1ffce73a32778124f3ca8ee6e8e
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that I was
      created and there have been no new developments to report."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5778'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5ySS4/TQBCE7/yKVl9ycaw8NgnrG4cVWkEELMsFjKLJuGMPsWeMuycPRf7vyHYe
        u4n2wrXHVf1Vlw9oEoxQZ0p0Ueb92cfvn8fzrw/Lp/H9h78Jm0872X+bf0lnD5ufGKBb/iEtR0Wo
        XVHmJMZZDFBXpIQSjIbT93fDyXQyngVYuIRyjDAtpT8OJ33x1dL1B+PBEAP0rFLC6IBl5YpSFuLW
        ZBmj4eh+FuDF/PIwHQQoTlR+Gd1NZnWAOnNGE2P064AF8cm4cjlhhIrZsCgrDaazQraJcIgtAECM
        kjmfZsIxRnAcHh9oJ80wxkfI1IbgyEQJFHsQxesQHmFr8hys2wJnXiBxWxvGGLz0qUixs8amr8zY
        a03MK5/ne1g5bxOQjKCiDVlP4FbwTJwrMBZGg9EIlE2A1YYSMALiQMHK5BTCvEMBw2e+a4AyV7bb
        3YcfTO2eXiNanBS9Rls0K8S9HURXRow2XJyCWKJWQZZ91fgqgZtbqeY+1GRVVcfKbZj262IPzkvp
        peFXWvtK3fJzSWr9n010PnVwavuY86ZsqwrqVrw6zBWJqtLr/+Rlx53Bc1PHuQt4eqvRrk1xbZHQ
        6+4Qyk56Z+6W/RghtjXWAa6MNZwtuoUYIYsrMUBjE9phNKh/1+/+AQAA//8DAGZfxDnXAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba694de5ecf25-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:15:50 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '12928'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86503'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.331s
      x-request-id:
      - 6cde458751bac0cc3c9f29454b4d4e71
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6602'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPTUsDMRRF9/6Kx1tnSod2+pGdIIpQ3ShuREqavGmmneSNyRutLfPfpVCp63vv
        4dwTNg41Wm/Ehq4t5g8vq6fdcnq0R+rfutWzX9zVt2Fftp/3CRXyZkdWLouR5dC1JA1HVGgTGSGH
        upwtpmU1q6qZwsCOWtS47aSYjKpC+rThYjwZl6iwz2ZLqE/YJQ6drIX3FDPqcjpfKLzCr8FcobCY
        9l91WQ0KrefGUkb9fsJA+Y+buCXUaHJuspgoZ0uOQvH84NVTIjCJIDLUfRJPCSyHYKLLIAx0INsL
        gcnwCN58EVyUyEH4ATF5DyY6yL4XcPwdRzgorJvYZL9OZDJH1JiFO1TYREcH1OPhY7j5BQAA//8D
        ANIW9ZJ1AQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba704ce55face-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:15:57 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2258'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86517'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.322s
      x-request-id:
      - 31feabcab35fbc370bd11fe71e82be3d
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are now the following python function: ```# This function takes a JSON string
      and ensures that it is parseable and fully compliant with the provided schema.
      If an object or field specified in the schema isn''t contained within the correct
      JSON, it is omitted. The function also escapes any double quotes within JSON
      string values to ensure that they are valid. If the JSON string contains any
      None or NaN values, they are replaced with null before being parsed.\ndef fix_json(json_string:
      str, schema:str=None) -> str:```\n\nOnly respond with your `return` value."},
      {"role": "user", "content": "''''''There are no further commands to execute
      as I have completed my task and shut down.'''''', ''''''\n{\n    \"command\":
      {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg
      name\": \"value\"\n        }\n    },\n    \"thoughts\":\n    {\n        \"text\":
      \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short
      bulleted\n- list that conveys\n- long-term plan\",\n        \"criticism\": \"constructive
      self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    }\n}\n''''''"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yOy2oCQRBF9/mKojbZtOJrjOldcKERo0E3gRCknSm143TXpKvUiMy/ByHBTbaH
        ew/ngr5Ai/nOaR6qsvEwWk7nvbdyuChGi81o2Blvey8hG39NnmZTNMjrT8r199HMOVQlqeeIBvNE
        TqlA2+4Peu2sn2UDg4ELKtHittJGt5k19JDW3Gh1W200eBC3JbQXrBKHSlfKe4qCtpP1DN7cN/5o
        UFldeSODbm0w37HPSdC+XzCQ/FkTl4QWnYgXdVGvjRyV4rX/+T6AcEpnA+uDwpkPCRJJxVEICiaB
        yApCFEAZ1gQOjq70BUyW8xmIJh+3TXgtyQlBlfjoi383sOEEga6SE6c9nLzumlgb3PjoZbdK5IQj
        WhTlCg36WNA32lb9Ud/9AAAA//8DAKZaPHKdAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba717c85eface-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:00 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2465'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89719'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 186ms
      x-request-id:
      - 30dd44b6c25941fcda12bee8928585da
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6945'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPTWsCMRRF9/0Vj7fOyASdUbKUghRcFCt0UYrE5OlMneQNyRs/EP97ESx2fe89
        nHvF1qNB11hxoe+K6eJjudKHZXKv78fP+aLUF7068Wy9m1dbVMjbH3LyWIwch74jaTmiQpfICnk0
        up5NdFVXtVYY2FOHBve9FONRVciQtlyU41KjwiHbPaG5Yp849LIRPlDMaHQ1GSt8wp/BVKGw2O5f
        tS5vCl3DraOM5uuKgfIfN3FHaNDm3GaxUe6WHIXi/cG6oURgE0Fk2A1JGkrgOAQbfQZhoDO5QQhs
        hjdo7JHgoUQewgXE5gPY6CE3g4DnUxzhTeGujW1uNols5ogGs3CPCtvo6YymvH3fXn4BAAD//wMA
        dc+fJnUBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba72d4c51face-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:03 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1933'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86529'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.314s
      x-request-id:
      - add6181c5b8cde659fd51eae595b4c0b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7288'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yP0U4CMRBF3/2KyTx3ya64QPoBGqMxMaAPGkNKO7CVbWfTziJI9t8NCQae770n
        5x7RO9RoGyM2dG0xfZg/v8fXw2wzn+5Kf79fVx+9Zf+0+H17QYW8+iYr58XIcuhaEs8RFdpERsih
        riazu6qe1JNaYWBHLWrcdFKMR3UhfVpxUY7LChX22WwI9RG7xKGTpfCWYj4BypnCC/wSTBUKi2mv
        qrf1oNA27C1l1J9HDJT/uYlbQo0mZ5/FRDlZchSKpweLhhKBSQSRYd0naSiB5RBMdBmEgfZkeyEw
        GR6hMTuCsxI5CAcQk7dgooPc9AKOf+IIB4VrH31ulolM5ogas3CHCn10tEddDl/DzR8AAAD//wMA
        CdBkqXUBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba742bf55face-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:06 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1971'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86539'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.306s
      x-request-id:
      - 39dd1c74c000645707bf196d731eaff7
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are now the following python function: ```# This function takes a JSON string
      and ensures that it is parseable and fully compliant with the provided schema.
      If an object or field specified in the schema isn''t contained within the correct
      JSON, it is omitted. The function also escapes any double quotes within JSON
      string values to ensure that they are valid. If the JSON string contains any
      None or NaN values, they are replaced with null before being parsed.\ndef fix_json(json_string:
      str, schema:str=None) -> str:```\n\nOnly respond with your `return` value."},
      {"role": "user", "content": "''''''There are no further commands to execute
      as I have completed my task and shut down.'''''', ''''''\n{\n    \"command\":
      {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg
      name\": \"value\"\n        }\n    },\n    \"thoughts\":\n    {\n        \"text\":
      \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short
      bulleted\n- list that conveys\n- long-term plan\",\n        \"criticism\": \"constructive
      self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    }\n}\n''''''"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yOTWvCQBCG7/0Vw1x62Yg2xo89W4oi1WJLhVJkTUbdmuyEnTFWxP9ehBYvvT68
        78NzRl+gxXznNK/qMuk/LabLdD7e+2HzOBm9jjpvtNy+TJvxbPaOBnn9Rbn+Plo5V3VJ6jmgwTyS
        UyrQdnqDbifrZb2+wYoLKtHittYkbWWJHuKak3ba7qDBg7gtoT1jHbmqdaW8pyBoH7KuwZv7xocG
        ldWVNzJILwbzHfucBO3HGSuSP2vkktCiE/GiLui1kYNSuPaP7ysQjvFkYH1QOPEhQiSpOQhBwSQQ
        WEGIKlCGNYGDxpW+gMli9gyi0YdtC+YlOSGoIze++HcDG45Q0VVy5LiHo9ddCy8GNz542a0iOeGA
        FkW5RoM+FPSNtn35vNz9AAAA//8DAMyMS2mdAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba7509c0dface-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:10 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2962'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89584'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 277ms
      x-request-id:
      - 14dd12fb53547a222c53cd4acb430b39
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that nothing new has happened since my creation.''}\n\"\"\"\n\nLatest
      Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '740'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPwUoDMRRF935FuOtMmel0Ws1ON6JUF4pQESlp5tmJZpIw71UtZf5dKkq3B+7h
        3AN8CwPXWXF9DsXi+nG5+Vy68qHmW3slF8/3q7wKVE/v+AkaafNOTv4WE5f6HEh8itBwA1mhFqaa
        n8+qZt4sKo0+tRRgsM1S1JOmkN2wSUVZlxU0dmy3BHNAHlKfZS3pgyLDVNO5xsl94o2GJLHhRGbV
        qOG65B0xzMsBPfG/dUiBYGCZPYuNcmxMUSge+y9ZWcV7Fuq1ulEDORuCks6Kikk6H7cq0pfqLKvO
        5kyRWsU+OlL9Xv1e9SlOMGq8+ei5Ww9kOUUYsKQMDR9b+oYpx9fx7AcAAP//AwBrx2+JZgEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba7697b85face-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:12 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1409'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89832'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 112ms
      x-request-id:
      - bb6104cac1afbdbd8ebab228fed00068
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7631'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPQU8CMRCF7/6KyZy7BERY7dEDhmjiQaMHY0xpB7qw7Ww6s4gh+98NCQbP770v
        3ztiE9Cij0596tqqfnh58vqYSu+X/Vbe6X6zT2XxHL0u3tAgr7bk9bwYeU5dS9pwRoO+kFMKaCfz
        25vJbD6rrw0mDtSixU2n1XQ0q7QvK67G0/EEDfbiNoT2iF3h1OmX8o6ynAD11OAFfglqg8rq2n/V
        u/Fg0EduPAnajyMmkj9u4ZbQohNpRF3WkyVnpXx68BqpELhCkBnWfdFIBTyn5HIQUAY6kO+VwAks
        Ibo9wVmJAqQfUCc7cDmAxF4h8Hce4WBw3eRG4lchJ5zRoih3aLDJgQ5ox8PncPULAAD//wMA4B7Q
        knUBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba773bd3fface-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:14 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1971'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86551'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.298s
      x-request-id:
      - dd754e5c9e3e984ca4320bdb2a1539cd
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7974'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPQU8CMRCF7/6KyZy7hA0ui715IEhivMjNGFLagVa2nbWdVZTsfzckGL2+l/fl
        e2cMDjVab8TGvqva1fPjYfVNd08Pi/fWtJvNfb/O7TJYL0tUyLs3snJdTCzHviMJnFChzWSEHOp6
        vritm3nTzhVGdtShxkMv1WzSVDLkHVfT2bRGhUMxB0J9xj5z7GUrfKRUUNftbKHwD/6vUCgspvuX
        NM2o0HoOlgrqlzNGKr/czB2hRlNKKGKSXCw5CaXLg42nTGAyQWLYD1k8ZbAco0mugDDQiewgBKbA
        Grz5ILgqkYP4BWLKEUxyUPwg4PgzTXBUuA8pFL/NZAon1FiEe1QYkqMT6un4Ot78AAAA//8DAMn9
        NwB1AQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba78a1a3aface-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:18 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1862'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86563'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.29s
      x-request-id:
      - 3db04b4dbad4c6a1890478f3eee53cbb
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are now the following python function: ```# This function takes a JSON string
      and ensures that it is parseable and fully compliant with the provided schema.
      If an object or field specified in the schema isn''t contained within the correct
      JSON, it is omitted. The function also escapes any double quotes within JSON
      string values to ensure that they are valid. If the JSON string contains any
      None or NaN values, they are replaced with null before being parsed.\ndef fix_json(json_string:
      str, schema:str=None) -> str:```\n\nOnly respond with your `return` value."},
      {"role": "user", "content": "''''''There are no further commands to execute
      as I have completed my task and shut down.'''''', ''''''\n{\n    \"command\":
      {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg
      name\": \"value\"\n        }\n    },\n    \"thoughts\":\n    {\n        \"text\":
      \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short
      bulleted\n- list that conveys\n- long-term plan\",\n        \"criticism\": \"constructive
      self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    }\n}\n''''''"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yOMU8CQRBGe3/FZBqbhXACglvaGA0RI53GkL29gdvjdueyMwcSwn83JBoa25fv
        e3knDBVa9LVTH7t2MHtaLUJdzN4bn/02f8jjcdUciob3y0VEg1w25PX3MfQcu5Y0cEKDPpNTqtAW
        9/NJMb2fzuYGI1fUosVtp4PxcDrQPpc8GI1HBRrsxW0J7Qm7zLHTtfKOkqC9m04MXt1X/mBQWV17
        JfPx2aCvOXgStJ8njCR/1swtoUUnEkRd0ksjJ6V06X++jSCc89FA2Sscuc+QSTpOQlAxCSRWEKII
        ylASONi7NlTwslq+gmgOaTuEt5acEHSZ96H6dwMbzhDpIjlw3sEhaD3Es8FNSEHqdSYnnNCiKHdo
        MKSKvtGOzl/nmx8AAAD//wMAzf7fEJ0BAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba7976fc8face-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:21 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '3360'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89481'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 345ms
      x-request-id:
      - a809993d25f90a928c22324430e07972
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that nothing new has happened since my creation.''}\n\"\"\"\n\nLatest
      Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '740'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPwWoCMRRF9/2KcNcZcdSxkp1uakvBFim0FJGYeXVSJ3lh8qQVmX8vlha3B+7h
        3DN8DQPXWHEhtcXt3foxPL+8vR4eDku7TMKrhZ2sd8vF03wFDd59kpO/xcBxSC2J5wgN15EVqmHK
        6WxSVtNqNtIIXFMLg32SYjyoCjl2Oy6G42EJjWO2e4I5I3UckmyFDxQzTDmaalzdV15pCIttr2RS
        9hquYe8ow7yfESj/WztuCQY2Z5/FRrk0chSKl/55VlblUxYKWt2rjpxtWyWNFRVZGh/3KtKXamxW
        jU2JItUq++hIhZP6veo5DtBrfPjoc7PtyGaOMMjCCRo+1vQNM+w3/c0PAAAA//8DACod0SVmAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba7b21803face-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:24 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1527'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89832'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 112ms
      x-request-id:
      - 6d9bd42c7072d8a811f1a291f2db9a99
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '8317'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPy2rDMBBF9/0KMWs52HFeaNtFG9Ku+tiUEhRpErmxNEYzTh2C/70EUtr1vfdw
        7gUaDwZcsOJi1xbLh5cnet889sMm+M2A5/spcX16Xvf18g000O4LndwWE0exa1EaSqDBZbSCHky1
        WM2q+WK+mmmI5LEFA4dOinoyL6TPOyrKuqxAQ8/2gGAu0GWKnWyFjpgYTLUqaw1/8L9gqUFIbPuv
        Oi1HDS5Q45DBfFwgIv9yM7UIBixzw2KTXC0pCabrg9eAGZXNqBKpfZ8lYFaOYrTJsxJSOKDrBZVl
        tVbBnlDdlNCreFZi+ahs8opDL8rTd5rAqGHfpIbDNqNlSmCAhTrQ0CSPA5hy/BzvfgAAAP//AwBh
        SUbMdQEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba7bd0a52face-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:26 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1892'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86575'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.282s
      x-request-id:
      - 832e34c1a80081fab3b69f9b32593d33
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "user", "content": "Determine which next command to use, and
      respond using the format specified above:"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '8553'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPQWsCMRCF7/0Vw5yzssvqanMXK22hUA+FUiQmo5u6ySzJrLXI/vciWNrze+/j
        exf0DjXa1ogNfVfMV69Pp9Nm0/u0flnuzqH2j0v7PG1W5cMbKuTdJ1m5LSaWQ9+ReI6o0CYyQg51
        1Sym1ayZ3VcKAzvqUOOhl6KezAoZ0o6Lsi4rVDhkcyDUF+wTh162wkeKGXW1mDYK/+B/wVyhsJju
        X7WpR4W2ZW8po36/YKD8y03cEWo0OfssJsrVkqNQvD7YtJQITCKIDPshSUsJLIdgossgDHQmOwiB
        ybCG1pwIbkrkIHyDmHwEEx3kdhBw/BUnOCrc++hzu01kMkfUmIV7VOijozPqcvwY734AAAD//wMA
        pxxdvnUBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba7e78c61f9d8-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:33 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2053'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86581'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.279s
      x-request-id:
      - b1abe12b729cd37f1c388c5451062d6b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are now the following python function: ```# This function takes a JSON string
      and ensures that it is parseable and fully compliant with the provided schema.
      If an object or field specified in the schema isn''t contained within the correct
      JSON, it is omitted. The function also escapes any double quotes within JSON
      string values to ensure that they are valid. If the JSON string contains any
      None or NaN values, they are replaced with null before being parsed.\ndef fix_json(json_string:
      str, schema:str=None) -> str:```\n\nOnly respond with your `return` value."},
      {"role": "user", "content": "''''''There are no further commands to execute
      as I have completed my task and shut down.'''''', ''''''\n{\n    \"command\":
      {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg
      name\": \"value\"\n        }\n    },\n    \"thoughts\":\n    {\n        \"text\":
      \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short
      bulleted\n- list that conveys\n- long-term plan\",\n        \"criticism\": \"constructive
      self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    }\n}\n''''''"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yOTU/CQBCG7/6KyVy8LA21FGHPGhWNHxEPxhiytANdaHeaneE7/HdDouHi9cn7
        PnkO6Eu0WFROi6atO9d370/b7b5/k/fS/ehj8cb1aPw5frxN7zddNMjTBRX6+0gKbtqa1HNAg0Uk
        p1SiTfuDXpr382FmsOGSarQ4b7WTJXlHV3HKnW7WTdHgStyc0B6wjdy0OlFeUhC0V3nP4Nl95kOD
        yurqMxlkR4NFxb4gQft1wIbkzxq5JrToRLyoC3pq5KAUTv0Plw0Ix7gzMF0p7HgVIZK0HISgZBII
        rCBEDSjDlMDB2tW+hNH7yzOIRh/mCbzW5ISgjbz25b8bmHGEhk6SDcclbLxWCR4NznzwUk0iOeGA
        FkW5RYM+lLRF2z1+Hy9+AAAA//8DALVFk5mdAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba7f68c6ff9d8-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:36 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2778'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89719'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 186ms
      x-request-id:
      - 7e69a4ad179146773ad18295e0045d30
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that nothing new has happened since my creation.''}\n\"\"\"\n\nLatest
      Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '740'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPQUvDQBBG7/6KZc6b0m2b1O5NUMSDXhRRRMp2M03WJjNLZootJf9dKkqvD77H
        +06QavAQ26Cxz12xvH9+dMv3SO7u9bBr3O2W5G1Wvuz2T7kCC7z5wqh/i0nkPneoiQksxAGDYg3e
        VdcLV1blammh5xo78NBkLeaTstD9sOFiOp86sLCX0CD4E+SB+6xr5R2SgHezysLFfeGlBWUN3YUs
        3GghtpwiCviPE/Qo/9aBOwQPQSSJBtJzI5MinftvxAQjR1HsrXkwA8bQdUbboIZY20SNIfw2bRDT
        hpyRsDaSKKLpj+b3amKawGhhmyhJux4wCBN4EOUMFhLVeAA/HT/Hqx8AAAD//wMAhBe6sGYBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba80e5d98f9d8-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:39 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1630'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89832'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 112ms
      x-request-id:
      - 3b5c3f322d097a0a23249de84126b7c8
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "user", "content": "Determine which next command to use, and
      respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '8896'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPS2sCMRSF9/0Vl7vOyIzWV7Yt9AGu6kIspcTkakYnuUNyRy0y/70IFrs+53x8
        54K1Q43WG7GhbYrpy8didNyvh6dlnvqSF+b5qfLl2q9e31eokDd7snJbDCyHtiGpOaJCm8gIOdTV
        ZPZYjSfj+VxhYEcNaty1UowG40K6tOGiHJUVKuyy2RHqC7aJQyvfwgeKGXU1ryqFd/g9mCoUFtP8
        qw5nvULrubaUUX9eMFD+4yZuCDWanOssJsrVkqNQvD5YekoEJhFEhm2XxFMCyyGY6DIIA53JdkJg
        MryBN0eCmxI5CD8gJh/ARAfZdwKOT3GAvcJtHevsvxOZzBE1ZuEWFdbR0Rl12X/1D78AAAD//wMA
        wGErY3UBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba81a09abf9d8-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:41 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1677'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86593'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.271s
      x-request-id:
      - b83615070ecdeee9b019fb6966b88cd0
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "user", "content": "Determine which next command to use, and
      respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '9239'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPTWsCMRRF9/0V4a0zMlN1pmZXEEoXpZUKhZYiMXma0UnemLyxfjD/vQgWu773
        Hs49Q21BgXGajW+brHp6fynTwxQ/89njbro/ve6qj9FmTqfj7A0k0HKDhq+LgSHfNsg1BZBgImpG
        C6ooH0bFuCzzewmeLDagYN1yNhyMM+7ikrJ8mBcgoUt6jaDO0EbyLS+YthgSqGJSlRJu8FtQSWBi
        3fyrToa9BOOoNphAfZ3BY/rjRmoQFOiU6sQ68MWSAmO4PJg7jCh0RBFIrLrIDqMw5L0ONgkmgQc0
        HaPQSTwLp/corkpohT8K1mkrdLAiuY6FpZ8wgF7Cqg51couIOlEABYmpBQl1sHgAlfff/d0vAAAA
        //8DAFX5AZB1AQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba82e2faff9d8-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:16:44 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1674'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86604'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.263s
      x-request-id:
      - aac34632d4977b14c5e7349ec19e353d
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 61561,
      288, 4355, 10, 265, 7287, 10, 2366, 17, 23886, 2262, 961, 2, 16, 25, 28298,
      13254, 220, 2366, 17, 482, 5195, 7694, 5618, 4299, 1618, 422, 499, 527, 539,
      50028, 2949, 264, 2478, 6622, 13, 81372, 26496, 36234, 311, 1925, 2262, 12268,
      1022, 19815, 39076, 19952, 389, 19815, 39076, 86469, 1520, 86469, 11302, 8612,
      611, 311, 7940, 311, 279, 2778, 3830, 90541, 13254, 220, 2366, 17, 3580, 810,
      6571, 6571, 10577, 33781, 20492, 46112, 323, 41994, 46112, 323, 41994, 14710,
      1453, 351, 434, 337, 661, 1320, 10714, 220, 508, 11, 7467, 11, 931, 3135, 320,
      15, 13, 2618, 6622, 8, 7694, 18591, 53043, 44165, 505, 279, 3566, 5932, 13,
      20, 7239, 549, 815, 13, 11441, 90541, 596, 13254, 14264, 311, 7154, 220, 5932,
      13, 20, 7239, 549, 815, 13, 11441, 304, 279, 220, 2366, 17, 20323, 1060, 11,
      264, 220, 3971, 3346, 5376, 505, 279, 3766, 1060, 1975, 28298, 596, 13254, 505,
      47466, 220, 1049, 23, 311, 47466, 220, 2366, 17, 320, 258, 3610, 549, 815, 13,
      11441, 8, 37, 16164, 1060, 99204, 304, 3610, 549, 815, 13, 11441, 2366, 15282,
      11, 20911, 2366, 9800, 11, 23848, 2366, 18887, 11, 21600, 679, 23890, 11, 22915,
      24, 810, 7123, 6806, 12331, 220, 1114, 11, 220, 2366, 18, 90541, 596, 13254,
      220, 1049, 23, 12, 2366, 17, 482, 12442, 9265, 16257, 9265, 2485, 1129, 2185,
      31187, 9265, 916, 46733, 2564, 46733, 56120, 612, 9728, 38081, 16257, 9265,
      2485, 1129, 2185, 31187, 9265, 916, 46733, 2564, 46733, 56120, 612, 9728, 38081,
      10714, 15109, 69742, 6806, 36448, 16298, 1101, 2610, 2675, 690, 1518, 810, 6498,
      1457, 13, 3639, 374, 28298, 9974, 13254, 30, 22186, 28298, 1304, 264, 11626,
      220, 2366, 17, 30, 3923, 374, 28298, 596, 13254, 304, 220, 2366, 18, 30, 36448,
      90541, 38493, 220, 679, 15, 12, 2366, 18, 765, 350, 8143, 1428, 582, 4744, 79717,
      2485, 1129, 2185, 62925, 4744, 79717, 5181, 46733, 23301, 46733, 27223, 46733,
      13254, 20122, 4744, 79717, 2485, 1129, 2185, 62925, 4744, 79717, 5181, 46733,
      23301, 46733, 27223, 46733, 13254, 90541, 9974, 13254, 369, 220, 2366, 17, 574,
      400, 5932, 13, 20911, 33, 11, 264, 220, 3971, 13, 1758, 4, 5376, 505, 220, 2366,
      16, 13, 28298, 9974, 13254, 369, 220, 2366, 16, 574, 400, 4331, 13, 23848, 33,
      11, 264, 220, 2031, 13, 3080, 4, 5376, 505, 220, 2366, 15, 13, 28298, 9974,
      4194, 1131, 79338, 7099, 33620, 9787, 54664, 38, 2177, 58882, 9787, 54664, 27977,
      612, 14851, 8623, 9787, 54664, 46277, 482, 469, 15202, 3700, 12037, 90541, 1903,
      810, 3300, 304, 220, 2366, 17, 1109, 3596, 1603, 11, 719, 1202, 2564, 578, 6383,
      713, 2485, 1129, 2185, 42901, 424, 713, 916, 46733, 51309, 4355, 52708, 19,
      12, 2366, 17, 12, 10326, 826, 5621, 1131, 791, 6383, 713, 2485, 1129, 2185,
      42901, 424, 713, 916, 46733, 51309, 4355, 52708, 19, 12, 2366, 17, 12, 10326,
      826, 5621, 1131, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298, 436, 7897,
      304, 927, 400, 5932, 7239, 304, 13254, 304, 220, 2366, 17, 323, 706, 810, 3300,
      389, 1450, 1109, 3596, 1603, 13, 2030, 5292, 3252, 7631, 323, 3682, 3430, 15455,
      2231, 4194, 1131, 12041, 369, 28298, 13254, 220, 2366, 17, 2675, 690, 1518,
      810, 6498, 1457, 13, 12433, 291, 7694, 46112, 5750, 555, 4668, 5750, 555, 4668,
      2392, 4355, 5347, 3695, 4355, 1646, 2392, 4355, 5708, 2392, 4355, 6763, 87698,
      11092, 65467, 3167, 74, 2392, 4355, 7458, 33115, 398, 24608, 7063, 6412, 1779,
      2265, 860, 682, 3461, 459, 2217, 311, 3041, 11302, 36448, 860, 682, 90541, 6821,
      3335, 13254, 323, 34427, 389, 24608, 29768, 5002, 2485, 1129, 2185, 22832, 9081,
      916, 46733, 51309, 4355, 2442, 52742, 12, 10326, 826, 52708, 19, 12, 2366, 17,
      29768, 5002, 2485, 1129, 2185, 22832, 9081, 916, 46733, 51309, 4355, 2442, 52742,
      12, 10326, 826, 52708, 19, 12, 2366, 17, 18820, 220, 914, 11, 220, 2366, 18,
      2001, 28298, 1120, 5068, 11999, 58414, 24608, 369, 220, 2366, 17, 2737, 13254,
      315, 400, 1187, 13, 843, 7239, 11, 323, 24608, 824, 4430, 315, 400, 16, 13,
      777, 844, 288, 4355, 29140, 13896, 38493, 11, 65752, 552, 304, 1229, 19, 220,
      2366, 17, 14431, 2837, 8483, 2485, 1129, 2185, 44176, 2837, 61564, 916, 46733,
      51309, 4355, 52708, 19, 2269, 74276, 1131, 14431, 2837, 8483, 2485, 1129, 2185,
      44176, 2837, 61564, 916, 46733, 51309, 4355, 52708, 19, 2269, 74276, 1131, 18820,
      220, 966, 11, 220, 2366, 18, 2001, 28298, 596, 2860, 13254, 14980, 520, 400,
      1187, 13, 18, 7239, 304, 1229, 19, 220, 2366, 17, 449, 220, 1806, 4, 44188,
      56, 6650, 13, 28298, 27167, 220, 17, 13, 2790, 480, 1671, 315, 4907, 5942, 2391,
      1229, 19, 11, 4194, 1131, 28298, 1903, 459, 9974, 11626, 315, 400, 717, 13,
      21, 7239, 304, 220, 2366, 17, 84073, 7146, 3074, 2485, 1129, 277, 5455, 2174,
      3074, 916, 46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309, 4355,
      27975, 12, 1131, 84073, 7146, 3074, 2485, 1129, 277, 5455, 2174, 3074, 916,
      46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309, 4355, 27975, 12,
      1131, 4448, 220, 914, 11, 220, 2366, 18, 2001, 28298, 4756, 1202, 6020, 3135,
      369, 279, 11999, 8502, 315, 220, 2366, 17, 389, 8079, 13658, 13, 578, 2883,
      7263, 304, 400, 1187, 13, 18, 7239, 304, 13254, 4194, 1131, 28298, 596, 22613,
      87055, 311, 264, 3335, 1389, 719, 11774, 527, 2564, 45, 6616, 2485, 1129, 2185,
      1276, 652, 2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309, 14833,
      10039, 30322, 34119, 1636, 1131, 45, 6616, 2485, 1129, 2185, 1276, 652, 2726,
      46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309, 14833, 10039, 30322,
      34119, 1636, 1131, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298, 5068, 3335,
      22613, 323, 3335, 30466, 369, 220, 2366, 17, 11, 439, 279, 2883, 14971, 1139,
      264, 502, 1060, 13176, 264, 1396, 315, 32366, 11774, 13, 28298, 38493, 320,
      87708, 398, 1680, 220, 1419, 13, 1644, 33, 369, 5587, 220, 2148, 11, 220, 2366,
      18, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733, 350, 8143, 32,
      46733, 30466, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733, 350,
      8143, 32, 46733, 30466, 50083, 950, 38493, 320, 87708, 398, 8, 2956, 2652, 5587,
      220, 2148, 11, 220, 2366, 18, 11, 220, 1419, 13, 1644, 33, 2652, 6790, 220,
      2148, 11, 220, 2366, 17, 11, 220, 1187, 13, 843, 33, 2652, 6250, 220, 966, 11,
      220, 2366, 17, 11, 220, 1691, 13, 1774, 33, 2652, 5651, 220, 966, 11, 220, 2366,
      17, 11, 220, 845, 13, 6365, 33, 5253, 12490, 40638, 596, 28298, 8220, 61437,
      220, 2366, 17, 449, 3831, 220, 19, 339, 2564, 19816, 3778, 12, 24137, 1543,
      2485, 1129, 2185, 53247, 1543, 916, 46733, 5557, 46733, 220, 2366, 18, 14, 1721,
      14, 1627, 83489, 3778, 12, 24137, 1543, 2485, 1129, 2185, 53247, 1543, 916,
      46733, 5557, 46733, 220, 2366, 18, 14, 1721, 14, 1627, 18820, 220, 1627, 11,
      220, 2366, 18, 2001, 1789, 682, 315, 220, 2366, 17, 11, 28298, 596, 13254, 16392,
      311, 400, 5932, 13, 20, 7239, 11, 264, 220, 3971, 4, 7940, 927, 220, 2366, 16,
      13, 28298, 1903, 400, 18, 13, 3076, 7239, 304, 1202, 11999, 8502, 11, 459, 24257,
      400, 16, 13, 777, 4194, 1131, 16298, 1101, 2610, 2675, 690, 1518, 810, 6498,
      1457, 13, 37957, 11948, 27573, 2675, 690, 1518, 810, 6498, 1457, 13, 28298,
      13254, 21964, 36448, 2392, 4355, 13254, 323, 2848, 1468, 288, 4355, 13254, 220,
      2366, 18, 2392, 4355, 13254, 304, 220, 2366, 16, 2392, 4355, 13254, 220, 2366,
      15, 2392, 4355, 4272, 11626, 220, 2366, 17, 2392, 4355, 13254, 6650, 2392, 4355,
      13254, 220, 679, 24, 2732, 18464, 7816, 3135, 22170, 1578, 27575, 26496, 24599,
      2287, 11, 64912, 263, 11, 9362, 4194, 12, 4194, 3915, 701, 6933, 2686, 4194,
      12, 4194, 4387, 3813, 12978, 11764, 11302, 48932, 44228]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7427'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba99fd81ef953-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:17:41 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '171'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 25e3aaf7233e8da023d9338be79420e0
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"Tesla
      revenue 2022 - Google SearchPlease click here if you are not redirected within
      a few seconds. Accessibility LinksSkip to main content Turn off continuous scrollingTurn
      on continuous scrollingAccessibility helpAccessibility feedback Press / to jump
      to the search boxTesla revenue 2022 See moreDeleteDeleteReport inappropriate
      predictions Filters and Topics Filters and TopicsNewsImagessolarytdAbout 20,900,000
      results (0.47 seconds) Search ResultsFeatured snippet from the web81.5 billion
      U.S. dollarsTesla''s revenue grew to nearly 81.5 billion U.S. dollars in the
      2022 fiscal year, a 51 percent increase from the previous year.... Tesla''s
      revenue from FY 2008 to FY 2022 (in million U.S. dollars)Fiscal yearRevenue
      in million U.S. dollars202281,462202153,823202031,536201924,5789 more rows\u2022Mar
      17, 2023Tesla''s revenue 2008-2022 - StatistaStatistahttps://www.statista.com
      \u203a ... \u203a Vehicles & Road TrafficStatistahttps://www.statista.com \u203a
      ... \u203a Vehicles & Road TrafficAbout featured snippets\u2022FeedbackPeople
      also askYou will see more English now. What is Tesla annual revenue?Does Tesla
      make a profit 2022?What is Tesla''s revenue in 2023?FeedbackTesla Revenue 2010-2023
      | TSLAMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueTesla annual revenue for 2022 was $81.462B, a 51.35% increase from 2021.
      Tesla annual revenue for 2021 was $53.823B, a 70.67% increase from 2020. Tesla
      annual\u00a0...\u200eNet Income \u00b7 \u200eGross Profit \u00b7 \u200eAssets
      & Liabilities \u00b7 \u200eEPS - Earnings Per ShareTesla made more money in
      2022 than ever before, but its ... The Vergehttps://www.theverge.com \u203a
      tesla-q4-2022-earnings-re...The Vergehttps://www.theverge.com \u203a tesla-q4-2022-earnings-re...Jan
      25, 2023 \u2014 Tesla raked in over $81 billion in revenue in 2022 and has more
      money on hand than ever before. But flagging demand and major price cuts put\u00a0...
      Images for Tesla revenue 2022You will see more English now. Guided Search FiltersFilter
      by featureFilter by featuretesla semitesla modeltesla stocktesla salessemi truckelon
      musktesla vehiclequarterly earningscar saleselectricView allSelect an image
      to give feedbackFeedbackView allTesla reports record revenue and beats on earningsCNBChttps://www.cnbc.com
      \u203a tesla-tsla-earnings-q4-2022CNBChttps://www.cnbc.com \u203a tesla-tsla-earnings-q4-2022Jan
      25, 2023 \u2014 Tesla just reported fourth-quarter earnings for 2022 including
      revenue of $24.32 billion, and earnings per share of $1.19.Tesla Reports Record
      Revenue, Deliveries in Q4 2022Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Jan 30, 2023 \u2014 Tesla''s total revenue stood at
      $24.3 billion in Q4 2022 with 37% YoY growth. Tesla deployed 2.46 GWh of energy
      storage during Q4,\u00a0... Tesla made an annual profit of $12.6 billion in
      2022Ars Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...Ars
      Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...
      Jan 25, 2023 \u2014 Tesla published its financial results for the fourth quarter
      of 2022 on Wednesday afternoon. The company brought in $24.3 billion in revenue\u00a0...
      Tesla''s profits soared to a record \u2013 but challenges are ...NPRhttps://www.npr.org
      \u203a 2023/01/25 \u203a teslas-profits-soared...NPRhttps://www.npr.org \u203a
      2023/01/25 \u203a teslas-profits-soared...Jan 25, 2023 \u2014 Tesla reported
      record profits and record revenues for 2022, as the company heads into a new
      year facing a number of steep challenges. Tesla Revenue (Quarterly): 23.33B
      for March 31, 2023YChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a
      revenuesYChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a revenuesHistorical
      Revenue (Quarterly) Data ; March 31, 2023, 23.33B ; December 31, 2022, 24.32B
      ; September 30, 2022, 21.45B ; June 30, 2022, 16.93B.Elon Musk''s Tesla finished
      uneven 2022 with strong 4th ... Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Jan 26, 2023 \u2014 For all of 2022, Tesla''s
      revenue rose to $81.5 billion, a 51% jump over 2021. Tesla made $3.69 billion
      in its fourth quarter, an adjusted $1.19\u00a0...People also askYou will see
      more English now. FeedbackRelated searchesYou will see more English now. Tesla
      revenue ChartFeedbacktesla revenue and profittesla revenue 2023tesla revenue
      in 2021tesla revenue 2020tesla net profit 2022tesla revenue growthtesla revenue
      2019Page NavigationMore resultsTry again Footer Links94566, Pleasanton, CA\u00a0-\u00a0From
      your IP address\u00a0-\u00a0Update locationHelpSend feedbackPrivacyTerms\"\"\"
      Using the above text, answer the following question: \"What is the revenue of
      Tesla in 2022?\" -- if the question cannot be answered using the text, summarize
      the text."}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5197'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yQW0vDQBSE3/0Vy0HxZROySRPrvumLWEoRVBBEynZzmqzd7AnZ0wst/e8S8PY8
        Mx8zcwJXgwbbGrZd75Obh+fF5PVtPm9mnO82j/vbe3+snxYvODs2IIFWn2j5O5Fa6nqP7CiABDug
        YaxBq2o6UWVVVbmEjmr0oKHpOSnSMuHtsKIkKzIFErbRNAj6BP1AXc9Lpg2GCFoVairhD/4rFIUE
        Jjb+n7VUZwm2JWcxgn4/QYfxhzuQR9BgYnSRTeCxJQXGMC64s5aG2oVGMAluUTAeWIoXjN5cRzHg
        DsMWhQsiz/Jc7E0Ul1OVTqpcrJz3joIU+9bZVrgojChVWpRXwoXxh4hiPVA3JlUKZwlrF1xsl6NE
        ATREph4kuFDjAXR2/jhffAEAAP//AwB/l5QniwEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7ba9a22aedf953-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:17:45 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '3055'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '88762'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 825ms
      x-request-id:
      - ba7afedebf0f706c762ca19b86a14721
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are now the following python function: ```# This function takes a JSON string
      and ensures that it is parseable and fully compliant with the provided schema.
      If an object or field specified in the schema isn''t contained within the correct
      JSON, it is omitted. The function also escapes any double quotes within JSON
      string values to ensure that they are valid. If the JSON string contains any
      None or NaN values, they are replaced with null before being parsed.\ndef fix_json(json_string:
      str, schema:str=None) -> str:```\n\nOnly respond with your `return` value."},
      {"role": "user", "content": "''''''There are no further commands to execute
      as I have completed my task and shut down.'''''', ''''''\n{\n    \"command\":
      {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg
      name\": \"value\"\n        }\n    },\n    \"thoughts\":\n    {\n        \"text\":
      \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short
      bulleted\n- list that conveys\n- long-term plan\",\n        \"criticism\": \"constructive
      self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    }\n}\n''''''"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yOy2oCQRBF9/mKojbZ9Mj4Gk3/gHmAhkhWIUjPdKkdZ7qGrhqNyPx7EBLcZHu4
        93AuGDxarPZOq6ats9livXwpi5zyWbel0Vsd3/3cu7QqaPGIBrn8okp/H4OKm7YmDRzRYJXIKXm0
        w2I+GU6LYjY32LCnGi3uWs3Gg2mmXSo5y8f5EA124naE9oJt4qbVjfKBoqAdTScGb+4bfzCorK6+
        kfm4N1jtOVQkaD8u2JD8WRPXhBadSBB1Ua+NHJXitf/pvgHhlM4Gyk7hzF2CRNJyFALPJBBZQYga
        UIaSwMHR1cHD83q1BNEU4m4ArzU5IWgTH4P/dwNbTtDQVXLidIBT0P0Ae4PbEIPsN4mccESLotyi
        wRA9faPN+8/+7gcAAP//AwCHak13nQEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baa04fa81fb4c-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:01 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '3137'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89719'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 186ms
      x-request-id:
      - fa99abded75cf3fedc776f774202f412
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that nothing new has happened since my creation.''}\n\"\"\"\n\nLatest
      Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '740'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPQUsDMRBG7/6KMOds2e22a83NgxQvKoggiEianTax2UzMzFJL2f8uFaXXB9/j
        fScIPRhw3oobcqyu188PT/OXfBjrm691cfZuOy/7OD72vn0FDbT5RCd/i5mjIUeUQAk0uIJWsAfT
        dKtFs+y6VathoB4jGNhlqdrZspKxbKiq27oBDSPbHYI5QS40ZPkQ2mNiMM2803BxX/hSg5DYeCGL
        ZtLgPAWHDObtBAPyv7VQRDBgmQOLTXJupCSYzv23rKziIwsOWt2rgs7GqMRbUYnEh7RTCQ/KW1be
        5owJe8UhOVTDUf1eDZRmMGnYhhTYfxS0TAkMsFAGDSH1+A2mnt6nqx8AAAD//wMApXvFamYBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baa25381117ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:04 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1609'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89832'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 112ms
      x-request-id:
      - 989aa5b7170564768345a48ba22c0a4c
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are now the following python function: ```# This function takes a JSON string
      and ensures that it is parseable and fully compliant with the provided schema.
      If an object or field specified in the schema isn''t contained within the correct
      JSON, it is omitted. The function also escapes any double quotes within JSON
      string values to ensure that they are valid. If the JSON string contains any
      None or NaN values, they are replaced with null before being parsed.\ndef fix_json(json_string:
      str, schema:str=None) -> str:```\n\nOnly respond with your `return` value."},
      {"role": "user", "content": "''''''There are no further commands to execute
      as I have completed my task and shut down.'''''', ''''''\n{\n    \"command\":
      {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg
      name\": \"value\"\n        }\n    },\n    \"thoughts\":\n    {\n        \"text\":
      \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short
      bulleted\n- list that conveys\n- long-term plan\",\n        \"criticism\": \"constructive
      self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    }\n}\n''''''"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yOTU/CQBCG7/6KyVy8LA2VD2FvxoPBA6DEgzGGbNuhXWl3mp0pSEj/uyHRcPH6
        5H2fPGf0BVrMK6d509aD+6fN8jWT/dvjcrVIo3/flOv1wj3s/Fxf0CBnX5Tr7yPJuWlrUs8BDeaR
        nFKBNp3OxulkOp1NDDZcUI0Wy1YHo2Qy0C5mPBiOhika7MSVhPaMbeSm1a3ynoKgvZuMDV7dVz43
        qKyuvpLZqDeYV+xzErQfZ2xI/qyRa0KLTsSLuqCXRg5K4dK/uG1AOMaTgaxTOHEXIZK0HISgYBII
        rCBEDShDRuDg4GpfwPNmtQTR6EOZwLomJwRt5IMv/t3AjiM0dJEcOe7h6LVKsDe488FLtY3khANa
        FOUWDfpQ0DfaYf/Z3/wAAAD//wMA+PNoGZ0BAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baa33cefc17ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:07 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2409'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89720'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 186ms
      x-request-id:
      - 68e742acbb0b05c7e0e3ed000f80d499
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that nothing new has happened since my creation.''}\n\"\"\"\n\nLatest
      Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '740'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPMU/DMBBGd36FdbNTJbQN1FsZqDrAAEOREEKucyQG587krkCp8t9REajrk76n
        9x0gNuAgdF5Dn1Nxsbq/3dw8XA/rltLmW/P7SvFjuV8s764ULPD2FYP+LSaB+5xQIxNYCAN6xQZc
        VV/OqnldL0oLPTeYwEGbtZhO5oXuhi0X5bSswMJOfIvgDpAH7rM+K78hCbjqvLZwcp/43IKy+nQi
        s2q0EDqOAQXc4wF6lH/rwAnBgReJop6O+YFJkY79SzHeyF4Ue2vWZsDgUzLaeTXE2kVqDeGn6byY
        zueMhI2RSAFNvze/VyPTBEYLL5GidM8DemECB6KcwUKkBr/AlePTePYDAAD//wMAil3M+mYBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baa54194917ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:12 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1435'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89832'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 112ms
      x-request-id:
      - 6d0dd846f2905a2ec36029f2707be18f
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are now the following python function: ```# This function takes a JSON string
      and ensures that it is parseable and fully compliant with the provided schema.
      If an object or field specified in the schema isn''t contained within the correct
      JSON, it is omitted. The function also escapes any double quotes within JSON
      string values to ensure that they are valid. If the JSON string contains any
      None or NaN values, they are replaced with null before being parsed.\ndef fix_json(json_string:
      str, schema:str=None) -> str:```\n\nOnly respond with your `return` value."},
      {"role": "user", "content": "''''''There are no further commands to execute
      as I have completed my task and shut down.'''''', ''''''\n{\n    \"command\":
      {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg
      name\": \"value\"\n        }\n    },\n    \"thoughts\":\n    {\n        \"text\":
      \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short
      bulleted\n- list that conveys\n- long-term plan\",\n        \"criticism\": \"constructive
      self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    }\n}\n''''''"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yOy0oDQRBF935FURs3nWFiXqZ3LiQY8AEuVESkpqeSdJzparpr1Bjy7zIQdeP2
        1q1zzx59jRbdhtS1sRnMFvc3T9vZ7bVenM/KT/5a+kfNy8vx3aJ8QINSbdnp8aNw0saG1UtAgy4x
        Kddoh9Pz8XAync7PDLZSc4MW11EHo2Iy0C5VMihH5RANdpnWjHaPMUkb9VXljUNGezYZG/xj/+aj
        uUEVpeavOR8dDLqNeMcZ7fMeW84/1CQNo0XK2WeloL2jBOXQ+1+dtpAlpZ2BqlPYSZfAh9gp+AxB
        FAjeqfE1LO9vbyBr8mFdwJUCxciUMqhAxUDgpK18oF4UZAV07AKFGghq7/oLpV0Bdw1TZohJ3n3N
        /w3AShK03LM/JL3Bh9dNgQeDKx983rwmpiwBLWaViAZ9qPkTbXl4OZx8AwAA//8DACLuVQrKAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baa60cf6317ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:16 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '3995'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89719'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 186ms
      x-request-id:
      - d2c582b0c39d6e7a11169087cabf21d2
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "user", "content": "Determine which next command to use, and
      respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '9582'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPS2vCQBSF9/0Vl7ueSKLGxyxdtFTERSsUWoqMM1cTzcwNMzfVIvnvRehrfc75
        +M4Va4cabWXE+rbJpg/Pa6LlkeJruVkU6/VyOM/j08t5cb9aoULeHcnK92Jg2bcNSc0BFdpIRsih
        LiazcVFOJvOZQs+OGtR4aCUbDcpMurjjLB/lBSrskjkQ6iu2kX0rW+EThYR6mI8LhX/w36CYKhQW
        0/yrlrNeoa24tpRQv13RU/rhRm4INZqU6iQmyM2Sg1C4PdhUFAlMJAgM+y5KRREse2+CSyAMdCHb
        CYFJ8AiV+SD4ViIH/hPEpBOY4CBVnYDjcxhgr3BfhzpV20gmcUCNSbhFhXVwdEGd9+/93RcAAAD/
        /wMAjOwxWXUBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baa81cb8f17ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:19 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1905'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86617'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.255s
      x-request-id:
      - 8cc4c6addd9d5ec300faaf8cae11f37d
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\n{''role'':
      ''system'', ''content'': ''This reminds you of these events from your past:
      \\nAs a system, I recall that nothing new has happened since my creation.''}\n\"\"\"\n\nLatest
      Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '740'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SPTUsDMRCG7/6KMOds2bVfmpsXpQil4sGDiKTZcRO7mYk7U2op+9+lovT6wPvw
        vCdILTgI0WvIpa+WD8/rGL/S/pHCTDaH+253+9LFDT7Jag0WePuJQf8Wk8C59KiJCSyEAb1iC65Z
        3Mya+WJZNxYyt9iDg65oNZ3MK90PW67qad2Ahb34DsGdoAyci74r75AEXHO9sHBxX/jcgrL6/kJm
        zWghRE4BBdzrCTLKv3XgHsGBF0minvTcyKRI5/47Md7IURSzNSszYPB9bzR6NcQaE3WG8GCiFxN9
        KUjYGkkU0OSj+b2amCYwWvhIlCS+D+iFCRyIcgELiVr8BlePb+PVDwAAAP//AwBlhnxbZgEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baa95a82d17ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:22 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1585'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89832'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 112ms
      x-request-id:
      - 9c32ca4ff22bbcbe2271c598193249b8
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "user", "content": "Determine which next command to use, and
      respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '9925'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPzWrDMBCE732KZc9ysOPEKXqB0hxaSkMPLSWo0iZyYmmNtE5dgt+9BNKf88x8
        fHPG1qFG643Y0HfF6u754eB9s+DXzXr9RMb06fGlGd24P1lUyB8HsnJdzCyHviNpOaJCm8gIOdRV
        c7uols2qrBUGdtShxn0vRT1bFjKkDy7KuqxQ4ZDNnlCfsU8cetkKHylm1POqbBT+wX+DaqVQWEz3
        rzqvJ4XWc2spo347Y6D8w03cEWo0ObdZTJSLJUeheHmw8ZQITCKIDLshiacElkMw0WUQBhrJDkJg
        MtyDNyeCqxI5CF8gJh/BRAfZDwKOP+MMJ4W7NrbZbxOZzBE1ZuEeFbbR0Yi6nN6nm28AAAD//wMA
        UW/OLnUBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baaa12b9917ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:24 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1874'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86628'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.248s
      x-request-id:
      - 10ef45f50fd66e8f45e2b861813e92fb
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are now the following python function: ```# This function takes a JSON string
      and ensures that it is parseable and fully compliant with the provided schema.
      If an object or field specified in the schema isn''t contained within the correct
      JSON, it is omitted. The function also escapes any double quotes within JSON
      string values to ensure that they are valid. If the JSON string contains any
      None or NaN values, they are replaced with null before being parsed.\ndef fix_json(json_string:
      str, schema:str=None) -> str:```\n\nOnly respond with your `return` value."},
      {"role": "user", "content": "''''''There are no further commands to execute
      as I have completed my task and shut down.'''''', ''''''\n{\n    \"command\":
      {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg
      name\": \"value\"\n        }\n    },\n    \"thoughts\":\n    {\n        \"text\":
      \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short
      bulleted\n- list that conveys\n- long-term plan\",\n        \"criticism\": \"constructive
      self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    }\n}\n''''''"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2yOzU5CMRBG9z7FZDZuCuFHFPoC/kZNdKExhpR24FZuO01nAJXcdzckGjZuT77v
        5OwxBrToG6c+lbZ3cfl034bb4dXo9fvueRr8rPgyK/VlnF4IDfLig7z+PvqeU2lJI2c06Cs5pYB2
        eD49G07OLwYTg4kDtWhxVbQ37k96uqkL7g3GgyEa3IhbEdo9lsqp6Fx5TVnQjiZnBo/uI58ZVFbX
        Hsl03Bn0DUdPgvZtj4nkz1q5JbToRKKoy3po5KyUD/3XpwmEa/0ysNgofPGmQiUpnIUgMAlkVhCi
        BMqwIHCwdW0McPP0cA+iNeZVHx5bckJQKm9j+HcDS66Q6CDZcV3DLmrTx87gMuYozbySE85oUZQL
        Gow50CfaQffenfwAAAD//wMAtffDcZ0BAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baaaec97c17ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:27 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2552'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89620'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 252ms
      x-request-id:
      - b5feb10b4c5a4e8f6b055f7bf24217f2
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nAs a system, I recall that nothing
      new has happened since my creation."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I will search for the revenue of Tesla in 2022 on Google.\",\n        \"reasoning\":
      \"I need to find the revenue of Tesla in 2022 to complete my task. Google is
      a reliable source of information.\",\n        \"plan\": \"- Use the ''get_text_summary''
      command to search for the revenue of Tesla in 2022 on Google.\\n- Write the
      revenue to a file named ''output.txt''.\",\n        \"criticism\": \"I need
      to ensure that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was $81.462 billion, which represents a 51.35% increase from 2021."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I will write the revenue of Tesla in 2022 to a file named
      ''output.txt''.\",\n        \"reasoning\": \"I need to save the revenue of Tesla
      in 2022 to a file so that I can complete my task.\",\n        \"plan\": \"-
      Use the ''write_to_file'' command to write the revenue of Tesla in 2022 to a
      file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure that
      the file is written correctly and that the information is accurate.\",\n        \"speak\":
      \"I will write the revenue of Tesla in 2022 to a file named ''output.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"output.txt\",\n            \"text\": \"81462000000\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I will now shut down.\",\n        \"reasoning\": \"I have successfully
      found the revenue of Tesla in 2022 and saved it to a file. My task is complete.\",\n        \"plan\":
      \"- Use the ''task_complete'' command to shut down.\",\n        \"criticism\":
      \"I need to ensure that I have completed all necessary tasks and that my output
      is accurate.\",\n        \"speak\": \"I have completed my task. I will now shut
      down.\"\n    },\n    \"command\": {\n        \"name\": \"task_complete\",\n        \"args\":
      {\n            \"reason\": \"Task complete. Revenue of Tesla in 2022 saved to
      file ''output.txt''.\"\n        }\n    }\n}"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "user", "content": "Determine which next command to use, and
      respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}, {"role": "assistant", "content": "There are no further
      commands to execute as I have completed my task and shut down."}, {"role": "system",
      "content": "Command None returned: Error: ''NoneType'' object has no attribute
      ''lower''"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "There are no further commands to execute as I have completed my task and shut
      down."}, {"role": "system", "content": "Command None returned: Error: ''NoneType''
      object has no attribute ''lower''"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"},
      {"role": "assistant", "content": "There are no further commands to execute as
      I have completed my task and shut down."}, {"role": "system", "content": "Command
      None returned: Error: ''NoneType'' object has no attribute ''lower''"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10268'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yPTU8CMRRF9/6Kl7fuEMYRBrs1UdzgQkkMxpjSPujAtG/SvhEMmf9uSPBjfe89
        OfeEjUON1huxoWuL+uF50fWvd/eJFsvdfLpsF/On1cHzpFpVqJDXO7JyWYwsh64laTiiQpvICDnU
        5XR2U06m9fhWYWBHLWrcdlJUo0khfVpzMa7GJSrss9kS6hN2iUMnH8J7ihn1dVmXCv/gv0FZKxQW
        0/6rzmaDQuu5sZRRv50wUP7hJm4JNZqcmywmytmSo1A8P3jxlAhMIogMmz6JpwSWQzDRZRAGOpLt
        hcBkeARvPgkuSuQgfIGYvAcTHWTfCzg+xBEOCjdNbLL/SGQyR9SYhTtU2ERHR9Tj4X24+gYAAP//
        AwAYjpordQEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7baac6db1017ea-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:18:30 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '1827'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86640'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.24s
      x-request-id:
      - 8397d5498a2d791b6879b1925d4e5826
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3692, 25, 3788, 1129, 2185, 5831, 916, 24042, 44882, 61561,
      288, 4355, 10, 265, 7287, 10, 2366, 17, 23886, 2262, 961, 2, 16, 25, 28298,
      13254, 220, 2366, 17, 482, 5195, 7694, 5618, 4299, 1618, 422, 499, 527, 539,
      50028, 2949, 264, 2478, 6622, 13, 81372, 26496, 36234, 311, 1925, 2262, 12268,
      1022, 19815, 39076, 19952, 389, 19815, 39076, 86469, 1520, 86469, 11302, 8612,
      611, 311, 7940, 311, 279, 2778, 3830, 90541, 13254, 220, 2366, 17, 3580, 810,
      6571, 6571, 10577, 33781, 20492, 46112, 323, 41994, 46112, 323, 41994, 14710,
      14562, 11823, 220, 2366, 17, 716, 4430, 10714, 220, 508, 11, 7467, 11, 931,
      3135, 320, 15, 13, 1806, 6622, 8, 7694, 18591, 53043, 44165, 505, 279, 3566,
      5932, 13, 20, 7239, 549, 815, 13, 11441, 90541, 596, 13254, 14264, 311, 7154,
      220, 5932, 13, 20, 7239, 549, 815, 13, 11441, 304, 279, 220, 2366, 17, 20323,
      1060, 11, 264, 220, 3971, 3346, 5376, 505, 279, 3766, 1060, 13, 2947, 220, 1114,
      11, 220, 2366, 18, 90541, 596, 13254, 220, 1049, 23, 12, 2366, 17, 482, 12442,
      9265, 16257, 9265, 2485, 1129, 2185, 31187, 9265, 916, 46733, 2564, 46733, 56120,
      612, 9728, 38081, 16257, 9265, 2485, 1129, 2185, 31187, 9265, 916, 46733, 2564,
      46733, 56120, 612, 9728, 38081, 10714, 15109, 69742, 6806, 36448, 16298, 1101,
      2610, 2675, 690, 1518, 810, 6498, 1457, 13, 3639, 374, 28298, 9974, 13254, 30,
      22186, 28298, 1304, 264, 11626, 220, 2366, 17, 30, 3923, 374, 28298, 596, 13254,
      304, 220, 2366, 18, 30, 36448, 90541, 38493, 220, 679, 15, 12, 2366, 18, 765,
      350, 8143, 1428, 582, 4744, 79717, 2485, 1129, 2185, 62925, 4744, 79717, 5181,
      46733, 23301, 46733, 27223, 46733, 13254, 20122, 4744, 79717, 2485, 1129, 2185,
      62925, 4744, 79717, 5181, 46733, 23301, 46733, 27223, 46733, 13254, 90541, 9974,
      13254, 369, 220, 2366, 17, 574, 400, 5932, 13, 20911, 33, 11, 264, 220, 3971,
      13, 1758, 4, 5376, 505, 220, 2366, 16, 13, 28298, 9974, 13254, 369, 220, 2366,
      16, 574, 400, 4331, 13, 23848, 33, 11, 264, 220, 2031, 13, 3080, 4, 5376, 505,
      220, 2366, 15, 13, 28298, 9974, 4194, 1131, 79338, 7099, 33620, 9787, 54664,
      38, 2177, 58882, 9787, 54664, 27977, 612, 14851, 8623, 9787, 54664, 46277, 482,
      469, 15202, 3700, 12037, 90541, 1903, 810, 3300, 304, 220, 2366, 17, 1109, 3596,
      1603, 11, 719, 1202, 2564, 578, 6383, 713, 2485, 1129, 2185, 42901, 424, 713,
      916, 46733, 51309, 4355, 52708, 19, 12, 2366, 17, 12, 10326, 826, 5621, 1131,
      791, 6383, 713, 2485, 1129, 2185, 42901, 424, 713, 916, 46733, 51309, 4355,
      52708, 19, 12, 2366, 17, 12, 10326, 826, 5621, 1131, 18820, 220, 914, 11, 220,
      2366, 18, 2001, 28298, 436, 7897, 304, 927, 400, 5932, 7239, 304, 13254, 304,
      220, 2366, 17, 323, 706, 810, 3300, 389, 1450, 1109, 3596, 1603, 13, 2030, 5292,
      3252, 7631, 323, 3682, 3430, 15455, 2231, 4194, 1131, 12041, 369, 28298, 13254,
      220, 2366, 17, 2675, 690, 1518, 810, 6498, 1457, 13, 12433, 291, 7694, 46112,
      5750, 555, 4668, 5750, 555, 4668, 2392, 4355, 5347, 3695, 4355, 5708, 87698,
      11092, 2392, 4355, 1646, 2392, 4355, 6763, 65467, 3167, 74, 33115, 398, 28744,
      325, 15202, 1934, 64465, 860, 682, 3461, 459, 2217, 311, 3041, 11302, 36448,
      860, 682, 90541, 6821, 3335, 13254, 323, 34427, 389, 24608, 29768, 5002, 2485,
      1129, 2185, 22832, 9081, 916, 46733, 51309, 4355, 2442, 52742, 12, 10326, 826,
      52708, 19, 12, 2366, 17, 29768, 5002, 2485, 1129, 2185, 22832, 9081, 916, 46733,
      51309, 4355, 2442, 52742, 12, 10326, 826, 52708, 19, 12, 2366, 17, 18820, 220,
      914, 11, 220, 2366, 18, 2001, 28298, 1120, 5068, 11999, 58414, 24608, 369, 220,
      2366, 17, 2737, 13254, 315, 400, 1187, 13, 843, 7239, 11, 323, 24608, 824, 4430,
      315, 400, 16, 13, 777, 844, 288, 4355, 29140, 13896, 38493, 11, 65752, 552,
      304, 1229, 19, 220, 2366, 17, 14431, 2837, 8483, 2485, 1129, 2185, 44176, 2837,
      61564, 916, 46733, 51309, 4355, 52708, 19, 2269, 74276, 1131, 14431, 2837, 8483,
      2485, 1129, 2185, 44176, 2837, 61564, 916, 46733, 51309, 4355, 52708, 19, 2269,
      74276, 1131, 18820, 220, 966, 11, 220, 2366, 18, 2001, 28298, 596, 2860, 13254,
      14980, 520, 400, 1187, 13, 18, 7239, 304, 1229, 19, 220, 2366, 17, 449, 220,
      1806, 4, 44188, 56, 6650, 13, 28298, 27167, 220, 17, 13, 2790, 480, 1671, 315,
      4907, 5942, 2391, 1229, 19, 11, 4194, 1131, 28298, 1903, 459, 9974, 11626, 315,
      400, 717, 13, 21, 7239, 304, 220, 2366, 17, 84073, 7146, 3074, 2485, 1129, 277,
      5455, 2174, 3074, 916, 46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309,
      4355, 27975, 12, 1131, 84073, 7146, 3074, 2485, 1129, 277, 5455, 2174, 3074,
      916, 46733, 9515, 46733, 220, 2366, 18, 14, 1721, 46733, 51309, 4355, 27975,
      12, 1131, 4448, 220, 914, 11, 220, 2366, 18, 2001, 28298, 4756, 1202, 6020,
      3135, 369, 279, 11999, 8502, 315, 220, 2366, 17, 389, 8079, 13658, 13, 578,
      2883, 7263, 304, 400, 1187, 13, 18, 7239, 304, 13254, 4194, 1131, 28298, 596,
      22613, 87055, 311, 264, 3335, 1389, 719, 11774, 527, 2564, 45, 6616, 2485, 1129,
      2185, 1276, 652, 2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309,
      14833, 10039, 30322, 34119, 1636, 1131, 45, 6616, 2485, 1129, 2185, 1276, 652,
      2726, 46733, 220, 2366, 18, 14, 1721, 14, 914, 46733, 51309, 14833, 10039, 30322,
      34119, 1636, 1131, 18820, 220, 914, 11, 220, 2366, 18, 2001, 28298, 5068, 3335,
      22613, 323, 3335, 30466, 369, 220, 2366, 17, 11, 439, 279, 2883, 14971, 1139,
      264, 502, 1060, 13176, 264, 1396, 315, 32366, 11774, 13, 28298, 38493, 320,
      87708, 398, 1680, 220, 1419, 13, 1644, 33, 369, 5587, 220, 2148, 11, 220, 2366,
      18, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733, 350, 8143, 32,
      46733, 30466, 56, 65978, 2485, 1129, 5759, 7183, 916, 46733, 5220, 46733, 350,
      8143, 32, 46733, 30466, 644, 8149, 1684, 1139, 28298, 38493, 320, 87708, 398,
      8, 2737, 13970, 828, 505, 220, 679, 15, 11, 27223, 323, 10691, 13, 2564, 6250,
      220, 966, 11, 220, 2366, 17, 11, 220, 1691, 13, 1774, 33, 13, 5651, 220, 966,
      11, 220, 2366, 17, 11, 220, 845, 13, 6365, 33, 5253, 12490, 40638, 596, 28298,
      8220, 61437, 220, 2366, 17, 449, 3831, 220, 19, 339, 2564, 19816, 3778, 12,
      24137, 1543, 2485, 1129, 2185, 53247, 1543, 916, 46733, 5557, 46733, 220, 2366,
      18, 14, 1721, 14, 1627, 83489, 3778, 12, 24137, 1543, 2485, 1129, 2185, 53247,
      1543, 916, 46733, 5557, 46733, 220, 2366, 18, 14, 1721, 14, 1627, 18820, 220,
      1627, 11, 220, 2366, 18, 2001, 1789, 682, 315, 220, 2366, 17, 11, 28298, 596,
      13254, 16392, 311, 400, 5932, 13, 20, 7239, 11, 264, 220, 3971, 4, 7940, 927,
      220, 2366, 16, 13, 28298, 1903, 400, 18, 13, 3076, 7239, 304, 1202, 11999, 8502,
      11, 459, 24257, 400, 16, 13, 777, 4194, 1131, 16298, 1101, 2610, 2675, 690,
      1518, 810, 6498, 1457, 13, 37957, 11948, 27573, 2675, 690, 1518, 810, 6498,
      1457, 13, 28298, 13254, 21964, 36448, 2392, 4355, 13254, 323, 2848, 1468, 288,
      4355, 13254, 220, 2366, 18, 2392, 4355, 13254, 304, 220, 2366, 16, 2392, 4355,
      13254, 220, 2366, 15, 2392, 4355, 4272, 11626, 220, 2366, 17, 2392, 4355, 13254,
      6650, 2392, 4355, 13254, 220, 679, 24, 2732, 18464, 7816, 3135, 22170, 1578,
      27575, 26496, 24599, 2287, 11, 64912, 263, 11, 9362, 4194, 12, 4194, 3915, 701,
      6933, 2686, 4194, 12, 4194, 4387, 3813, 12978, 11764, 11302, 48932, 44228]],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7064'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AAAA//8DALIkoRjnIAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7babe22fbefa1a-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:19:14 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '47'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-reset-requests:
      - 20ms
      x-request-id:
      - 89da148149ba11b7f3585c9cd2a94b5a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"Tesla
      revenue 2022 - Google SearchPlease click here if you are not redirected within
      a few seconds. Accessibility LinksSkip to main content Turn off continuous scrollingTurn
      on continuous scrollingAccessibility helpAccessibility feedback Press / to jump
      to the search boxTesla revenue 2022 See moreDeleteDeleteReport inappropriate
      predictions Filters and Topics Filters and TopicsNewsImagesvs 2022per shareAbout
      20,900,000 results (0.37 seconds) Search ResultsFeatured snippet from the web81.5
      billion U.S. dollarsTesla''s revenue grew to nearly 81.5 billion U.S. dollars
      in the 2022 fiscal year, a 51 percent increase from the previous year. Mar 17,
      2023Tesla''s revenue 2008-2022 - StatistaStatistahttps://www.statista.com \u203a
      ... \u203a Vehicles & Road TrafficStatistahttps://www.statista.com \u203a ...
      \u203a Vehicles & Road TrafficAbout featured snippets\u2022FeedbackPeople also
      askYou will see more English now. What is Tesla annual revenue?Does Tesla make
      a profit 2022?What is Tesla''s revenue in 2023?FeedbackTesla Revenue 2010-2023
      | TSLAMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueMacrotrendshttps://www.macrotrends.net \u203a stocks \u203a charts \u203a
      revenueTesla annual revenue for 2022 was $81.462B, a 51.35% increase from 2021.
      Tesla annual revenue for 2021 was $53.823B, a 70.67% increase from 2020. Tesla
      annual\u00a0...\u200eNet Income \u00b7 \u200eGross Profit \u00b7 \u200eAssets
      & Liabilities \u00b7 \u200eEPS - Earnings Per ShareTesla made more money in
      2022 than ever before, but its ... The Vergehttps://www.theverge.com \u203a
      tesla-q4-2022-earnings-re...The Vergehttps://www.theverge.com \u203a tesla-q4-2022-earnings-re...Jan
      25, 2023 \u2014 Tesla raked in over $81 billion in revenue in 2022 and has more
      money on hand than ever before. But flagging demand and major price cuts put\u00a0...
      Images for Tesla revenue 2022You will see more English now. Guided Search FiltersFilter
      by featureFilter by featuretesla semitesla stocksemi trucktesla modeltesla saleselon
      muskquarterly earningsearnings reportelectricView allSelect an image to give
      feedbackFeedbackView allTesla reports record revenue and beats on earningsCNBChttps://www.cnbc.com
      \u203a tesla-tsla-earnings-q4-2022CNBChttps://www.cnbc.com \u203a tesla-tsla-earnings-q4-2022Jan
      25, 2023 \u2014 Tesla just reported fourth-quarter earnings for 2022 including
      revenue of $24.32 billion, and earnings per share of $1.19.Tesla Reports Record
      Revenue, Deliveries in Q4 2022Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Counterpoint Researchhttps://www.counterpointresearch.com
      \u203a tesla-q4-finan...Jan 30, 2023 \u2014 Tesla''s total revenue stood at
      $24.3 billion in Q4 2022 with 37% YoY growth. Tesla deployed 2.46 GWh of energy
      storage during Q4,\u00a0... Tesla made an annual profit of $12.6 billion in
      2022Ars Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...Ars
      Technicahttps://arstechnica.com \u203a cars \u203a 2023/01 \u203a tesla-made-...
      Jan 25, 2023 \u2014 Tesla published its financial results for the fourth quarter
      of 2022 on Wednesday afternoon. The company brought in $24.3 billion in revenue\u00a0...
      Tesla''s profits soared to a record \u2013 but challenges are ...NPRhttps://www.npr.org
      \u203a 2023/01/25 \u203a teslas-profits-soared...NPRhttps://www.npr.org \u203a
      2023/01/25 \u203a teslas-profits-soared...Jan 25, 2023 \u2014 Tesla reported
      record profits and record revenues for 2022, as the company heads into a new
      year facing a number of steep challenges. Tesla Revenue (Quarterly): 23.33B
      for March 31, 2023YChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a
      revenuesYChartshttps://ycharts.com \u203a companies \u203a TSLA \u203a revenuesIn
      depth view into Tesla Revenue (Quarterly) including historical data from 2010,
      charts and stats. ... September 30, 2022, 21.45B. June 30, 2022, 16.93B.Elon
      Musk''s Tesla finished uneven 2022 with strong 4th ... Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Austin American-Statesmanhttps://www.statesman.com
      \u203a technology \u203a 2023/01/26Jan 26, 2023 \u2014 For all of 2022, Tesla''s
      revenue rose to $81.5 billion, a 51% jump over 2021. Tesla made $3.69 billion
      in its fourth quarter, an adjusted $1.19\u00a0...People also askYou will see
      more English now. FeedbackRelated searchesYou will see more English now. Tesla
      revenue ChartFeedbacktesla revenue and profittesla revenue 2023tesla revenue
      in 2021tesla revenue 2020tesla net profit 2022tesla revenue growthtesla revenue
      2019Page NavigationMore resultsTry again Footer Links94566, Pleasanton, CA\u00a0-\u00a0From
      your IP address\u00a0-\u00a0Update locationHelpSend feedbackPrivacyTerms\"\"\"
      Using the above text, answer the following question: \"What is the revenue of
      Tesla in 2022?\" -- if the question cannot be answered using the text, summarize
      the text."}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5043'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0yQzUoDQRCE7z5F0yheJiGzcc06Ny/qTUFBRCRMZtvs6Oz0Mt2rkZB3l4h/56r6
        qKotxhYdhs5r6Ic0WVzeXj/06+pG7i/k9upsYS+vV00/2s340qBBXr1Q0O/ENHA/JNLIGQ2GQl6p
        RWdPmxNbny7qE4M9t5TQ4XrQyXxaT3QsK57M5jOLBkfxa0K3xaFwP+hS+ZWyoLNVbQ3+wX+FeWVQ
        WX36Z23mO4Oh4xhI0D1usSf54RZOhA69SBT1WfctOSvl/YLzELi0Ma9BGbQjUNqogTuS5I8FCr1R
        HglihmpWVfDuBTL5kj7gsLHTGlYxpcjZwHsXQwdRwENtjyDm/RNC8Fy4/wIPhd4ijwIf5MsUdwaf
        Y47SLfc+zuhQlAc0GHNLG3Sz3dPu4BMAAP//AwAnAUYAmgEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7babe3e940fa1a-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:19:17 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '2934'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '88800'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 800ms
      x-request-id:
      - efaf450f4fc956435a48c96c1ebcc98c
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-CompanyRevenue, an autonomous agent that specializes in finding the
      reported revenue of a company.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Search ''Tesla
      revenue 2022'' on google\n2. Write the revenue of Tesla in 2022 to a file named
      ''output.txt''. You should write the number without commas and you should not
      use signs like B for billion and M for million.\n3. Use task_complete after
      you''ve written the file.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed in double quotes
      e.g. \"command name\"\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. task_complete: Task Complete (Shutdown), args: \"reason\":
      \"<reason>\"\n7. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8.
      get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n10.
      list_agents: List GPT Agents, args: () -> str\n11. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n12. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created and nothing new
      has happened."}, {"role": "user", "content": "Determine which next command to
      use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I will search for the
      revenue of Tesla in 2022 on Google.\",\n        \"reasoning\": \"I need to find
      the revenue of Tesla in 2022 to complete my task. Google is a reliable source
      of information.\",\n        \"plan\": \"- Use the ''get_text_summary'' command
      to search for the revenue of Tesla in 2022 on Google.\\n- Write the revenue
      to a file named ''output.txt''.\",\n        \"criticism\": \"I need to ensure
      that the information I find is accurate and reliable.\",\n        \"speak\":
      \"I will search for the revenue of Tesla in 2022 on Google.\"\n    },\n    \"command\":
      {\n        \"name\": \"get_text_summary\",\n        \"args\": {\n            \"url\":
      \"https://www.google.com/search?q=Tesla+revenue+2022\",\n            \"question\":
      \"What is the revenue of Tesla in 2022?\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command get_text_summary returned:  \"Result\" : The revenue of
      Tesla in 2022 was nearly $81.5 billion, according to the text."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4699'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6xSyW7bMBC99ysGc/FFNiS7jg19QIsCRvcABarAoKmxxYTiCOQocWLo3wttcKNe
        egiPs7xl+C5ockxRF0p0Wdn55uOPL5q/7T6sJKnud8ntr8/Kyctm9zX//oIR8uGetAwbC81lZUkM
        O4xQe1JCOabJzfZ9sr7ZrLcRlpyTxRRPlcxXi/Vcan/gebyKE4ywDupEmF6w8lxWshd+IBcwTeJ1
        HOEV/NrYbiIUFmWvpeVq00SoCzaaAqa/L1hSGIE9W8IUVQgmiHLSymQn5FoLl8wBAGQoBdenQkKG
        KQzFoUFnaYsZfoInYy08eSMEUhB4eiRXE/ARflKwCoyDZbxcgjAoOBpL4FRJOcy4lqqWhZxltsgw
        +hvfkwrsjDuNJI4obxGCevxvmsAghRIwAlo5OBDUgXKwSshPCSurXM81h9vQU8w6U3vhfQs3A81l
        qVwn443tam/EaBPKqV1yofbU22jZOjwTOn4hB5q9Jy32GTph45hxR/alaiPSTrdHy0FpXXslZJ+n
        9KEi9fDG39njN9EYpeF4/ySpXe6pX117olD50zSEfaOdvUJcJbzan2Z2m6zj4Y1CO7GD5sw12ER4
        NM6EYt9HEVMMwhVGaFxOZ0zj5q559wcAAP//AwDvEz9DJQQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c7babfc3dfafa1a-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 15 May 2023 13:19:34 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-adtx4fhfg1qsiyzdoaxciooj
      openai-processing-ms:
      - '16045'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86491'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.339s
      x-request-id:
      - dcdb21da4a5826b264b8a81cd84e9837
    status:
      code: 200
      message: OK
version: 1
