name: Python CI

on:
  push:
    branches: [ master ]
  pull_request_target:
    branches: [ master, stable ]

concurrency:
  group: ${{ format('ci-{0}', github.head_ref && format('pr-{0}', github.event.pull_request.number) || github.sha) }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      min-python-version: "3.10"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.min-python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.min-python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: flake8

      - name: Check black formatting
        run: black . --check
        if: success() || failure()

      - name: Check isort formatting
        run: isort . --check
        if: success() || failure()

  test:
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Check out pull request target branch
        uses: actions/checkout@v3
#
#      - name: Run unittest tests with coverage
#        run: |
#          echo "benchmarks" > xfail_reasons.log
#        env:
#          CI: true
#
#      - name: Archive xfail_reasons.log if benchmarks changed
#        continue-on-error: true
#        uses: actions/upload-artifact@v2
#        with:
#          name: xfail_reasons_log
#          path: xfail_reasons.log

      - name: Check out pull request content
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr_content

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unittest tests with coverage
        run: |
          pytest --cov=autogpt --cov-report term-missing --cov-branch --cov-report xml --cov-report term ./pr_content
        env:
          CI: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
