name: Python CI

on:
  push:
    branches: [ master, ci-test*]
    paths-ignore:
      - 'tests/Auto-GPT-test-cassettes'
      - 'tests/integration/challenges/current_score.json'
  pull_request_target:
    branches: [ master, stable , ci-test*]

concurrency:
  group: ${{ format('ci-{0}', github.head_ref && format('pr-{0}', github.event.pull_request.number) || github.sha) }}
  cancel-in-progress: ${{ github.event_name == 'pull_request_target' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      min-python-version: "3.10"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Set up Python ${{ env.min-python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.min-python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: flake8

      - name: Check black formatting
        run: black . --check
        if: success() || failure()

      - name: Check isort formatting
        run: isort . --check
        if: success() || failure()

      - name: Check mypy formatting
        run: mypy
        if: success() || failure()

      - name: Check for unused imports and pass statements
        run: |
          cmd="autoflake --remove-all-unused-imports --recursive --ignore-init-module-imports autogpt tests"
          $cmd --check || (echo "You have unused imports or pass statements, please run '${cmd} --in-place'" && exit 1)

  test:
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          submodules: true
          token: ${{ secrets.PAT_REVIEW }}

      - name: Create Pull Request if score changed [PR event only]
        if: ${{ github.event_name == 'pull_request_target' }}
        run: |
          current_date_time=$(date +'%Y%m%d%H%M%S')
          current_score_branch="update-score-${{ github.event.pull_request.number }}-$current_date_time"

          git config --global user.name "Auto-GPT-Bot"
          git config --global user.email "github-bot@agpt.co"
          echo "Current score branch: $current_score_branch" >> tests/integration/challenges/current_score.json
          if ! git diff --quiet -- tests/integration/challenges/current_score.json; then
            echo ${{ secrets.PAT_REVIEW }} | gh auth login --with-token

            git add tests/integration/challenges/current_score.json
            git commit -m "Update score"
            git checkout -b $current_score_branch

            git remote add base https://github.com/${{ github.event.pull_request.base.repo.full_name }}.git
            branches_to_delete=$(gh api repos/${{ github.event.pull_request.base.repo.owner.login }}/${{ github.event.pull_request.base.repo.name }}/git/refs --jq ".[] | select(.ref | startswith(\"refs/heads/update-score-${{ github.event.pull_request.number }}\")) | .ref")
            if [ ! -z "$branches_to_delete" ]; then
              echo "$branches_to_delete" | xargs -I {} gh api -X DELETE /repos/${{ github.event.pull_request.base.repo.owner.login }}/${{ github.event.pull_request.base.repo.name }}/git/{}
            else
              echo "No matching branches found to delete."
            fi
            
            git push base $current_score_branch
            echo "Base branch: ${{ github.event.pull_request.head.ref }}"

            pr_url=$(gh pr create --title "Update Score In Pull Request Number ${{ github.event.pull_request.number }}" \
            --head "${{ github.event.pull_request.base.repo.owner.login }}:$current_score_branch" \
            --base "${{ github.event.pull_request.head.ref }}" \
            --body "This pull request updates the current score of Auto-GPT. Please check the files changed and merge the pull request." \
            --repo ${{ github.event.pull_request.head.repo.full_name }})

            echo "SCORE_CHANGED=true" >> $GITHUB_ENV
            echo "PR_URL=$pr_url" >> $GITHUB_ENV
          else
            echo "The current score didn't change."
          fi

      - name: Apply or remove behaviour change label and comment [PR event only]
        if: ${{ github.event_name == 'pull_request_target' }}
        run: |
          TOKEN=${{ secrets.PAT_REVIEW }}
          REPO=${{ github.repository }}
          echo $TOKEN | gh auth login --with-token
          COMMENT_BODY=""
          SCORE_CHANGED_MESSAGE="The score has been updated, please merge this pull request: ${{ env.PR_URL }}"

          if ${{ env.CASSETTES_MODIFIED }}; then
            echo "Adding label and comment..."
            curl -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO/issues/${{ github.event.pull_request.number }}/labels \
            -d '{"labels":["behaviour change"]}'

            COMMENT_BODY="You changed AutoGPT's behaviour. The cassettes have been updated and will be merged to the submodule when this Pull Request gets merged. "
          fi

          if [[ "${{ env.SCORE_CHANGED }}" == "true" ]]; then
            COMMENT_BODY="$COMMENT_BODY$SCORE_CHANGED_MESSAGE"
          fi

          if [ ! -z "$COMMENT_BODY" ]; then
            gh api repos/$REPO/issues/${{ github.event.pull_request.number }}/comments -X POST -F body="$COMMENT_BODY"
          fi
